{"version":3,"sources":["view-file-text.js"],"names":["window","app","pageOptions","err","fileExt","fileContent","repoID","filePath","fileName","canEditFile","username","FileContent","className","value","this","props","content","readOnly","onChange","updateContent","React","Component","ViewFileText","setState","needSave","addParticipant","seafileAPI","addFileParticipants","then","res","status","isParticipant","getParticipants","listFileParticipants","participants","data","participant_list","length","every","participant","email","onParticipantsChange","state","isSaving","onSave","bind","dirPath","Utils","getDirName","getUpdateLink","uploadLink","updateFile","toaster","success","gettext","duration","ReactDom","render","document","getElementById"],"mappings":"kUAWkC,EAG9BA,OAAOC,IAAIC,YADbC,EAAG,EAAHA,IAAKC,EAAO,EAAPA,QAASC,EAAW,EAAXA,YAAaC,EAAM,EAANA,OAAQC,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SAAUC,EAAW,EAAXA,YAAaC,EAAQ,EAARA,SAQhEC,EAAW,kHAgBd,OAhBc,mCACf,WACE,OAAIR,EACK,cAAC,IAAW,IAInB,qBAAKS,UAAU,0CAAyC,SACtD,cAAC,IAAiB,CAChBR,QAASA,EACTS,MAAOC,KAAKC,MAAMC,QAClBC,UAAWR,EACXS,SAAUJ,KAAKC,MAAMI,iBAI7B,KAAC,EAhBc,CAASC,IAAMC,WAqB1BC,EAAY,kDAChB,WAAYP,GAAQ,IAAD,EASU,OATV,qBACjB,cAAMA,IAYRI,cAAgB,SAACN,GACf,EAAKU,SAAS,CACZC,UAAU,EACVR,QAASH,GAEb,EAAC,EA+BDY,eAAiB,WACfC,IAAWC,oBAAoBrB,EAAQC,EAAU,CAACG,IAAWkB,MAAK,SAACC,GAC9C,MAAfA,EAAIC,SACN,EAAKC,eAAgB,EACrB,EAAKC,kBAET,GACF,EAAC,EAEDA,gBAAkB,WAChBN,IAAWO,qBAAqB3B,EAAQC,GAAUqB,MAAK,SAACC,GACtD,IAAMK,EAAeL,EAAIM,KAAKC,iBAC9B,EAAKb,SAAS,CAAEW,aAAcA,IAC1BA,EAAaG,OAAS,IACxB,EAAKN,cAAgBG,EAAaI,OAAM,SAACC,GACvC,OAAOA,EAAYC,OAAS9B,CAC9B,IAEJ,GACF,EAAC,EAED+B,qBAAuB,WACrB,EAAKT,iBACP,EAtEE,EAAKU,MAAQ,CACX1B,QAASX,EACTmB,UAAU,EACVmB,UAAU,EACVT,aAAc,IAEhB,EAAKU,OAAO,EAAKA,OAAOC,KAAK,gBAC7B,EAAKd,eAAgB,EAAM,CAC7B,CAoFC,OApFA,mCAUD,WAAW,IAAD,OACHjB,KAAKiB,eACRjB,KAAKW,iBAEP,IAAIqB,EAAUC,IAAMC,WAAWzC,GAC/B,OACEmB,IAAWuB,cAAc3C,EAAQwC,GAASlB,MAAK,SAACC,GAC9C,IAAMqB,EAAarB,EAAIM,KAIvB,OAHA,EAAKZ,SAAS,CACZoB,UAAU,IAELjB,IAAWyB,WAChBD,EACA3C,EACAC,EACA,EAAKkC,MAAM1B,SACXY,MAAK,WACLwB,IAAQC,QAAQC,aAAQ,sBAAuB,CAC7CC,SAAU,IAEZ,EAAKhC,SAAS,CACZoB,UAAU,EACVnB,UAAU,GAEd,GACF,GAEJ,GAAC,+BA2BD,WACEV,KAAKkB,iBACP,GAAC,oBAED,WACE,OACE,cAAC,IAAQ,CACPhB,QACE,cAACL,EAAW,CACVK,QAASF,KAAK4B,MAAM1B,QACpBG,cAAeL,KAAKK,gBAGxBwB,SAAU7B,KAAK4B,MAAMC,SACrBnB,SAAUV,KAAK4B,MAAMlB,SACrBoB,OAAQ9B,KAAK8B,OACbV,aAAcpB,KAAK4B,MAAMR,aACzBO,qBAAsB3B,KAAK2B,sBAGjC,KAAC,EA/Fe,CAASrB,IAAMC,WAkGjCmC,IAASC,OAAO,cAACnC,EAAY,IAAKoC,SAASC,eAAe,W","file":"static/js/viewFileText.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDom from 'react-dom';\nimport PropTypes from 'prop-types';\nimport toaster from './components/toast';\nimport { gettext } from './utils/constants';\nimport FileView from './components/file-view/file-view';\nimport SeafileCodeMirror from './components/seafile-codemirror';\nimport FileViewTip from './components/file-view/file-view-tip';\nimport { seafileAPI } from './utils/seafile-api';\nimport { Utils } from './utils/utils';\n\nimport './css/text-file-view.css';\nconst {\n  err, fileExt, fileContent, repoID, filePath, fileName, canEditFile, username\n} = window.app.pageOptions;\n\nconst propTypes = {\n  updateContent: PropTypes.func.isRequired,\n  content: PropTypes.string.isRequired,\n};\n\nclass FileContent extends React.Component {\n  render() {\n    if (err) {\n      return <FileViewTip />;\n    }\n\n    return (\n      <div className=\"file-view-content flex-1 text-file-view\">\n        <SeafileCodeMirror\n          fileExt={fileExt}\n          value={this.props.content}\n          readOnly={!canEditFile}\n          onChange={this.props.updateContent}\n        />\n      </div>\n    );\n  }\n}\n\nFileContent.propTypes = propTypes;\n\nclass ViewFileText extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: fileContent,\n      needSave: false,\n      isSaving: false,\n      participants: [],\n    };\n    this.onSave=this.onSave.bind(this);\n    this.isParticipant = false;\n  }\n\n\n  updateContent = (value) => {\n    this.setState({\n      needSave: true,\n      content: value,\n    });\n  }\n\n  onSave () {\n    if (!this.isParticipant) {\n      this.addParticipant();\n    }\n    let dirPath = Utils.getDirName(filePath);\n    return (\n      seafileAPI.getUpdateLink(repoID, dirPath).then((res) => {\n        const uploadLink = res.data;\n        this.setState({\n          isSaving: true\n        });\n        return seafileAPI.updateFile(\n          uploadLink,\n          filePath,\n          fileName,\n          this.state.content\n        ).then(() => {\n          toaster.success(gettext('Successfully saved'), {\n            duration: 2\n          });\n          this.setState({\n            isSaving: false,\n            needSave: false\n          });\n        });\n      })\n    );\n  }\n\n  addParticipant = () => {\n    seafileAPI.addFileParticipants(repoID, filePath, [username]).then((res) => {\n      if (res.status === 200) {\n        this.isParticipant = true;\n        this.getParticipants();\n      }\n    });\n  }\n\n  getParticipants = () => {\n    seafileAPI.listFileParticipants(repoID, filePath).then((res) => {\n      const participants = res.data.participant_list;\n      this.setState({ participants: participants });\n      if (participants.length > 0) {\n        this.isParticipant = participants.every((participant) => {\n          return participant.email == username;\n        });\n      }\n    });\n  }\n\n  onParticipantsChange = () => {\n    this.getParticipants();\n  }\n\n  componentDidMount() {\n    this.getParticipants();\n  }\n\n  render() {\n    return (\n      <FileView\n        content={\n          <FileContent\n            content={this.state.content}\n            updateContent={this.updateContent}\n          />\n        }\n        isSaving={this.state.isSaving}\n        needSave={this.state.needSave}\n        onSave={this.onSave}\n        participants={this.state.participants}\n        onParticipantsChange={this.onParticipantsChange}\n      />\n    );\n  }\n}\n\nReactDom.render(<ViewFileText />, document.getElementById('wrapper'));\n"],"sourceRoot":""}