{"version":3,"sources":["shared-file-view-spreadsheet.js"],"names":["window","shared","pageOptions","repoID","filePath","err","commitID","fileType","fileName","sharedToken","SharedFileViewSpreadsheet","content","FileContent","React","Component","props","setIframeHeight","e","iframe","currentTarget","height","contentDocument","body","scrollHeight","state","isLoading","errorMsg","queryStatus","seafileAPI","queryOfficeFileConvertStatus","toLowerCase","then","res","data","setState","setTimeout","gettext","catch","error","response","this","className","id","title","src","siteRoot","encodeURIComponent","onLoad","ReactDom","render","document","getElementById"],"mappings":"ySAQyC,EAKrCA,OAAOC,OAAOC,YAFhBC,EAAM,EAANA,OAAQC,EAAQ,EAARA,SAAUC,EAAG,EAAHA,IAClBC,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SAAUC,EAAW,EAAXA,YAG1BC,EAAyB,kHAK5B,OAL4B,mCAC7B,WACE,OACE,cAAC,IAAc,CAACC,QAAS,cAACC,EAAW,KAEzC,KAAC,EAL4B,CAASC,IAAMC,WAQxCF,EAAW,kDAEf,WAAYG,GAAQ,IAAD,EAKf,OALe,qBACjB,cAAMA,IAqDRC,gBAAkB,SAACC,GACjB,IAAMC,EAASD,EAAEE,cACjBD,EAAOE,OAASF,EAAOG,gBAAgBC,KAAKC,YAC9C,EAvDE,EAAKC,MAAQ,CACXC,WAAYpB,EACZqB,SAAU,IACV,CACJ,CAyEC,OAzEA,8CAED,WAAqB,IAAD,OAClB,IAAIrB,EAAJ,EAIkB,SAAdsB,IACFC,IAAWC,6BAA6B1B,EAAQG,EAAUF,EAAUG,EAASuB,cAAerB,GAAasB,MAAK,SAACC,GAE7G,OADsBA,EAAIC,KAAa,QAErC,IAAK,SACL,IAAK,aACH,EAAKC,SAAS,CACZT,WAAW,IAEbU,WAAWR,EAAa,KACxB,MACF,IAAK,QACH,EAAKO,SAAS,CACZT,WAAW,EACXC,SAAUU,aAAQ,iCAEpB,MACF,IAAK,OACH,EAAKF,SAAS,CACZT,WAAW,EACXC,SAAU,KAGlB,IAAGW,OAAM,SAACC,GACJA,EAAMC,SACR,EAAKL,SAAS,CACZT,WAAW,EACXC,SAAUU,aAAQ,iCAGpB,EAAKF,SAAS,CACZT,WAAW,EACXC,SAAUU,aAAQ,8BAGxB,GACF,CAEAT,EAxCA,CAyCF,GAAC,oBAOD,WAAU,IAAD,EACyBa,KAAKhB,MAA7BC,EAAS,EAATA,UAAWC,EAAQ,EAARA,SAEnB,OAAIrB,EACK,cAAC,IAAiB,IAGvBoB,EACK,cAAC,IAAO,IAGbC,EACK,cAAC,IAAiB,CAACA,SAAUA,IAIpC,qBAAKe,UAAU,8CAA6C,SAC1D,wBAAQC,GAAG,wBAAwBC,MAAOnC,EAAUoC,IAAG,UAAKC,KAAQ,iCAAyB1C,EAAM,YAAIG,GAAQ,OAAGwC,mBAAmB1C,GAAS,6BAAqBK,GAAesC,OAAQP,KAAKxB,mBAGrM,KAAC,EAjFc,CAASH,IAAMC,WAoFhCkC,IAASC,OAAO,cAACvC,EAAyB,IAAKwC,SAASC,eAAe,W","file":"static/js/sharedFileViewSpreadsheet.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDom from 'react-dom';\nimport { seafileAPI } from './utils/seafile-api';\nimport { siteRoot, gettext } from './utils/constants';\nimport SharedFileView from './components/shared-file-view/shared-file-view';\nimport SharedFileViewTip from './components/shared-file-view/shared-file-view-tip';\nimport Loading from './components/loading';\n\nimport './css/spreadsheet-file-view.css';\n\nconst {\n  repoID, filePath, err,\n  commitID, fileType, fileName, sharedToken\n} = window.shared.pageOptions;\n\nclass SharedFileViewSpreadsheet extends React.Component {\n  render() {\n    return (\n      <SharedFileView content={<FileContent />} />\n    );\n  }\n}\n\nclass FileContent extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: !err,\n      errorMsg: ''\n    };\n  }\n\n  componentDidMount() {\n    if (err) {\n      return;\n    }\n\n    let queryStatus = () => {\n      seafileAPI.queryOfficeFileConvertStatus(repoID, commitID, filePath, fileType.toLowerCase(), sharedToken).then((res) => {\n        const convertStatus = res.data['status'];\n        switch (convertStatus) {\n          case 'QUEUED':\n          case 'PROCESSING':\n            this.setState({\n              isLoading: true\n            });\n            setTimeout(queryStatus, 2000);\n            break;\n          case 'ERROR':\n            this.setState({\n              isLoading: false,\n              errorMsg: gettext('Document convertion failed.')\n            });\n            break;\n          case 'DONE':\n            this.setState({\n              isLoading: false,\n              errorMsg: ''\n            });\n        }\n      }).catch((error) => {\n        if (error.response) {\n          this.setState({\n            isLoading: false,\n            errorMsg: gettext('Document convertion failed.')\n          });\n        } else {\n          this.setState({\n            isLoading: false,\n            errorMsg: gettext('Please check the network.')\n          });\n        }\n      });\n    };\n\n    queryStatus();\n  }\n\n  setIframeHeight = (e) => {\n    const iframe = e.currentTarget;\n    iframe.height = iframe.contentDocument.body.scrollHeight;\n  }\n\n  render() {\n    const { isLoading, errorMsg } = this.state;\n\n    if (err) {\n      return <SharedFileViewTip />;\n    }\n\n    if (isLoading) {\n      return <Loading />;\n    }\n\n    if (errorMsg) {\n      return <SharedFileViewTip errorMsg={errorMsg} />;\n    }\n\n    return (\n      <div className=\"shared-file-view-body spreadsheet-file-view\">\n        <iframe id=\"spreadsheet-container\" title={fileName} src={`${siteRoot}office-convert/static/${repoID}/${commitID}${encodeURIComponent(filePath)}/index.html?token=${sharedToken}`} onLoad={this.setIframeHeight}></iframe>\n      </div>\n    );\n  }\n}\n\nReactDom.render(<SharedFileViewSpreadsheet />, document.getElementById('wrapper'));\n"],"sourceRoot":""}