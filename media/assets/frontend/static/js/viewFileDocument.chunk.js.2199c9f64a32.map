{"version":3,"sources":["view-file-document.js"],"names":["window","app","pageOptions","repoID","filePath","err","commitID","fileType","ViewFileDocument","content","FileContent","React","Component","props","state","isLoading","errorMsg","queryStatus","seafileAPI","queryOfficeFileConvertStatus","toLowerCase","then","res","data","setState","setTimeout","gettext","scriptNode","document","createElement","type","src","mediaUrl","body","append","catch","error","response","this","className","ReactDom","render","getElementById"],"mappings":"mTASiC,EAK7BA,OAAOC,IAAIC,YAFbC,EAAM,EAANA,OAAQC,EAAQ,EAARA,SAAUC,EAAG,EAAHA,IAClBC,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SAGNC,EAAgB,kHAKnB,OALmB,mCACpB,WACE,OACE,cAAC,IAAQ,CAACC,QAAS,cAACC,EAAW,KAEnC,KAAC,EALmB,CAASC,IAAMC,WAQ/BF,EAAW,kDAEf,WAAYG,GAAQ,IAAD,EAKf,OALe,qBACjB,cAAMA,IACDC,MAAQ,CACXC,WAAYV,EACZW,SAAU,IACV,CACJ,CAyEC,OAzEA,8CAED,WAAqB,IAAD,OAClB,IAAIX,EAAJ,EAIkB,SAAdY,IACFC,IAAWC,6BAA6BhB,EAAQG,EAAUF,EAAUG,EAASa,eAAeC,MAAK,SAACC,GAEhG,OADsBA,EAAIC,KAAa,QAErC,IAAK,aACH,EAAKC,SAAS,CACZT,WAAW,IAEbU,WAAWR,EAAa,KACxB,MACF,IAAK,QACH,EAAKO,SAAS,CACZT,WAAW,EACXC,SAAUU,aAAQ,iCAEpB,MACF,IAAK,OACH,EAAKF,SAAS,CACZT,WAAW,EACXC,SAAU,KAGZ,IAAIW,EAAaC,SAASC,cAAc,UACxCF,EAAWG,KAAO,kBAClBH,EAAWI,IAAG,UAAMC,KAAQ,wBAC5BJ,SAASK,KAAKC,OAAOP,GAE3B,IAAGQ,OAAM,SAACC,GACJA,EAAMC,SACR,EAAKb,SAAS,CACZT,WAAW,EACXC,SAAUU,aAAQ,iCAGpB,EAAKF,SAAS,CACZT,WAAW,EACXC,SAAUU,aAAQ,8BAGxB,GACF,CAEAT,EA5CA,CA6CF,GAAC,oBAGD,WAAU,IAAD,EACyBqB,KAAKxB,MAA7BC,EAAS,EAATA,UAAWC,EAAQ,EAARA,SAEnB,OAAIX,EACK,cAAC,IAAW,IAGjBU,EACK,cAAC,IAAO,IAGbC,EACK,cAAC,IAAW,CAACA,SAAUA,IAI9B,qBAAKuB,UAAU,yCAAwC,SACrD,cAAC,IAAS,KAGhB,KAAC,EAjFc,CAAS5B,IAAMC,WAoFhC4B,IAASC,OAAO,cAACjC,EAAgB,IAAKoB,SAASc,eAAe,W","file":"static/js/viewFileDocument.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDom from 'react-dom';\nimport { seafileAPI } from './utils/seafile-api';\nimport { gettext, mediaUrl } from './utils/constants';\nimport FileView from './components/file-view/file-view';\nimport FileViewTip from './components/file-view/file-view-tip';\nimport Loading from './components/loading';\nimport PDFViewer from './components/pdf-viewer';\n\nimport './css/pdf-file-view.css';\n\nconst {\n  repoID, filePath, err,\n  commitID, fileType\n} = window.app.pageOptions;\n\nclass ViewFileDocument extends React.Component {\n  render() {\n    return (\n      <FileView content={<FileContent />} />\n    );\n  }\n}\n\nclass FileContent extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: !err,\n      errorMsg: ''\n    };\n  }\n\n  componentDidMount() {\n    if (err) {\n      return;\n    }\n\n    let queryStatus = () => {\n      seafileAPI.queryOfficeFileConvertStatus(repoID, commitID, filePath, fileType.toLowerCase()).then((res) => {\n        const convertStatus = res.data['status'];\n        switch (convertStatus) {\n          case 'PROCESSING':\n            this.setState({\n              isLoading: true\n            });\n            setTimeout(queryStatus, 2000);\n            break;\n          case 'ERROR':\n            this.setState({\n              isLoading: false,\n              errorMsg: gettext('Document convertion failed.')\n            });\n            break;\n          case 'DONE':\n            this.setState({\n              isLoading: false,\n              errorMsg: ''\n            });\n\n            let scriptNode = document.createElement('script');\n            scriptNode.type = 'text/javascript';\n            scriptNode.src = `${mediaUrl}js/pdf/web/viewer.js`;\n            document.body.append(scriptNode);\n        }\n      }).catch((error) => {\n        if (error.response) {\n          this.setState({\n            isLoading: false,\n            errorMsg: gettext('Document convertion failed.')\n          });\n        } else {\n          this.setState({\n            isLoading: false,\n            errorMsg: gettext('Please check the network.')\n          });\n        }\n      });\n    };\n\n    queryStatus();\n  }\n\n\n  render() {\n    const { isLoading, errorMsg } = this.state;\n\n    if (err) {\n      return <FileViewTip />;\n    }\n\n    if (isLoading) {\n      return <Loading />;\n    }\n\n    if (errorMsg) {\n      return <FileViewTip errorMsg={errorMsg} />;\n    }\n\n    return (\n      <div className=\"file-view-content flex-1 pdf-file-view\">\n        <PDFViewer />\n      </div>\n    );\n  }\n}\n\nReactDom.render(<ViewFileDocument />, document.getElementById('wrapper'));\n"],"sourceRoot":""}