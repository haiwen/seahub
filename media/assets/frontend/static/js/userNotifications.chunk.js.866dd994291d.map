{"version":3,"sources":["user-notifications.js"],"names":["UserNotifications","props","getItems","page","perPage","state","seafileAPI","listNotifications","then","res","setState","isLoading","items","data","notification_list","currentPage","hasNextPage","Utils","count","catch","error","errorMsg","getErrorMsg","resetPerPage","onSearchedClick","selectedItem","is_dir","url","siteRoot","repo_id","repo_name","path","navigate","repalce","encodePath","window","open","location","href","markAllRead","updateNotifications","map","item","seen","clearAll","deleteNotifications","urlParams","URL","searchParams","this","parseInt","get","Fragment","className","src","mediaUrl","logoPath","height","logoHeight","width","logoWidth","title","siteTitle","alt","gettext","onClick","Content","curPerPage","getListByPage","React","Component","getPreviousPage","getNextPage","theadData","isDesktop","text","index","noticeItem","tr","length","gotoPreviousPage","gotoNextPage","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/userNotifications.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDom from 'react-dom';\nimport { navigate } from '@gatsbyjs/reach-router';\nimport { Utils } from './utils/utils';\nimport { gettext, siteRoot, mediaUrl, logoPath, logoWidth, logoHeight, siteTitle } from './utils/constants';\nimport { seafileAPI } from './utils/seafile-api';\nimport Loading from './components/loading';\nimport Paginator from './components/paginator';\nimport CommonToolbar from './components/toolbar/common-toolbar';\nimport NoticeItem from './components/common/notice-item';\n\nimport './css/toolbar.css';\nimport './css/search.css';\n\nimport './css/user-notifications.css';\n\nclass UserNotifications extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      errorMsg: '',\n      currentPage: 1,\n      perPage: 25,\n      hasNextPage: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    let urlParams = (new URL(window.location)).searchParams;\n    const {\n      currentPage, perPage\n    } = this.state;\n    this.setState({\n      perPage: parseInt(urlParams.get('per_page') || perPage),\n      currentPage: parseInt(urlParams.get('page') || currentPage)\n    }, () => {\n      this.getItems(this.state.currentPage);\n    });\n  }\n\n  getItems = (page) => {\n    const { perPage } = this.state;\n    seafileAPI.listNotifications(page, perPage).then((res) => {\n      this.setState({\n        isLoading: false,\n        items: res.data.notification_list,\n        currentPage: page,\n        hasNextPage: Utils.hasNextPage(page, perPage, res.data.count)\n      });\n    }).catch((error) => {\n      this.setState({\n        isLoading: false,\n        errorMsg: Utils.getErrorMsg(error, true) // true: show login tip if 403\n      });\n    });\n  }\n\n  resetPerPage = (perPage) => {\n    this.setState({\n      perPage: perPage\n    }, () => {\n      this.getItems(1);\n    });\n  }\n\n  onSearchedClick = (selectedItem) => {\n    if (selectedItem.is_dir === true) {\n      let url = siteRoot + 'library/' + selectedItem.repo_id + '/' + selectedItem.repo_name + selectedItem.path;\n      navigate(url, {repalce: true});\n    } else {\n      let url = siteRoot + 'lib/' + selectedItem.repo_id + '/file' + Utils.encodePath(selectedItem.path);\n      let newWindow = window.open('about:blank');\n      newWindow.location.href = url;\n    }\n  }\n\n  markAllRead = () => {\n    seafileAPI.updateNotifications().then((res) => {\n      this.setState({\n        items: this.state.items.map(item => {\n          item.seen = true;\n          return item;\n        })\n      });\n    }).catch((error) => {\n      this.setState({\n        isLoading: false,\n        errorMsg: Utils.getErrorMsg(error, true) // true: show login tip if 403\n      });\n    });\n  }\n\n  clearAll = () => {\n    seafileAPI.deleteNotifications().then((res) => {\n      this.setState({\n        items: []\n      });\n    }).catch((error) => {\n      this.setState({\n        isLoading: false,\n        errorMsg: Utils.getErrorMsg(error, true) // true: show login tip if 403\n      });\n    });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"h-100 d-flex flex-column\">\n          <div className=\"top-header d-flex justify-content-between\">\n            <a href={siteRoot}>\n              <img src={mediaUrl + logoPath} height={logoHeight} width={logoWidth} title={siteTitle} alt=\"logo\" />\n            </a>\n            <CommonToolbar onSearchedClick={this.onSearchedClick} />\n          </div>\n          <div className=\"flex-auto container-fluid pt-4 pb-6 o-auto\">\n            <div className=\"row\">\n              <div className=\"col-md-10 offset-md-1\">\n                <div className=\"d-flex justify-content-between align-items-center flex-wrap op-bar\">\n                  <h2 className=\"h4 m-0 my-1\">{gettext('Notifications')}</h2>\n                  <div>\n                    <button className=\"btn btn-secondary op-bar-btn\" onClick={this.markAllRead}>{gettext('Mark all read')}</button>\n                    <button className=\"btn btn-secondary op-bar-btn ml-2\" onClick={this.clearAll}>{gettext('Clear')}</button>\n                  </div>\n                </div>\n                <Content\n                  isLoading={this.state.isLoading}\n                  errorMsg={this.state.errorMsg}\n                  items={this.state.items}\n                  currentPage={this.state.currentPage}\n                  hasNextPage={this.state.hasNextPage}\n                  curPerPage={this.state.perPage}\n                  resetPerPage={this.resetPerPage}\n                  getListByPage={this.getItems}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nclass Content extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  getPreviousPage = () => {\n    this.props.getListByPage(this.props.currentPage - 1);\n  }\n\n  getNextPage = () => {\n    this.props.getListByPage(this.props.currentPage + 1);\n  }\n\n  render() {\n    const {\n      isLoading, errorMsg, items,\n      curPerPage, currentPage, hasNextPage\n    } = this.props;\n\n    if (isLoading) {\n      return <Loading />;\n    }\n\n    if (errorMsg) {\n      return <p className=\"error mt-6 text-center\">{errorMsg}</p>;\n    }\n\n    const isDesktop = Utils.isDesktop();\n    const theadData = isDesktop ? [\n      {width: '7%', text: ''},\n      {width: '73%', text: gettext('Message')},\n      {width: '20%', text: gettext('Time')}\n    ] : [\n      {width: '15%', text: ''},\n      {width: '52%', text: gettext('Message')},\n      {width: '33%', text: gettext('Time')}\n    ];\n\n    return (\n      <React.Fragment>\n        <table className=\"table-hover\">\n          <thead>\n            <tr>\n              {theadData.map((item, index) => {\n                return <th key={index} width={item.width}>{item.text}</th>;\n              })}\n            </tr>\n          </thead>\n          <tbody>\n            {items.map((item, index) => {\n              return (<NoticeItem key={index} noticeItem={item} tr={true} />);\n            })}\n          </tbody>\n        </table>\n        {items.length > 0 &&\n        <Paginator\n          gotoPreviousPage={this.getPreviousPage}\n          gotoNextPage={this.getNextPage}\n          currentPage={currentPage}\n          hasNextPage={hasNextPage}\n          curPerPage={curPerPage}\n          resetPerPage={this.props.resetPerPage}\n        />\n        }\n      </React.Fragment>\n    );\n  }\n}\n\nReactDom.render(<UserNotifications />, document.getElementById('wrapper'));\n"],"sourceRoot":""}