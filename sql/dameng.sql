CREATE TABLE IF NOT EXISTS "DJANGO_MIGRATIONS" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "APP" VARCHAR(255) NOT NULL, "NAME" VARCHAR(255) NOT NULL, "APPLIED" TIMESTAMP NOT NULL);
CREATE TABLE IF NOT EXISTS "ADMIN_LOG_ADMINLOG" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "EMAIL" VARCHAR(254) NOT NULL, "OPERATION" VARCHAR(255) NOT NULL, "DETAIL" TEXT NOT NULL, "DATETIME" TIMESTAMP NOT NULL);
CREATE TABLE IF NOT EXISTS "API2_TOKEN" ("KEY" VARCHAR(40) NOT NULL PRIMARY KEY, "USER" VARCHAR(255) NOT NULL UNIQUE, "CREATED" TIMESTAMP NOT NULL);
CREATE TABLE IF NOT EXISTS "API2_TOKENV2" ("KEY" VARCHAR(40) NOT NULL PRIMARY KEY, "USER" VARCHAR(255) NOT NULL, "PLATFORM" VARCHAR(32) NOT NULL, "DEVICE_ID" VARCHAR(40) NOT NULL, "DEVICE_NAME" VARCHAR(40) NOT NULL, "PLATFORM_VERSION" VARCHAR(16) NOT NULL, "CLIENT_VERSION" VARCHAR(16) NOT NULL, "LAST_ACCESSED" TIMESTAMP NOT NULL, "LAST_LOGIN_IP" VARCHAR(39) NULL, "CREATED_AT" TIMESTAMP NOT NULL, "WIPED_AT" TIMESTAMP NULL);
CREATE TABLE IF NOT EXISTS "ABUSE_REPORTS_ABUSEREPORT" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "REPORTER" TEXT NULL, "REPO_ID" VARCHAR(36) NOT NULL, "REPO_NAME" VARCHAR(255) NOT NULL, "FILE_PATH" TEXT NULL, "ABUSE_TYPE" VARCHAR(255) NOT NULL, "DESCRIPTION" TEXT NULL, "HANDLED"  INTEGER NOT NULL, "TIME" TIMESTAMP NOT NULL);
CREATE TABLE IF NOT EXISTS "DJANGO_CONTENT_TYPE" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "APP_LABEL" VARCHAR(100) NOT NULL, "MODEL" VARCHAR(100) NOT NULL);
CREATE TABLE IF NOT EXISTS "AUTH_USER" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "PASSWORD" VARCHAR(128) NOT NULL, "LAST_LOGIN" TIMESTAMP NULL, "IS_SUPERUSER"  INTEGER NOT NULL, "FIRST_NAME" VARCHAR(30) NOT NULL, "LAST_NAME" VARCHAR(30) NOT NULL, "EMAIL" VARCHAR(254) NOT NULL, "IS_STAFF"  INTEGER NOT NULL, "IS_ACTIVE"  INTEGER NOT NULL, "DATE_JOINED" TIMESTAMP NOT NULL, "USERNAME" VARCHAR(150) NOT NULL UNIQUE);
CREATE TABLE IF NOT EXISTS "AUTH_GROUP" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "NAME" VARCHAR(80) NOT NULL UNIQUE);
CREATE TABLE IF NOT EXISTS "AUTH_PERMISSION" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "CONTENT_TYPE_ID" INTEGER NOT NULL REFERENCES "DJANGO_CONTENT_TYPE" ("ID"), "CODENAME" VARCHAR(100) NOT NULL, "NAME" VARCHAR(255) NOT NULL);
CREATE TABLE IF NOT EXISTS "AUTH_GROUP_PERMISSIONS" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "GROUP_ID" INTEGER NOT NULL REFERENCES "AUTH_GROUP" ("ID"), "PERMISSION_ID" INTEGER NOT NULL REFERENCES "AUTH_PERMISSION" ("ID"));
CREATE TABLE IF NOT EXISTS "AUTH_USER_GROUPS" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "USER_ID" INTEGER NOT NULL REFERENCES "AUTH_USER" ("ID"), "GROUP_ID" INTEGER NOT NULL REFERENCES "AUTH_GROUP" ("ID"));
CREATE TABLE IF NOT EXISTS "AUTH_USER_USER_PERMISSIONS" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "USER_ID" INTEGER NOT NULL REFERENCES "AUTH_USER" ("ID"), "PERMISSION_ID" INTEGER NOT NULL REFERENCES "AUTH_PERMISSION" ("ID"));
CREATE TABLE IF NOT EXISTS "AVATAR_AVATAR" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "EMAILUSER" VARCHAR(255) NOT NULL, "PRIMARY"  INTEGER NOT NULL, "AVATAR" VARCHAR(1024) NOT NULL, "DATE_UPLOADED" TIMESTAMP NOT NULL);
CREATE TABLE IF NOT EXISTS "AVATAR_GROUPAVATAR" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "GROUP_ID" VARCHAR(255) NOT NULL, "AVATAR" VARCHAR(1024) NOT NULL, "DATE_UPLOADED" TIMESTAMP NOT NULL);
CREATE TABLE IF NOT EXISTS "TAGS_FILEUUIDMAP" ("UUID" VARCHAR(32) NOT NULL PRIMARY KEY, "REPO_ID" VARCHAR(36) NOT NULL, "REPO_ID_PARENT_PATH_MD5" VARCHAR(100) NOT NULL, "PARENT_PATH" TEXT NOT NULL, "FILENAME" VARCHAR(1024) NOT NULL, "IS_DIR"  INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS "TAGS_TAGS" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "NAME" VARCHAR(255) NOT NULL UNIQUE);
CREATE TABLE IF NOT EXISTS "TAGS_FILETAG" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "USERNAME" VARCHAR(255) NOT NULL, "TAG_ID" INTEGER NOT NULL REFERENCES "TAGS_TAGS" ("ID"), "UUID_ID" VARCHAR(32) NOT NULL REFERENCES "TAGS_FILEUUIDMAP" ("UUID"));
CREATE TABLE IF NOT EXISTS "BASE_CLIENTLOGINTOKEN" ("TOKEN" VARCHAR(32) NOT NULL PRIMARY KEY, "USERNAME" VARCHAR(255) NOT NULL, "TIMESTAMP" TIMESTAMP NOT NULL);
CREATE TABLE IF NOT EXISTS "BASE_COMMANDSLASTCHECK" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "COMMAND_TYPE" VARCHAR(100) NOT NULL, "LAST_CHECK" TIMESTAMP NOT NULL);
CREATE TABLE IF NOT EXISTS "BASE_DEVICETOKEN" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "TOKEN" VARCHAR(80) NOT NULL, "USER" VARCHAR(255) NOT NULL, "PLATFORM" VARCHAR(32) NOT NULL, "VERSION" VARCHAR(16) NOT NULL, "PVERSION" VARCHAR(16) NOT NULL);
CREATE TABLE IF NOT EXISTS "BASE_USERLASTLOGIN" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "USERNAME" VARCHAR(255) NOT NULL, "LAST_LOGIN" TIMESTAMP NOT NULL);
CREATE TABLE IF NOT EXISTS "BASE_USERSTARREDFILES" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "EMAIL" VARCHAR(254) NOT NULL, "ORG_ID" INTEGER NOT NULL, "REPO_ID" VARCHAR(36) NOT NULL, "PATH" TEXT NOT NULL, "IS_DIR"  INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS "BASE_REPOSECRETKEY" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "REPO_ID" VARCHAR(36) NOT NULL UNIQUE, "SECRET_KEY" VARCHAR(44) NOT NULL);
CREATE TABLE IF NOT EXISTS "BASE_FILECOMMENT" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "AUTHOR" VARCHAR(255) NOT NULL, "COMMENT" TEXT NOT NULL, "CREATED_AT" TIMESTAMP NOT NULL, "UPDATED_AT" TIMESTAMP NOT NULL, "UUID_ID" VARCHAR(32) NOT NULL REFERENCES "TAGS_FILEUUIDMAP" ("UUID"), "DETAIL" TEXT NOT NULL, "RESOLVED"  INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS "SOCIAL_AUTH_USERSOCIALAUTH" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "USERNAME" VARCHAR(255) NOT NULL, "PROVIDER" VARCHAR(32) NOT NULL, "UID" VARCHAR(255) NOT NULL, "EXTRA_DATA" TEXT NULL);
CREATE TABLE IF NOT EXISTS "CAPTCHA_CAPTCHASTORE" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "CHALLENGE" VARCHAR(32) NOT NULL, "RESPONSE" VARCHAR(32) NOT NULL, "HASHKEY" VARCHAR(40) NOT NULL UNIQUE, "EXPIRATION" TIMESTAMP NOT NULL);
CREATE TABLE IF NOT EXISTS "CONTACTS_CONTACT" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "USER_EMAIL" VARCHAR(255) NOT NULL, "CONTACT_EMAIL" VARCHAR(255) NOT NULL, "CONTACT_NAME" VARCHAR(255) NULL, "NOTE" VARCHAR(255) NULL);
CREATE TABLE IF NOT EXISTS "CONSTANCE_CONFIG" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "CONSTANCE_KEY" VARCHAR(255) NOT NULL UNIQUE, "VALUE" TEXT NULL);
CREATE TABLE IF NOT EXISTS "DJANGO_CAS_NG_SESSIONTICKET" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "SESSION_KEY" VARCHAR(255) NOT NULL, "TICKET" VARCHAR(255) NOT NULL);
CREATE TABLE IF NOT EXISTS "DJANGO_CAS_NG_PROXYGRANTINGTICKET" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "SESSION_KEY" VARCHAR(255) NULL, "PGTIOU" VARCHAR(255) NULL, "PGT" VARCHAR(255) NULL, "DATE" TIMESTAMP NOT NULL, "USER" VARCHAR(255) NOT NULL);
CREATE TABLE IF NOT EXISTS "DRAFTS_DRAFT" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "CREATED_AT" TIMESTAMP NOT NULL, "UPDATED_AT" TIMESTAMP NOT NULL, "USERNAME" VARCHAR(255) NOT NULL, "ORIGIN_FILE_VERSION" VARCHAR(100) NOT NULL, "DRAFT_FILE_PATH" VARCHAR(1024) NOT NULL, "ORIGIN_FILE_UUID" VARCHAR(32) NOT NULL UNIQUE, "PUBLISH_FILE_VERSION" VARCHAR(100) NULL, "STATUS" VARCHAR(20) NOT NULL, "ORIGIN_REPO_ID" VARCHAR(36) NOT NULL);
CREATE TABLE IF NOT EXISTS "DRAFTS_DRAFTREVIEWER" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "REVIEWER" VARCHAR(255) NOT NULL, "DRAFT_ID" INTEGER NOT NULL REFERENCES "DRAFTS_DRAFT" ("ID"));
CREATE TABLE IF NOT EXISTS "FILE_PARTICIPANTS_FILEPARTICIPANT" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "USERNAME" VARCHAR(255) NOT NULL, "UUID_ID" VARCHAR(32) NOT NULL REFERENCES "TAGS_FILEUUIDMAP" ("UUID"));
CREATE TABLE IF NOT EXISTS "REPO_TAGS_REPOTAGS" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "REPO_ID" VARCHAR(36) NOT NULL, "NAME" VARCHAR(255) NOT NULL, "COLOR" VARCHAR(255) NOT NULL);
CREATE TABLE IF NOT EXISTS "FILE_TAGS_FILETAGS" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "FILE_UUID_ID" VARCHAR(32) NOT NULL REFERENCES "TAGS_FILEUUIDMAP" ("UUID"), "REPO_TAG_ID" INTEGER NOT NULL REFERENCES "REPO_TAGS_REPOTAGS" ("ID"));
CREATE TABLE IF NOT EXISTS "INSTITUTIONS_INSTITUTION" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "NAME" VARCHAR(200) NOT NULL, "CREATE_TIME" TIMESTAMP NOT NULL);
CREATE TABLE IF NOT EXISTS "INSTITUTIONS_INSTITUTIONQUOTA" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "QUOTA" BIGINT NOT NULL, "INSTITUTION_ID" INTEGER NOT NULL REFERENCES "INSTITUTIONS_INSTITUTION" ("ID"));
CREATE TABLE IF NOT EXISTS "INSTITUTIONS_INSTITUTIONADMIN" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "INSTITUTION_ID" INTEGER NOT NULL REFERENCES "INSTITUTIONS_INSTITUTION" ("ID"), "USER" VARCHAR(255) NOT NULL);
CREATE TABLE IF NOT EXISTS "INVITATIONS_INVITATION" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "TOKEN" VARCHAR(40) NOT NULL, "INVITER" VARCHAR(255) NOT NULL, "ACCEPTER" VARCHAR(255) NOT NULL, "INVITE_TIME" TIMESTAMP NOT NULL, "ACCEPT_TIME" TIMESTAMP NULL, "INVITE_TYPE" VARCHAR(20) NOT NULL, "EXPIRE_TIME" TIMESTAMP NOT NULL);
CREATE TABLE IF NOT EXISTS "REPO_SHARE_INVITATION" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "REPO_ID" VARCHAR(36) NOT NULL, "PATH" TEXT NOT NULL, "PERMISSION" VARCHAR(50) NOT NULL, "INVITATION_ID" INTEGER NOT NULL REFERENCES "INVITATIONS_INVITATION" ("ID"));
CREATE TABLE IF NOT EXISTS "NOTIFICATIONS_NOTIFICATION" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "MESSAGE" VARCHAR(512) NOT NULL, "PRIMARY"  INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS "NOTIFICATIONS_USERNOTIFICATION" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "TO_USER" VARCHAR(255) NOT NULL, "MSG_TYPE" VARCHAR(30) NOT NULL, "DETAIL" TEXT NOT NULL, "SEEN"  INTEGER NOT NULL, "TIMESTAMP" TIMESTAMP NOT NULL);
CREATE TABLE IF NOT EXISTS "OPTIONS_USEROPTIONS" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "EMAIL" VARCHAR(255) NOT NULL, "OPTION_VAL" VARCHAR(512) NOT NULL, "OPTION_KEY" VARCHAR(50) NOT NULL);
CREATE TABLE IF NOT EXISTS "ORGANIZATIONS_ORGMEMBERQUOTA" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "ORG_ID" INTEGER NOT NULL, "QUOTA" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS "ORGANIZATIONS_ORGSETTINGS" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "ROLE" VARCHAR(100) NULL, "ORG_ID" INTEGER NOT NULL UNIQUE);
CREATE TABLE IF NOT EXISTS "POST_OFFICE_EMAIL" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "FROM_EMAIL" VARCHAR(254) NOT NULL, "TO" TEXT NOT NULL, "CC" TEXT NOT NULL, "BCC" TEXT NOT NULL, "SUBJECT" VARCHAR(989) NOT NULL, "MESSAGE" TEXT NOT NULL, "HTML_MESSAGE" TEXT NOT NULL, "STATUS" INTEGER NULL, "PRIORITY" INTEGER NULL, "CREATED" TIMESTAMP NOT NULL, "LAST_UPDATED" TIMESTAMP NOT NULL, "SCHEDULED_TIME" TIMESTAMP NULL, "HEADERS" TEXT NULL, "CONTEXT" TEXT NULL, "BACKEND_ALIAS" VARCHAR(64) NOT NULL, "TEMPLATE_ID" INTEGER NULL REFERENCES "POST_OFFICE_EMAILTEMPLATE" ("ID"));
CREATE TABLE IF NOT EXISTS "POST_OFFICE_EMAILTEMPLATE" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "DESCRIPTION" TEXT NOT NULL, "SUBJECT" VARCHAR(255) NOT NULL, "CONTENT" TEXT NOT NULL, "HTML_CONTENT" TEXT NOT NULL, "CREATED" TIMESTAMP NOT NULL, "LAST_UPDATED" TIMESTAMP NOT NULL, "LANGUAGE" VARCHAR(12) NOT NULL, "NAME" VARCHAR(255) NOT NULL, "DEFAULT_TEMPLATE_ID" INTEGER NULL REFERENCES "POST_OFFICE_EMAILTEMPLATE" ("ID"));
CREATE TABLE IF NOT EXISTS "POST_OFFICE_ATTACHMENT_EMAILS" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "ATTACHMENT_ID" INTEGER NOT NULL REFERENCES "POST_OFFICE_ATTACHMENT" ("ID"), "EMAIL_ID" INTEGER NOT NULL REFERENCES "POST_OFFICE_EMAIL" ("ID"));
CREATE TABLE IF NOT EXISTS "POST_OFFICE_LOG" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "DATE" TIMESTAMP NOT NULL, "EXCEPTION_TYPE" VARCHAR(255) NOT NULL, "MESSAGE" TEXT NOT NULL, "EMAIL_ID" INTEGER NOT NULL REFERENCES "POST_OFFICE_EMAIL" ("ID"), "STATUS" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS "POST_OFFICE_ATTACHMENT" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "FILE" VARCHAR(100) NOT NULL, "NAME" VARCHAR(255) NOT NULL, "MIMETYPE" VARCHAR(255) NOT NULL, "HEADERS" TEXT NULL);
CREATE TABLE IF NOT EXISTS "PROFILE_DETAILEDPROFILE" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "USER" VARCHAR(255) NOT NULL, "DEPARTMENT" VARCHAR(512) NOT NULL, "TELEPHONE" VARCHAR(100) NOT NULL);
CREATE TABLE IF NOT EXISTS "PROFILE_PROFILE" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "USER" VARCHAR(254) NOT NULL UNIQUE, "NICKNAME" VARCHAR(64) NOT NULL, "INTRO" TEXT NOT NULL, "LANG_CODE" TEXT NULL, "LOGIN_ID" VARCHAR(225) NULL UNIQUE, "INSTITUTION" VARCHAR(225) NULL, "LIST_IN_ADDRESS_BOOK"  INTEGER NOT NULL, "CONTACT_EMAIL" VARCHAR(225) NULL UNIQUE,"IS_MANUALLY_SET_CONTACT_EMAIL" INTEGER DEFAULT 0);
CREATE TABLE IF NOT EXISTS "REGISTRATION_REGISTRATIONPROFILE" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "EMAILUSER_ID" INTEGER NOT NULL, "ACTIVATION_KEY" VARCHAR(40) NOT NULL);
CREATE TABLE IF NOT EXISTS "RELATED_FILES_RELATEDFILES" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "O_UUID_ID" VARCHAR(32) NOT NULL REFERENCES "TAGS_FILEUUIDMAP" ("UUID"), "R_UUID_ID" VARCHAR(32) NOT NULL REFERENCES "TAGS_FILEUUIDMAP" ("UUID"));
CREATE TABLE IF NOT EXISTS "REPO_API_TOKENS" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "REPO_ID" VARCHAR(36) NOT NULL, "APP_NAME" VARCHAR(255) NOT NULL, "TOKEN" VARCHAR(40) NOT NULL UNIQUE, "GENERATED_AT" TIMESTAMP NOT NULL, "GENERATED_BY" VARCHAR(255) NOT NULL, "LAST_ACCESS" TIMESTAMP NOT NULL, "PERMISSION" VARCHAR(15) NOT NULL);
CREATE TABLE IF NOT EXISTS "REVISION_TAG_TAGS" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "NAME" VARCHAR(255) NOT NULL UNIQUE);
CREATE TABLE IF NOT EXISTS "REVISION_TAG_REVISIONTAGS" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "REPO_ID" VARCHAR(36) NOT NULL, "PATH" TEXT NOT NULL, "REVISION_ID" VARCHAR(255) NOT NULL, "USERNAME" VARCHAR(255) NOT NULL, "TAG_ID" INTEGER NOT NULL REFERENCES "REVISION_TAG_TAGS" ("ID"));
CREATE TABLE IF NOT EXISTS "ROLE_PERMISSIONS_ADMINROLE" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "EMAIL" VARCHAR(254) NOT NULL UNIQUE, "ROLE" VARCHAR(255) NOT NULL);
CREATE TABLE IF NOT EXISTS "DJANGO_SESSION" ("SESSION_KEY" VARCHAR(40) NOT NULL PRIMARY KEY, "SESSION_DATA" TEXT NOT NULL, "EXPIRE_DATE" TIMESTAMP NOT NULL);
CREATE TABLE IF NOT EXISTS "SHARE_ANONYMOUSSHARE" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "REPO_OWNER" VARCHAR(255) NOT NULL, "REPO_ID" VARCHAR(36) NOT NULL, "ANONYMOUS_EMAIL" VARCHAR(255) NOT NULL, "TOKEN" VARCHAR(25) NOT NULL UNIQUE);
CREATE TABLE IF NOT EXISTS "SHARE_EXTRAGROUPSSHAREPERMISSION" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "REPO_ID" VARCHAR(36) NOT NULL, "GROUP_ID" INTEGER NOT NULL, "PERMISSION" VARCHAR(30) NOT NULL);
CREATE TABLE IF NOT EXISTS "SHARE_EXTRASHAREPERMISSION" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "REPO_ID" VARCHAR(36) NOT NULL, "SHARE_TO" VARCHAR(255) NOT NULL, "PERMISSION" VARCHAR(30) NOT NULL);
CREATE TABLE IF NOT EXISTS "SHARE_FILESHARE" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "USERNAME" VARCHAR(255) NOT NULL, "REPO_ID" VARCHAR(36) NOT NULL, "PATH" TEXT NOT NULL, "TOKEN" VARCHAR(100) NOT NULL UNIQUE, "CTIME" TIMESTAMP NOT NULL, "VIEW_CNT" INTEGER NOT NULL, "S_TYPE" VARCHAR(2) NOT NULL, "PASSWORD" VARCHAR(128) NULL, "EXPIRE_DATE" TIMESTAMP NULL, "PERMISSION" VARCHAR(50) NOT NULL, "USER_SCOPE" VARCHAR(225) DEFAULT 'ALL_USERS', "AUTHED_DETAILS" TEXT DEFAULT NULL);
CREATE TABLE IF NOT EXISTS "SHARE_ORGFILESHARE" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "ORG_ID" INTEGER NOT NULL, "FILE_SHARE_ID" INTEGER NOT NULL UNIQUE REFERENCES "SHARE_FILESHARE" ("ID"));
CREATE TABLE IF NOT EXISTS "SHARE_PRIVATEFILEDIRSHARE" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "FROM_USER" VARCHAR(255) NOT NULL, "TO_USER" VARCHAR(255) NOT NULL, "REPO_ID" VARCHAR(36) NOT NULL, "PATH" TEXT NOT NULL, "TOKEN" VARCHAR(10) NOT NULL UNIQUE, "PERMISSION" VARCHAR(5) NOT NULL, "S_TYPE" VARCHAR(5) NOT NULL);
CREATE TABLE IF NOT EXISTS "SHARE_UPLOADLINKSHARE" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "USERNAME" VARCHAR(255) NOT NULL, "REPO_ID" VARCHAR(36) NOT NULL, "PATH" TEXT NOT NULL, "TOKEN" VARCHAR(100) NOT NULL UNIQUE, "CTIME" TIMESTAMP NOT NULL, "VIEW_CNT" INTEGER NOT NULL, "PASSWORD" VARCHAR(128) NULL, "EXPIRE_DATE" TIMESTAMP NULL);
CREATE TABLE IF NOT EXISTS "SYSADMIN_EXTRA_USERLOGINLOG" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "USERNAME" VARCHAR(255) NOT NULL, "LOGIN_DATE" TIMESTAMP NOT NULL, "LOGIN_IP" VARCHAR(128) NOT NULL, "LOGIN_SUCCESS"  INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS "TERMSANDCONDITIONS_TERMSANDCONDITIONS" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "SLUG" VARCHAR(50) NOT NULL, "NAME" TEXT NOT NULL, "VERSION_NUMBER" DECIMAL NOT NULL, "TEXT" TEXT NULL, "INFO" TEXT NULL, "DATE_ACTIVE" TIMESTAMP NULL, "DATE_CREATED" TIMESTAMP NOT NULL);
CREATE TABLE IF NOT EXISTS "TERMSANDCONDITIONS_USERTERMSANDCONDITIONS" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "USERNAME" VARCHAR(255) NOT NULL, "IP_ADDRESS" VARCHAR(39) NULL, "DATE_ACCEPTED" TIMESTAMP NOT NULL, "TERMS_ID" INTEGER NOT NULL REFERENCES "TERMSANDCONDITIONS_TERMSANDCONDITIONS" ("ID"));
CREATE TABLE IF NOT EXISTS "TRUSTED_IP_TRUSTEDIP" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "IP" VARCHAR(255) NOT NULL);
CREATE TABLE IF NOT EXISTS "TWO_FACTOR_PHONEDEVICE" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "USER" VARCHAR(255) NOT NULL UNIQUE, "NAME" VARCHAR(64) NOT NULL, "CONFIRMED"  INTEGER NOT NULL, "NUMBER" VARCHAR(40) NOT NULL, "KEY" VARCHAR(40) NOT NULL, "METHOD" VARCHAR(4) NOT NULL);
CREATE TABLE IF NOT EXISTS "TWO_FACTOR_STATICDEVICE" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "USER" VARCHAR(255) NOT NULL UNIQUE, "NAME" VARCHAR(64) NOT NULL, "CONFIRMED"  INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS "TWO_FACTOR_STATICTOKEN" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "TOKEN" VARCHAR(16) NOT NULL, "DEVICE_ID" INTEGER NOT NULL REFERENCES "TWO_FACTOR_STATICDEVICE" ("ID"));
CREATE TABLE IF NOT EXISTS "TWO_FACTOR_TOTPDEVICE" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "USER" VARCHAR(255) NOT NULL UNIQUE, "NAME" VARCHAR(64) NOT NULL, "CONFIRMED"  INTEGER NOT NULL, "KEY" VARCHAR(80) NOT NULL, "STEP" INTEGER NOT NULL, "T0" BIGINT NOT NULL, "DIGITS" INTEGER NOT NULL, "TOLERANCE" INTEGER NOT NULL, "DRIFT" INTEGER NOT NULL, "LAST_T" BIGINT NOT NULL);
CREATE TABLE IF NOT EXISTS "WIKI_WIKI" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "USERNAME" VARCHAR(255) NOT NULL, "NAME" VARCHAR(255) NOT NULL, "SLUG" VARCHAR(255) NOT NULL UNIQUE, "PERMISSION" VARCHAR(50) NOT NULL, "CREATED_AT" TIMESTAMP NOT NULL, "REPO_ID" VARCHAR(36) NOT NULL);
CREATE INDEX IF NOT EXISTS "ABUSE_REPORTS_ABUSEREPORT_ABUSE_TYPE_703D5335" ON "ABUSE_REPORTS_ABUSEREPORT" ("ABUSE_TYPE");
CREATE INDEX IF NOT EXISTS "ABUSE_REPORTS_ABUSEREPORT_HANDLED_94B8304C" ON "ABUSE_REPORTS_ABUSEREPORT" ("HANDLED");
CREATE INDEX IF NOT EXISTS "ADMIN_LOG_ADMINLOG_EMAIL_7213C993" ON "ADMIN_LOG_ADMINLOG" ("EMAIL");
CREATE INDEX IF NOT EXISTS "ADMIN_LOG_ADMINLOG_OPERATION_4BAD7BD1" ON "ADMIN_LOG_ADMINLOG" ("OPERATION");
CREATE UNIQUE INDEX IF NOT EXISTS  "API2_TOKENV2_USER_PLATFORM_DEVICE_ID_37005C24_UNIQ" ON "API2_TOKENV2" ("USER", "PLATFORM", "DEVICE_ID");
CREATE UNIQUE INDEX IF NOT EXISTS  "DJANGO_CONTENT_TYPE_APP_LABEL_MODEL_76BD3D3B_UNIQ" ON "DJANGO_CONTENT_TYPE" ("APP_LABEL", "MODEL");
CREATE UNIQUE INDEX IF NOT EXISTS  "AUTH_GROUP_PERMISSIONS_GROUP_ID_PERMISSION_ID_0CD325B0_UNIQ" ON "AUTH_GROUP_PERMISSIONS" ("GROUP_ID", "PERMISSION_ID");
CREATE INDEX IF NOT EXISTS "AUTH_GROUP_PERMISSIONS_GROUP_ID_B120CBF9" ON "AUTH_GROUP_PERMISSIONS" ("GROUP_ID");
CREATE INDEX IF NOT EXISTS "AUTH_GROUP_PERMISSIONS_PERMISSION_ID_84C5C92E" ON "AUTH_GROUP_PERMISSIONS" ("PERMISSION_ID");
CREATE UNIQUE INDEX IF NOT EXISTS  "AUTH_USER_GROUPS_USER_ID_GROUP_ID_94350C0C_UNIQ" ON "AUTH_USER_GROUPS" ("USER_ID", "GROUP_ID");
CREATE INDEX IF NOT EXISTS "AUTH_USER_GROUPS_USER_ID_6A12ED8B" ON "AUTH_USER_GROUPS" ("USER_ID");
CREATE INDEX IF NOT EXISTS "AUTH_USER_GROUPS_GROUP_ID_97559544" ON "AUTH_USER_GROUPS" ("GROUP_ID");
CREATE UNIQUE INDEX IF NOT EXISTS  "AUTH_USER_USER_PERMISSIONS_USER_ID_PERMISSION_ID_14A6B632_UNIQ" ON "AUTH_USER_USER_PERMISSIONS" ("USER_ID", "PERMISSION_ID");
CREATE INDEX IF NOT EXISTS "AUTH_USER_USER_PERMISSIONS_USER_ID_A95EAD1B" ON "AUTH_USER_USER_PERMISSIONS" ("USER_ID");
CREATE INDEX IF NOT EXISTS "AUTH_USER_USER_PERMISSIONS_PERMISSION_ID_1FBB5F2C" ON "AUTH_USER_USER_PERMISSIONS" ("PERMISSION_ID");
CREATE UNIQUE INDEX IF NOT EXISTS  "AUTH_PERMISSION_CONTENT_TYPE_ID_CODENAME_01AB375A_UNIQ" ON "AUTH_PERMISSION" ("CONTENT_TYPE_ID", "CODENAME");
CREATE INDEX IF NOT EXISTS "AUTH_PERMISSION_CONTENT_TYPE_ID_2F476E4B" ON "AUTH_PERMISSION" ("CONTENT_TYPE_ID");
CREATE INDEX IF NOT EXISTS "TAGS_FILEUUIDMAP_REPO_ID_AC67AA33" ON "TAGS_FILEUUIDMAP" ("REPO_ID");
CREATE INDEX IF NOT EXISTS "TAGS_FILEUUIDMAP_REPO_ID_PARENT_PATH_MD5_C8BB0860" ON "TAGS_FILEUUIDMAP" ("REPO_ID_PARENT_PATH_MD5");
CREATE INDEX IF NOT EXISTS "TAGS_FILETAG_TAG_ID_0F264FC9" ON "TAGS_FILETAG" ("TAG_ID");
CREATE INDEX IF NOT EXISTS "TAGS_FILETAG_UUID_ID_2AA2266C" ON "TAGS_FILETAG" ("UUID_ID");
CREATE UNIQUE INDEX IF NOT EXISTS  "BASE_DEVICETOKEN_TOKEN_USER_38535636_UNIQ" ON "BASE_DEVICETOKEN" ("TOKEN", "USER");
CREATE INDEX IF NOT EXISTS "BASE_CLIENTLOGINTOKEN_USERNAME_4AD5D42C" ON "BASE_CLIENTLOGINTOKEN" ("USERNAME");
CREATE INDEX IF NOT EXISTS "BASE_USERLASTLOGIN_USERNAME_270DE06F" ON "BASE_USERLASTLOGIN" ("USERNAME");
CREATE INDEX IF NOT EXISTS "BASE_USERSTARREDFILES_EMAIL_29E69053" ON "BASE_USERSTARREDFILES" ("EMAIL");
CREATE INDEX IF NOT EXISTS "BASE_USERSTARREDFILES_REPO_ID_F5ECC00A" ON "BASE_USERSTARREDFILES" ("REPO_ID");
CREATE INDEX IF NOT EXISTS "SOCIAL_AUTH_USERSOCIALAUTH_USERNAME_3F06B5CF" ON "SOCIAL_AUTH_USERSOCIALAUTH" ("USERNAME");
CREATE INDEX IF NOT EXISTS "BASE_FILECOMMENT_AUTHOR_8A4D7E91" ON "BASE_FILECOMMENT" ("AUTHOR");
CREATE INDEX IF NOT EXISTS "BASE_FILECOMMENT_UUID_ID_4F9A2CA2" ON "BASE_FILECOMMENT" ("UUID_ID");
CREATE INDEX IF NOT EXISTS "BASE_FILECOMMENT_RESOLVED_E0717ECA" ON "BASE_FILECOMMENT" ("RESOLVED");
CREATE UNIQUE INDEX IF NOT EXISTS  "SOCIAL_AUTH_USERSOCIALAUTH_PROVIDER_UID_E6B5E668_UNIQ" ON "SOCIAL_AUTH_USERSOCIALAUTH" ("PROVIDER", "UID");
CREATE INDEX IF NOT EXISTS "CONTACTS_CONTACT_USER_EMAIL_149035D4" ON "CONTACTS_CONTACT" ("USER_EMAIL");
CREATE UNIQUE INDEX IF NOT EXISTS  "DJANGO_CAS_NG_PROXYGRANTINGTICKET_SESSION_KEY_USER_8A4EC2BC_UNIQ" ON "DJANGO_CAS_NG_PROXYGRANTINGTICKET" ("SESSION_KEY", "USER");
CREATE INDEX IF NOT EXISTS "DJANGO_CAS_NG_PROXYGRANTINGTICKET_USER_1F42619D" ON "DJANGO_CAS_NG_PROXYGRANTINGTICKET" ("USER");
CREATE INDEX IF NOT EXISTS "DRAFTS_DRAFTREVIEWER_REVIEWER_E4C777AC" ON "DRAFTS_DRAFTREVIEWER" ("REVIEWER");
CREATE INDEX IF NOT EXISTS "DRAFTS_DRAFTREVIEWER_DRAFT_ID_4EA59775" ON "DRAFTS_DRAFTREVIEWER" ("DRAFT_ID");
CREATE INDEX IF NOT EXISTS "DRAFTS_DRAFT_CREATED_AT_E9F4523F" ON "DRAFTS_DRAFT" ("CREATED_AT");
CREATE INDEX IF NOT EXISTS "DRAFTS_DRAFT_UPDATED_AT_0A144B05" ON "DRAFTS_DRAFT" ("UPDATED_AT");
CREATE INDEX IF NOT EXISTS "DRAFTS_DRAFT_USERNAME_73E6738B" ON "DRAFTS_DRAFT" ("USERNAME");
CREATE INDEX IF NOT EXISTS "DRAFTS_DRAFT_ORIGIN_REPO_ID_8978CA2C" ON "DRAFTS_DRAFT" ("ORIGIN_REPO_ID");
CREATE UNIQUE INDEX IF NOT EXISTS  "FILE_PARTICIPANTS_FILEPARTICIPANT_UUID_ID_USERNAME_C747DD36_UNIQ" ON "FILE_PARTICIPANTS_FILEPARTICIPANT" ("UUID_ID", "USERNAME");
CREATE INDEX IF NOT EXISTS "FILE_PARTICIPANTS_FILEPARTICIPANT_UUID_ID_861B7339" ON "FILE_PARTICIPANTS_FILEPARTICIPANT" ("UUID_ID");
CREATE INDEX IF NOT EXISTS "REPO_TAGS_REPOTAGS_REPO_ID_1163A48F" ON "REPO_TAGS_REPOTAGS" ("REPO_ID");
CREATE INDEX IF NOT EXISTS "REPO_TAGS_REPOTAGS_NAME_3F4C9027" ON "REPO_TAGS_REPOTAGS" ("NAME");
CREATE INDEX IF NOT EXISTS "REPO_TAGS_REPOTAGS_COLOR_1292B6C1" ON "REPO_TAGS_REPOTAGS" ("COLOR");
CREATE INDEX IF NOT EXISTS "FILE_TAGS_FILETAGS_FILE_UUID_ID_E30F0EC8" ON "FILE_TAGS_FILETAGS" ("FILE_UUID_ID");
CREATE INDEX IF NOT EXISTS "FILE_TAGS_FILETAGS_REPO_TAG_ID_C39660CB" ON "FILE_TAGS_FILETAGS" ("REPO_TAG_ID");
CREATE INDEX IF NOT EXISTS "INSTITUTIONS_INSTITUTIONQUOTA_INSTITUTION_ID_D23201D9" ON "INSTITUTIONS_INSTITUTIONQUOTA" ("INSTITUTION_ID");
CREATE INDEX IF NOT EXISTS "INSTITUTIONS_INSTITUTIONADMIN_INSTITUTION_ID_1E9BB58B" ON "INSTITUTIONS_INSTITUTIONADMIN" ("INSTITUTION_ID");
CREATE INDEX IF NOT EXISTS "INSTITUTIONS_INSTITUTIONADMIN_USER_C71D766D" ON "INSTITUTIONS_INSTITUTIONADMIN" ("USER");
CREATE INDEX IF NOT EXISTS "INVITATIONS_INVITATION_TOKEN_25A92A38" ON "INVITATIONS_INVITATION" ("TOKEN");
CREATE INDEX IF NOT EXISTS "INVITATIONS_INVITATION_INVITER_B0A7B855" ON "INVITATIONS_INVITATION" ("INVITER");
CREATE INDEX IF NOT EXISTS "REPO_SHARE_INVITATION_REPO_ID_7BCF84FA" ON "REPO_SHARE_INVITATION" ("REPO_ID");
CREATE INDEX IF NOT EXISTS "REPO_SHARE_INVITATION_INVITATION_ID_B71EFFD2" ON "REPO_SHARE_INVITATION" ("INVITATION_ID");
CREATE INDEX IF NOT EXISTS "NOTIFICATIONS_NOTIFICATION_PRIMARY_4F95EC21" ON "NOTIFICATIONS_NOTIFICATION" ("PRIMARY");
CREATE INDEX IF NOT EXISTS "NOTIFICATIONS_USERNOTIFICATION_TO_USER_6CADAFA1" ON "NOTIFICATIONS_USERNOTIFICATION" ("TO_USER");
CREATE INDEX IF NOT EXISTS "NOTIFICATIONS_USERNOTIFICATION_MSG_TYPE_985AFD02" ON "NOTIFICATIONS_USERNOTIFICATION" ("MSG_TYPE");
CREATE INDEX IF NOT EXISTS "NOTIFICATIONS_USERNOTIFICATION_TIMESTAMP_125067E8" ON "NOTIFICATIONS_USERNOTIFICATION" ("TIMESTAMP");
CREATE INDEX IF NOT EXISTS "OPTIONS_USEROPTIONS_EMAIL_77D5726A" ON "OPTIONS_USEROPTIONS" ("EMAIL");
CREATE INDEX IF NOT EXISTS "OPTIONS_USEROPTIONS_OPTION_KEY_7BF7AE4B" ON "OPTIONS_USEROPTIONS" ("OPTION_KEY");
CREATE INDEX IF NOT EXISTS "ORGANIZATIONS_ORGMEMBERQUOTA_ORG_ID_93DDE51D" ON "ORGANIZATIONS_ORGMEMBERQUOTA" ("ORG_ID");
CREATE UNIQUE INDEX IF NOT EXISTS  "POST_OFFICE_ATTACHMENT_EMAILS_ATTACHMENT_ID_EMAIL_ID_8E046917_UNIQ" ON "POST_OFFICE_ATTACHMENT_EMAILS" ("ATTACHMENT_ID", "EMAIL_ID");
CREATE INDEX IF NOT EXISTS "POST_OFFICE_ATTACHMENT_EMAILS_ATTACHMENT_ID_6136FD9A" ON "POST_OFFICE_ATTACHMENT_EMAILS" ("ATTACHMENT_ID");
CREATE INDEX IF NOT EXISTS "POST_OFFICE_ATTACHMENT_EMAILS_EMAIL_ID_96875FD9" ON "POST_OFFICE_ATTACHMENT_EMAILS" ("EMAIL_ID");
CREATE INDEX IF NOT EXISTS "POST_OFFICE_EMAIL_STATUS_013A896C" ON "POST_OFFICE_EMAIL" ("STATUS");
CREATE INDEX IF NOT EXISTS "POST_OFFICE_EMAIL_CREATED_1306952F" ON "POST_OFFICE_EMAIL" ("CREATED");
CREATE INDEX IF NOT EXISTS "POST_OFFICE_EMAIL_LAST_UPDATED_0FFCEC35" ON "POST_OFFICE_EMAIL" ("LAST_UPDATED");
CREATE INDEX IF NOT EXISTS "POST_OFFICE_EMAIL_SCHEDULED_TIME_3869EBEC" ON "POST_OFFICE_EMAIL" ("SCHEDULED_TIME");
CREATE INDEX IF NOT EXISTS "POST_OFFICE_EMAIL_TEMPLATE_ID_417DA7DA" ON "POST_OFFICE_EMAIL" ("TEMPLATE_ID");
CREATE INDEX IF NOT EXISTS "POST_OFFICE_EMAILTEMPLATE_DEFAULT_TEMPLATE_ID_2AC2F889" ON "POST_OFFICE_EMAILTEMPLATE" ("DEFAULT_TEMPLATE_ID");
CREATE INDEX IF NOT EXISTS "POST_OFFICE_LOG_EMAIL_ID_D42C8808" ON "POST_OFFICE_LOG" ("EMAIL_ID");
CREATE UNIQUE INDEX IF NOT EXISTS  "POST_OFFICE_EMAILTEMPLATE_NAME_LANGUAGE_DEFAULT_TEMPLATE_ID_4023E3E4_UNIQ" ON "POST_OFFICE_EMAILTEMPLATE" ("NAME", "LANGUAGE", "DEFAULT_TEMPLATE_ID");
CREATE INDEX IF NOT EXISTS "PROFILE_DETAILEDPROFILE_USER_612C11BA" ON "PROFILE_DETAILEDPROFILE" ("USER");
CREATE INDEX IF NOT EXISTS "PROFILE_PROFILE_INSTITUTION_C0286BD1" ON "PROFILE_PROFILE" ("INSTITUTION");
CREATE INDEX IF NOT EXISTS "PROFILE_PROFILE_LIST_IN_ADDRESS_BOOK_B1009A78" ON "PROFILE_PROFILE" ("LIST_IN_ADDRESS_BOOK");
CREATE INDEX IF NOT EXISTS "RELATED_FILES_RELATEDFILES_O_UUID_ID_AAA8E613" ON "RELATED_FILES_RELATEDFILES" ("O_UUID_ID");
CREATE INDEX IF NOT EXISTS "RELATED_FILES_RELATEDFILES_R_UUID_ID_031751DF" ON "RELATED_FILES_RELATEDFILES" ("R_UUID_ID");
CREATE INDEX IF NOT EXISTS "REPO_API_TOKENS_REPO_ID_47A50FEF" ON "REPO_API_TOKENS" ("REPO_ID");
CREATE INDEX IF NOT EXISTS "REPO_API_TOKENS_APP_NAME_7C395C31" ON "REPO_API_TOKENS" ("APP_NAME");
CREATE INDEX IF NOT EXISTS "REVISION_TAG_REVISIONTAGS_REPO_ID_212C0C69" ON "REVISION_TAG_REVISIONTAGS" ("REPO_ID");
CREATE INDEX IF NOT EXISTS "REVISION_TAG_REVISIONTAGS_REVISION_ID_FD9FE0F9" ON "REVISION_TAG_REVISIONTAGS" ("REVISION_ID");
CREATE INDEX IF NOT EXISTS "REVISION_TAG_REVISIONTAGS_USERNAME_3007D29E" ON "REVISION_TAG_REVISIONTAGS" ("USERNAME");
CREATE INDEX IF NOT EXISTS "REVISION_TAG_REVISIONTAGS_TAG_ID_EE4E9B00" ON "REVISION_TAG_REVISIONTAGS" ("TAG_ID");
CREATE INDEX IF NOT EXISTS "DJANGO_SESSION_EXPIRE_DATE_A5C62663" ON "DJANGO_SESSION" ("EXPIRE_DATE");
CREATE INDEX IF NOT EXISTS "SHARE_EXTRAGROUPSSHAREPERMISSION_REPO_ID_38DBAEA1" ON "SHARE_EXTRAGROUPSSHAREPERMISSION" ("REPO_ID");
CREATE INDEX IF NOT EXISTS "SHARE_EXTRAGROUPSSHAREPERMISSION_GROUP_ID_6CA34BB2" ON "SHARE_EXTRAGROUPSSHAREPERMISSION" ("GROUP_ID");
CREATE INDEX IF NOT EXISTS "SHARE_EXTRASHAREPERMISSION_REPO_ID_23CC10FC" ON "SHARE_EXTRASHAREPERMISSION" ("REPO_ID");
CREATE INDEX IF NOT EXISTS "SHARE_EXTRASHAREPERMISSION_SHARE_TO_823C16CB" ON "SHARE_EXTRASHAREPERMISSION" ("SHARE_TO");
CREATE INDEX IF NOT EXISTS "SHARE_ORGFILESHARE_ORG_ID_8D17998C" ON "SHARE_ORGFILESHARE" ("ORG_ID");
CREATE INDEX IF NOT EXISTS "SHARE_UPLOADLINKSHARE_USERNAME_3203C243" ON "SHARE_UPLOADLINKSHARE" ("USERNAME");
CREATE INDEX IF NOT EXISTS "SHARE_UPLOADLINKSHARE_REPO_ID_C519F857" ON "SHARE_UPLOADLINKSHARE" ("REPO_ID");
CREATE INDEX IF NOT EXISTS "SHARE_UPLOADLINKSHARE_EXPIRE_DATE" ON "SHARE_UPLOADLINKSHARE" ("EXPIRE_DATE");
CREATE INDEX IF NOT EXISTS "SHARE_FILESHARE_USERNAME_5CB6DE75" ON "SHARE_FILESHARE" ("USERNAME");
CREATE INDEX IF NOT EXISTS "SHARE_FILESHARE_REPO_ID_9B5AE27A" ON "SHARE_FILESHARE" ("REPO_ID");
CREATE INDEX IF NOT EXISTS "SHARE_FILESHARE_S_TYPE_724EB6C1" ON "SHARE_FILESHARE" ("S_TYPE");
CREATE INDEX IF NOT EXISTS "SHARE_FILESHARE_PERMISSION_D12C353F" ON "SHARE_FILESHARE" ("PERMISSION");
CREATE INDEX IF NOT EXISTS "SHARE_FILESHARE_IDX_CTIME" ON "SHARE_FILESHARE" ("CTIME");
CREATE INDEX IF NOT EXISTS "SHARE_FILESHARE_IDX_VIEW_CNT" ON "SHARE_FILESHARE" ("VIEW_CNT");
CREATE INDEX IF NOT EXISTS "SHARE_PRIVATEFILEDIRSHARE_FROM_USER_D568D535" ON "SHARE_PRIVATEFILEDIRSHARE" ("FROM_USER");
CREATE INDEX IF NOT EXISTS "SHARE_PRIVATEFILEDIRSHARE_TO_USER_2A92A044" ON "SHARE_PRIVATEFILEDIRSHARE" ("TO_USER");
CREATE INDEX IF NOT EXISTS "SHARE_PRIVATEFILEDIRSHARE_REPO_ID_97C5CB6F" ON "SHARE_PRIVATEFILEDIRSHARE" ("REPO_ID");
CREATE INDEX IF NOT EXISTS "SYSADMIN_EXTRA_USERLOGINLOG_USERNAME_5748B9E3" ON "SYSADMIN_EXTRA_USERLOGINLOG" ("USERNAME");
CREATE INDEX IF NOT EXISTS "SYSADMIN_EXTRA_USERLOGINLOG_LOGIN_DATE_C171D790" ON "SYSADMIN_EXTRA_USERLOGINLOG" ("LOGIN_DATE");
CREATE UNIQUE INDEX IF NOT EXISTS  "TERMSANDCONDITIONS_USERTERMSANDCONDITIONS_USERNAME_TERMS_ID_A7DABB70_UNIQ" ON "TERMSANDCONDITIONS_USERTERMSANDCONDITIONS" ("USERNAME", "TERMS_ID");
CREATE INDEX IF NOT EXISTS "TERMSANDCONDITIONS_TERMSANDCONDITIONS_SLUG_489D1E9D" ON "TERMSANDCONDITIONS_TERMSANDCONDITIONS" ("SLUG");
CREATE INDEX IF NOT EXISTS "TERMSANDCONDITIONS_USERTERMSANDCONDITIONS_TERMS_ID_EACDBCC7" ON "TERMSANDCONDITIONS_USERTERMSANDCONDITIONS" ("TERMS_ID");
CREATE INDEX IF NOT EXISTS "TRUSTED_IP_TRUSTEDIP_IP_E898970C" ON "TRUSTED_IP_TRUSTEDIP" ("IP");
CREATE INDEX IF NOT EXISTS "TWO_FACTOR_STATICTOKEN_TOKEN_2ADE1084" ON "TWO_FACTOR_STATICTOKEN" ("TOKEN");
CREATE INDEX IF NOT EXISTS "TWO_FACTOR_STATICTOKEN_DEVICE_ID_93095B45" ON "TWO_FACTOR_STATICTOKEN" ("DEVICE_ID");
CREATE UNIQUE INDEX IF NOT EXISTS  "WIKI_WIKI_USERNAME_REPO_ID_4C8925AF_UNIQ" ON "WIKI_WIKI" ("USERNAME", "REPO_ID");
CREATE INDEX IF NOT EXISTS "WIKI_WIKI_CREATED_AT_54930E39" ON "WIKI_WIKI" ("CREATED_AT");
CREATE INDEX IF NOT EXISTS "WIKI_WIKI_REPO_ID_2EE93C37" ON "WIKI_WIKI" ("REPO_ID");
CREATE TABLE IF NOT EXISTS "OCM_SHARE" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "SHARED_SECRET" VARCHAR(36) NOT NULL UNIQUE, "FROM_USER" VARCHAR(255) NOT NULL, "TO_USER" VARCHAR(255) NOT NULL, "TO_SERVER_URL" VARCHAR(200) NOT NULL, "REPO_ID" VARCHAR(36) NOT NULL, "REPO_NAME" VARCHAR(255) NOT NULL, "PERMISSION" VARCHAR(50) NOT NULL, "PATH" TEXT NOT NULL, "CTIME" TIMESTAMP NOT NULL);
CREATE INDEX IF NOT EXISTS "OCM_SHARE_FROM_USER_7FBB7BB6" ON "OCM_SHARE" ("FROM_USER");
CREATE INDEX IF NOT EXISTS "OCM_SHARE_TO_USER_4E255523" ON "OCM_SHARE" ("TO_USER");
CREATE INDEX IF NOT EXISTS "OCM_SHARE_TO_SERVER_URL_43F0E89B" ON "OCM_SHARE" ("TO_SERVER_URL");
CREATE INDEX IF NOT EXISTS "OCM_SHARE_REPO_ID_51937581" ON "OCM_SHARE" ("REPO_ID");
CREATE TABLE IF NOT EXISTS "OCM_SHARE_RECEIVED" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "SHARED_SECRET" VARCHAR(36) NOT NULL UNIQUE, "FROM_USER" VARCHAR(255) NOT NULL, "TO_USER" VARCHAR(255) NOT NULL, "FROM_SERVER_URL" VARCHAR(200) NOT NULL, "REPO_ID" VARCHAR(36) NOT NULL, "REPO_NAME" VARCHAR(255) NOT NULL, "PERMISSION" VARCHAR(50) NOT NULL, "PATH" TEXT NOT NULL, "PROVIDER_ID" VARCHAR(40) NOT NULL, "CTIME" TIMESTAMP NOT NULL);
CREATE INDEX IF NOT EXISTS "OCM_SHARE_RECEIVED_FROM_USER_8137D8EB" ON "OCM_SHARE_RECEIVED" ("FROM_USER");
CREATE INDEX IF NOT EXISTS "OCM_SHARE_RECEIVED_TO_USER_0921D09A" ON "OCM_SHARE_RECEIVED" ("TO_USER");
CREATE INDEX IF NOT EXISTS "OCM_SHARE_RECEIVED_FROM_SERVER_URL_10527B80" ON "OCM_SHARE_RECEIVED" ("FROM_SERVER_URL");
CREATE INDEX IF NOT EXISTS "OCM_SHARE_RECEIVED_REPO_ID_9E77A1B9" ON "OCM_SHARE_RECEIVED" ("REPO_ID");
CREATE INDEX IF NOT EXISTS "OCM_SHARE_RECEIVED_PROVIDER_ID_60C873E0" ON "OCM_SHARE_RECEIVED" ("PROVIDER_ID");
CREATE TABLE IF NOT EXISTS "REPO_AUTO_DELETE" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "REPO_ID" VARCHAR(36) NOT NULL UNIQUE, "DAYS" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS "EXTERNAL_DEPARTMENT" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "GROUP_ID" INTEGER NOT NULL UNIQUE, "PROVIDER" VARCHAR(32) NOT NULL, "OUTER_ID" BIGINT NOT NULL);
CREATE UNIQUE INDEX IF NOT EXISTS  "EXTERNAL_DEPARTMENT_PROVIDER_OUTER_ID_8DNS6VKW_UNIQ" ON "EXTERNAL_DEPARTMENT" ("PROVIDER","OUTER_ID");
CREATE TABLE IF NOT EXISTS "CUSTOM_SHARE_PERMISSION" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "REPO_ID" VARCHAR(36) NOT NULL, "NAME" VARCHAR(255) NOT NULL, "DESCRIPTION" VARCHAR(500) NOT NULL, "PERMISSION" TEXT NOT NULL);
CREATE INDEX IF NOT EXISTS "CUSTOM_SHARE_PERMISSION_REPO_ID_578FE49F" ON "CUSTOM_SHARE_PERMISSION" ("REPO_ID");
CREATE TABLE IF NOT EXISTS "OCM_VIA_WEBDAV_RECEIVED_SHARES" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "DESCRIPTION" VARCHAR(255) NULL, "NAME" VARCHAR(255) NOT NULL, "OWNER" VARCHAR(255) NOT NULL, "OWNER_DISPLAY_NAME" VARCHAR(255) NULL, "PROTOCOL_NAME" VARCHAR(255) NOT NULL, "SHARED_SECRET" VARCHAR(255) NOT NULL, "PERMISSIONS" VARCHAR(255) NOT NULL, "PROVIDER_ID" VARCHAR(255) NOT NULL, "RESOURCE_TYPE" VARCHAR(255) NOT NULL, "SHARE_TYPE" VARCHAR(255) NOT NULL, "SHARE_WITH" VARCHAR(255) NOT NULL, "SHARED_BY" VARCHAR(255) NOT NULL, "SHARED_BY_DISPLAY_NAME" VARCHAR(255) NOT NULL, "CTIME" TIMESTAMP NOT NULL, "IS_DIR"  INTEGER NOT NULL);
CREATE INDEX IF NOT EXISTS "OCM_VIA_WEBDAV_SHARE_RECEIVED_OWNER_261EAA70" ON "OCM_VIA_WEBDAV_RECEIVED_SHARES" ("OWNER");
CREATE INDEX IF NOT EXISTS "OCM_VIA_WEBDAV_SHARE_RECEIVED_SHARED_SECRET_FBB6BE5A" ON "OCM_VIA_WEBDAV_RECEIVED_SHARES" ("SHARED_SECRET");
CREATE INDEX IF NOT EXISTS "OCM_VIA_WEBDAV_SHARE_RECEIVED_PROVIDER_ID_A55680E9" ON "OCM_VIA_WEBDAV_RECEIVED_SHARES" ("PROVIDER_ID");
CREATE INDEX IF NOT EXISTS "OCM_VIA_WEBDAV_SHARE_RECEIVED_RESOURCE_TYPE_A3C71B57" ON "OCM_VIA_WEBDAV_RECEIVED_SHARES" ("RESOURCE_TYPE");
CREATE INDEX IF NOT EXISTS "OCM_VIA_WEBDAV_SHARE_RECEIVED_SHARE_TYPE_7615AAAB" ON "OCM_VIA_WEBDAV_RECEIVED_SHARES" ("SHARE_TYPE");
CREATE INDEX IF NOT EXISTS "OCM_VIA_WEBDAV_SHARE_RECEIVED_SHARE_WITH_5A23EB17" ON "OCM_VIA_WEBDAV_RECEIVED_SHARES" ("SHARE_WITH");
CREATE INDEX IF NOT EXISTS "OCM_VIA_WEBDAV_SHARE_RECEIVED_SHARED_BY_1786D580" ON "OCM_VIA_WEBDAV_RECEIVED_SHARES" ("SHARED_BY");
CREATE TABLE IF NOT EXISTS "ONLYOFFICE_ONLYOFFICEDOCKEY" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "DOC_KEY" VARCHAR(36) NOT NULL, "USERNAME" VARCHAR(255) NOT NULL, "REPO_ID" VARCHAR(36) NULL, "FILE_PATH" TEXT NOT NULL, "REPO_ID_FILE_PATH_MD5" VARCHAR(100) NOT NULL, "CREATED_TIME" TIMESTAMP NOT NULL);
CREATE INDEX IF NOT EXISTS "ONLYOFFICE_ONLYOFFICEDOCKEY_DOC_KEY_EDBA1352" ON "ONLYOFFICE_ONLYOFFICEDOCKEY" ("DOC_KEY");
CREATE INDEX IF NOT EXISTS "ONLYOFFICE_ONLYOFFICEDOCKEY_REPO_ID_FILE_PATH_MD5_52002073" ON "ONLYOFFICE_ONLYOFFICEDOCKEY" ("REPO_ID_FILE_PATH_MD5");
CREATE TABLE IF NOT EXISTS "ORG_SAML_CONFIG" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "ORG_ID" INTEGER NOT NULL UNIQUE, "METADATA_URL" TEXT NOT NULL, "DOMAIN" VARCHAR(255) NULL UNIQUE, "DNS_TXT" VARCHAR(64) NULL, "DOMAIN_VERIFIED" INTEGER NOT NULL DEFAULT 0, "IDP_CERTIFICATE" TEXT NULL);
CREATE INDEX IF NOT EXISTS "ORG_SAML_CONFIG_DOMAIN_VERIFIED_398065B9" ON "ORG_SAML_CONFIG" ("DOMAIN_VERIFIED");
CREATE TABLE IF NOT EXISTS "BASE_USERMONITOREDREPOS" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "EMAIL" VARCHAR(254) NOT NULL, "REPO_ID" VARCHAR(36) NOT NULL, "TIMESTAMP" TIMESTAMP NOT NULL, UNIQUE("EMAIL", "REPO_ID"));
CREATE INDEX IF NOT EXISTS "BASE_USERMONITOREDREPOS_EMAIL_55EAD1B9" ON "BASE_USERMONITOREDREPOS" ("EMAIL");
CREATE INDEX IF NOT EXISTS "BASE_USERMONITOREDREPOS_REPO_ID_00E624C3" ON "BASE_USERMONITOREDREPOS" ("REPO_ID");
CREATE TABLE IF NOT EXISTS "ORGANIZATIONS_ORGADMINSETTINGS" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "ORG_ID" INTEGER NOT NULL, "KEY" VARCHAR(255) NOT NULL, "VALUE" TEXT NOT NULL, UNIQUE("ORG_ID", "KEY"));
CREATE INDEX IF NOT EXISTS "ORGANIZATIONS_ORGADMINSETTINGS_ORG_ID_4F70D186" ON "ORGANIZATIONS_ORGADMINSETTINGS" ("ORG_ID");
CREATE TABLE IF NOT EXISTS "HISTORY_NAME" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "DOC_UUID" VARCHAR(36) NOT NULL, "OBJ_ID" VARCHAR(40) NOT NULL, "NAME" VARCHAR(255) NOT NULL, UNIQUE("DOC_UUID", "OBJ_ID"));
CREATE INDEX IF NOT EXISTS "HISTORY_NAME_DOC_UUID" ON "HISTORY_NAME" ("DOC_UUID");
CREATE TABLE IF NOT EXISTS "SDOC_DRAFT" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "DOC_UUID" VARCHAR(36) NOT NULL UNIQUE, "REPO_ID" VARCHAR(36) NOT NULL, "USERNAME" VARCHAR(255) NOT NULL, "CREATED_AT" TIMESTAMP NOT NULL);
CREATE INDEX IF NOT EXISTS "SDOC_DRAFT_REPO_ID" ON "SDOC_DRAFT" ("REPO_ID");
CREATE INDEX IF NOT EXISTS "SDOC_DRAFT_USERNAME" ON "SDOC_DRAFT" ("USERNAME");
CREATE TABLE IF NOT EXISTS "SDOC_REVISION" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "REPO_ID" VARCHAR(36) NOT NULL, "REVISION_ID" INTEGER NOT NULL, "DOC_UUID" VARCHAR(36) NOT NULL UNIQUE, "ORIGIN_DOC_UUID" VARCHAR(36) NOT NULL, "ORIGIN_DOC_PATH" TEXT NOT NULL, "ORIGIN_FILE_VERSION" VARCHAR(100) NOT NULL, "PUBLISH_FILE_VERSION" VARCHAR(100) NULL, "USERNAME" VARCHAR(255) NOT NULL, "PUBLISHER" VARCHAR(255) NULL ,"IS_PUBLISHED" INTEGER NOT NULL, "CREATED_AT" TIMESTAMP NOT NULL, "UPDATED_AT" TIMESTAMP NOT NULL, UNIQUE("REPO_ID", "REVISION_ID"));
CREATE INDEX IF NOT EXISTS "SDOC_REVISION_REPO_ID" ON "SDOC_REVISION" ("REPO_ID");
CREATE INDEX IF NOT EXISTS "SDOC_REVISION_ORIGIN_DOC_UUID" ON "SDOC_REVISION" ("ORIGIN_DOC_UUID");
CREATE INDEX IF NOT EXISTS "SDOC_REVISION_USERNAME" ON "SDOC_REVISION" ("USERNAME");
CREATE INDEX IF NOT EXISTS "SDOC_REVISION_IS_PUBLISHED" ON "SDOC_REVISION" ("IS_PUBLISHED");
CREATE TABLE IF NOT EXISTS "SDOC_COMMENT_REPLY" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "AUTHOR" VARCHAR(255) NOT NULL, "REPLY" TEXT NOT NULL, "TYPE" VARCHAR(36) NOT NULL, "COMMENT_ID" INTEGER NOT NULL, "DOC_UUID" VARCHAR(36) NOT NULL, "CREATED_AT" TIMESTAMP NOT NULL, "UPDATED_AT" TIMESTAMP NOT NULL);
CREATE INDEX IF NOT EXISTS "SDOC_COMMENT_REPLY_COMMENT_ID" ON "SDOC_COMMENT_REPLY" ("COMMENT_ID");
CREATE INDEX IF NOT EXISTS "SDOC_COMMENT_REPLY_DOC_UUID" ON "SDOC_COMMENT_REPLY" ("DOC_UUID");
CREATE TABLE IF NOT EXISTS "SDOC_NOTIFICATION" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "DOC_UUID" VARCHAR(36) NOT NULL UNIQUE, "USERNAME" VARCHAR(255) NOT NULL, "MSG_TYPE" VARCHAR(36) NOT NULL, "CREATED_AT" TIMESTAMP NOT NULL, "DETAIL" TEXT NOT NULL, "SEEN" INTEGER NOT NULL DEFAULT 0);
CREATE INDEX IF NOT EXISTS "SDOC_NOTIFICATION_DOC_UUID_USERNAME" ON "SDOC_NOTIFICATION" ("DOC_UUID", "USERNAME");
CREATE INDEX IF NOT EXISTS "SDOC_NOTIFICATION_CREATED_AT" ON "SDOC_NOTIFICATION" ("CREATED_AT");
CREATE TABLE IF NOT EXISTS "BASE_CLIENTSSOTOKEN" ("ID" INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, "TOKEN" VARCHAR(100) NOT NULL UNIQUE, "USERNAME" VARCHAR(255) NULL, "STATUS" VARCHAR(10) NOT NULL, "API_KEY" VARCHAR(40) NULL, "CREATED_AT" TIMESTAMP NOT NULL, "UPDATED_AT" TIMESTAMP NULL, "ACCESSED_AT" TIMESTAMP NULL);
CREATE INDEX IF NOT EXISTS "BASE_CLIENTSSOTOKEN_USERNAME_651EC6B5" ON "BASE_CLIENTSSOTOKEN" ("USERNAME");
CREATE INDEX IF NOT EXISTS "BASE_CLIENTSSOTOKEN_CREATED_AT_D185D3E0" ON "BASE_CLIENTSSOTOKEN" ("CREATED_AT");
CREATE INDEX IF NOT EXISTS "BASE_CLIENTSSOTOKEN_UPDATED_AT_591FC2CD" ON "BASE_CLIENTSSOTOKEN" ("UPDATED_AT");
CREATE INDEX IF NOT EXISTS "BASE_CLIENTSSOTOKEN_ACCESSED_AT_CDC66BF3" ON "BASE_CLIENTSSOTOKEN" ("ACCESSED_AT");
CREATE TABLE IF NOT EXISTS "WIKI_WIKI2" ("ID" INTEGER PRIMARY KEY AUTO_INCREMENT,"OWNER" VARCHAR(255) NOT NULL,"NAME" VARCHAR(255) NOT NULL,"REPO_ID" VARCHAR(36) NOT NULL,"CREATED_AT" TIMESTAMP NOT NULL,UNIQUE("OWNER", "REPO_ID"));
CREATE INDEX IF NOT EXISTS "WIKI_WIKI_CREATED_AT_54930E36" ON "WIKI_WIKI2" ("CREATED_AT");
CREATE INDEX IF NOT EXISTS "WIKI_WIKI_REPO_ID_2EE93C31" ON "WIKI_WIKI2" ("REPO_ID");
CREATE TABLE IF NOT EXISTS "WIKIPAGETRASH" ("ID" INTEGER PRIMARY KEY AUTO_INCREMENT,"REPO_ID" VARCHAR(36) NOT NULL,"DOC_UUID" TEXT NOT NULL,"PAGE_ID" VARCHAR(4) NOT NULL,"PARENT_PAGE_ID" VARCHAR(4) DEFAULT NULL,"SUBPAGES" TEXT,"NAME" VARCHAR(255) NOT NULL,"DELETE_TIME" TIMESTAMP NOT NULL,"SIZE" INTEGER NOT NULL);
CREATE INDEX IF NOT EXISTS "IX_WIKIPAGETRASH_REPO_ID" ON "WIKIPAGETRASH" ("REPO_ID");
CREATE TABLE IF NOT EXISTS "REPO_METADATA" ("ID" INTEGER PRIMARY KEY AUTO_INCREMENT,"REPO_ID" VARCHAR(36) NOT NULL,"ENABLED" INTEGER NOT NULL,"FACE_RECOGNITION_ENABLED" INTEGER DEFAULT NULL,"LAST_FACE_CLUSTER_TIME" TIMESTAMP DEFAULT NULL,"MODIFIED_TIME" TIMESTAMP NOT NULL,"CREATED_TIME" TIMESTAMP NOT NULL,"FROM_COMMIT" VARCHAR(40) DEFAULT NULL,"TO_COMMIT" VARCHAR(40) DEFAULT NULL,UNIQUE("REPO_ID"));
CREATE INDEX IF NOT EXISTS "KEY_REPO_METADATA_ENABLED" ON "REPO_METADATA" ("ENABLED");
CREATE INDEX IF NOT EXISTS "KEY_REPO_METADATA_FACE_RECOGNITION_ENABLED" ON "REPO_METADATA" ("FACE_RECOGNITION_ENABLED");
CREATE TABLE IF NOT EXISTS "REPO_METADATA_VIEW" ("ID" INTEGER PRIMARY KEY AUTO_INCREMENT,"REPO_ID" VARCHAR(36) NOT NULL,"DETAILS" TEXT NOT NULL);
CREATE INDEX IF NOT EXISTS "IDX_REPO_MEATADATA_VIEW_REPO_ID" ON "REPO_METADATA_VIEW" ("REPO_ID");
CREATE TABLE IF NOT EXISTS "SDOC_OPERATION_LOG" ("ID" INTEGER PRIMARY KEY AUTO_INCREMENT,"DOC_UUID" VARCHAR(36) NOT NULL,"OP_ID" BIGINT NOT NULL,"OP_TIME" BIGINT NOT NULL,"OPERATIONS" TEXT NOT NULL,"AUTHOR" VARCHAR(255) NOT NULL);
CREATE INDEX IF NOT EXISTS "SDOC_OPERATION_LOG_OP_TIME" ON "SDOC_OPERATION_LOG" ("OP_TIME");
CREATE INDEX IF NOT EXISTS "SDOC_OPERATION_LOG_DOC_UUID" ON "SDOC_OPERATION_LOG" ("DOC_UUID");
CREATE INDEX IF NOT EXISTS "SDOC_IDX_OPERATION_LOG_DOC_UUID_OP_ID" ON "SDOC_OPERATION_LOG" ("DOC_UUID", "OP_ID");
CREATE TABLE IF NOT EXISTS "WIKI_WIKI2_PUBLISH" ("ID" INTEGER PRIMARY KEY AUTO_INCREMENT,"REPO_ID" VARCHAR(36) NOT NULL,"PUBLISH_URL" VARCHAR(40) DEFAULT NULL,"USERNAME" VARCHAR(255) NOT NULL,"CREATED_AT" TIMESTAMP NOT NULL,"VISIT_COUNT" INTEGER NOT NULL DEFAULT 0,UNIQUE("REPO_ID"),UNIQUE("PUBLISH_URL"));
CREATE INDEX IF NOT EXISTS "IX_WIKI2_PUBLISH_REPO_ID" ON "WIKI_WIKI2_PUBLISH" ("REPO_ID");




CREATE TABLE IF NOT EXISTS "FILETRASH" ("ID" INTEGER PRIMARY KEY AUTO_INCREMENT,"user" VARCHAR(255) NOT NULL,"OBJ_TYPE" VARCHAR(10) NOT NULL,"OBJ_ID" VARCHAR(40) NOT NULL,"OBJ_NAME" VARCHAR(255) NOT NULL,"DELETE_TIME" TIMESTAMP NOT NULL,"REPO_ID" VARCHAR(36) NOT NULL,"COMMIT_ID" VARCHAR(40) DEFAULT NULL,"PATH" TEXT NOT NULL,"size" INTEGER NOT NULL);
CREATE INDEX IF NOT EXISTS "IX_FILETRASH_REPO_ID" ON "FILETRASH" ("REPO_ID");
CREATE TABLE IF NOT EXISTS "DELETED_FILES_COUNT" ("ID" BIGINT PRIMARY KEY AUTO_INCREMENT,"REPO_ID" VARCHAR(36) NOT NULL,"DELETED_TIME" TIMESTAMP NOT NULL,"FILES_COUNT" BIGINT NOT NULL);
CREATE INDEX IF NOT EXISTS "IX_DELETED_FILES_COUNT_REPO_ID" ON "DELETED_FILES_COUNT" ("REPO_ID");
CREATE INDEX IF NOT EXISTS "IX_DELETED_FILES_COUNT_DELETED_TIME" ON "DELETED_FILES_COUNT" ("DELETED_TIME");
CREATE TABLE IF NOT EXISTS "CONTENTSCANRECORD" ("ID" INTEGER PRIMARY KEY AUTO_INCREMENT,"REPO_ID" VARCHAR(36) NOT NULL,"COMMIT_ID" VARCHAR(40) NOT NULL,"TIMESTAMP" TIMESTAMP NOT NULL);
CREATE INDEX IF NOT EXISTS "IX_CONTENTSCANRECORD_REPO_ID" ON "CONTENTSCANRECORD" ("REPO_ID");
CREATE TABLE IF NOT EXISTS "CONTENTSCANRESULT" ("ID" INTEGER PRIMARY KEY AUTO_INCREMENT,"REPO_ID" VARCHAR(36) NOT NULL,"PATH" TEXT NOT NULL,"PLATFORM" VARCHAR(32) NOT NULL,"DETAIL" TEXT NOT NULL);
CREATE INDEX IF NOT EXISTS "IX_CONTENTSCANRESULT_REPO_ID" ON "CONTENTSCANRESULT" ("REPO_ID");
CREATE TABLE IF NOT EXISTS "ACTIVITY" ("ID" BIGINT PRIMARY KEY AUTO_INCREMENT,"OP_TYPE" VARCHAR(128) NOT NULL,"OP_USER" VARCHAR(255) NOT NULL,"OBJ_TYPE" VARCHAR(128) NOT NULL,"TIMESTAMP" TIMESTAMP NOT NULL,"REPO_ID" VARCHAR(36) NOT NULL,"COMMIT_ID" VARCHAR(40) DEFAULT NULL,"PATH" TEXT NOT NULL,"DETAIL" TEXT NOT NULL);
CREATE INDEX IF NOT EXISTS "IX_ACTIVITY_TIMESTAMP" ON "ACTIVITY" ("TIMESTAMP");
CREATE TABLE IF NOT EXISTS "USERACTIVITY" ("ID" BIGINT PRIMARY KEY AUTO_INCREMENT,"USERNAME" VARCHAR(255) NOT NULL,"ACTIVITY_ID" BIGINT DEFAULT NULL,"TIMESTAMP" TIMESTAMP NOT NULL);
CREATE INDEX IF NOT EXISTS "ACTIVITY_ID" ON "USERACTIVITY" ("ACTIVITY_ID");
CREATE INDEX IF NOT EXISTS "IX_USERACTIVITY_TIMESTAMP" ON "USERACTIVITY" ("TIMESTAMP");
CREATE INDEX IF NOT EXISTS "IDX_USERNAME_TIMESTAMP" ON "USERACTIVITY" ("USERNAME", "TIMESTAMP");
CREATE TABLE IF NOT EXISTS "FILEHISTORY" ("ID" BIGINT PRIMARY KEY AUTO_INCREMENT,"OP_TYPE" VARCHAR(128) NOT NULL,"OP_USER" VARCHAR(255) NOT NULL,"TIMESTAMP" TIMESTAMP NOT NULL,"REPO_ID" VARCHAR(36) NOT NULL,"COMMIT_ID" VARCHAR(40) DEFAULT NULL,"FILE_ID" VARCHAR(340) NOT NULL,"FILE_UUID" VARCHAR(40) DEFAULT NULL,"PATH" TEXT NOT NULL,"REPO_ID_PATH_MD5" VARCHAR(32) DEFAULT NULL,"size" BIGINT NOT NULL,"OLD_PATH" TEXT NOT NULL);
CREATE INDEX IF NOT EXISTS "IX_FILEHISTORY_FILE_UUID" ON "FILEHISTORY" ("FILE_UUID");
CREATE INDEX IF NOT EXISTS "IX_FILEHISTORY_TIMESTAMP" ON "FILEHISTORY" ("TIMESTAMP");
CREATE TABLE IF NOT EXISTS "FILEAUDIT" ("EID" BIGINT PRIMARY KEY AUTO_INCREMENT,"TIMESTAMP" TIMESTAMP NOT NULL,"ETYPE" VARCHAR(128) NOT NULL,"user" VARCHAR(255) NOT NULL,"IP" VARCHAR(45) NOT NULL,"DEVICE" TEXT NOT NULL,"ORG_ID" INTEGER NOT NULL,"REPO_ID" VARCHAR(36) NOT NULL,"FILE_PATH" TEXT NOT NULL);
CREATE INDEX IF NOT EXISTS "IX_FILEAUDIT_USER" ON "FILEAUDIT" ("user");
CREATE INDEX IF NOT EXISTS "IDX_FILE_AUDIT_USER_ORGID_EID" ON "FILEAUDIT" ("user", "ORG_ID", "EID");
CREATE INDEX IF NOT EXISTS "IDX_FILE_AUDIT_REPO_ORG_EID" ON "FILEAUDIT" ("REPO_ID", "ORG_ID", "EID");
CREATE INDEX IF NOT EXISTS "IX_FILEAUDIT_TIMESTAMP" ON "FILEAUDIT" ("TIMESTAMP");
CREATE INDEX IF NOT EXISTS "IX_FILEAUDIT_REPO_ID" ON "FILEAUDIT" ("REPO_ID");
CREATE TABLE IF NOT EXISTS "FILEUPDATE" ("EID" BIGINT PRIMARY KEY AUTO_INCREMENT,"TIMESTAMP" TIMESTAMP NOT NULL,"user" VARCHAR(255) NOT NULL,"ORG_ID" INTEGER NOT NULL,"REPO_ID" VARCHAR(36) NOT NULL,"COMMIT_ID" VARCHAR(40) NOT NULL,"FILE_OPER" TEXT NOT NULL);
CREATE INDEX IF NOT EXISTS "IDX_FILE_UPDATE_USER_ORGID_EID" ON "FILEUPDATE" ("user", "ORG_ID", "EID");
CREATE INDEX IF NOT EXISTS "IX_FILEUPDATE_TIMESTAMP" ON "FILEUPDATE" ("TIMESTAMP");
CREATE INDEX IF NOT EXISTS "IDX_FILE_UPDATE_REPO_ORG_EID" ON "FILEUPDATE" ("REPO_ID", "ORG_ID", "EID");
CREATE TABLE IF NOT EXISTS "PERMAUDIT" ("EID" BIGINT PRIMARY KEY AUTO_INCREMENT,"TIMESTAMP" TIMESTAMP NOT NULL,"ETYPE" VARCHAR(128) NOT NULL,"FROM_USER" VARCHAR(255) NOT NULL,"to" VARCHAR(255) NOT NULL,"ORG_ID" INTEGER NOT NULL,"REPO_ID" VARCHAR(36) NOT NULL,"FILE_PATH" TEXT NOT NULL,"PERMISSION" VARCHAR(15) NOT NULL);
CREATE INDEX IF NOT EXISTS "IDX_PERM_AUDIT_REPO_ORG_EID" ON "PERMAUDIT" ("REPO_ID", "ORG_ID", "EID");
CREATE INDEX IF NOT EXISTS "IDX_PERM_AUDIT_USER_ORGID_EID" ON "PERMAUDIT" ("FROM_USER", "ORG_ID", "EID");
CREATE TABLE IF NOT EXISTS "TOTALSTORAGESTAT" ("ID" INTEGER PRIMARY KEY AUTO_INCREMENT,"TIMESTAMP" TIMESTAMP NOT NULL,"TOTAL_SIZE" BIGINT NOT NULL,"ORG_ID" INTEGER NOT NULL);
CREATE INDEX IF NOT EXISTS "IDX_STORAGE_TIME_ORG" ON "TOTALSTORAGESTAT" ("TIMESTAMP", "ORG_ID");
CREATE TABLE IF NOT EXISTS "FILEOPSSTAT" ("ID" INTEGER PRIMARY KEY AUTO_INCREMENT,"TIMESTAMP" TIMESTAMP NOT NULL,"OP_TYPE" VARCHAR(16) NOT NULL,"number" INTEGER NOT NULL,"ORG_ID" INTEGER NOT NULL);
CREATE INDEX IF NOT EXISTS "IDX_FILE_OPS_TIME_ORG" ON "FILEOPSSTAT" ("TIMESTAMP", "ORG_ID");
CREATE TABLE IF NOT EXISTS "USERACTIVITYSTAT" ("ID" INTEGER PRIMARY KEY AUTO_INCREMENT,"NAME_TIME_MD5" VARCHAR(32) DEFAULT NULL,"USERNAME" VARCHAR(255) DEFAULT NULL,"TIMESTAMP" TIMESTAMP NOT NULL,"ORG_ID" INTEGER NOT NULL,UNIQUE("NAME_TIME_MD5"));
CREATE INDEX IF NOT EXISTS "IDX_ACTIVITY_TIME_ORG" ON "USERACTIVITYSTAT" ("TIMESTAMP", "ORG_ID");
CREATE INDEX IF NOT EXISTS "IX_USERACTIVITYSTAT_TIMESTAMP" ON "USERACTIVITYSTAT" ("TIMESTAMP");
CREATE TABLE IF NOT EXISTS "USERTRAFFIC" ("ID" INTEGER PRIMARY KEY AUTO_INCREMENT,"user" VARCHAR(255) NOT NULL,"ORG_ID" INTEGER DEFAULT NULL,"TIMESTAMP" TIMESTAMP NOT NULL,"OP_TYPE" VARCHAR(48) NOT NULL,"size" BIGINT NOT NULL);
CREATE INDEX IF NOT EXISTS "IX_USERTRAFFIC_ORG_ID" ON "USERTRAFFIC" ("ORG_ID");
CREATE INDEX IF NOT EXISTS "IDX_TRAFFIC_TIME_USER" ON "USERTRAFFIC" ("TIMESTAMP", "user", "ORG_ID");
CREATE TABLE IF NOT EXISTS "SYSTRAFFIC" ("ID" INTEGER PRIMARY KEY AUTO_INCREMENT,"ORG_ID" INTEGER DEFAULT NULL,"TIMESTAMP" TIMESTAMP NOT NULL,"OP_TYPE" VARCHAR(48) NOT NULL,"size" BIGINT NOT NULL);
CREATE INDEX IF NOT EXISTS "IDX_SYSTRAFFIC_TIME_ORG" ON "SYSTRAFFIC" ("TIMESTAMP", "ORG_ID");
CREATE INDEX IF NOT EXISTS "IX_SYSTRAFFIC_ORG_ID" ON "SYSTRAFFIC" ("ORG_ID");
CREATE TABLE IF NOT EXISTS "MONTHLYSYSTRAFFIC" ("ID" INTEGER PRIMARY KEY AUTO_INCREMENT,"ORG_ID" INTEGER DEFAULT NULL,"TIMESTAMP" TIMESTAMP NOT NULL,"WEB_FILE_UPLOAD" BIGINT NOT NULL,"WEB_FILE_DOWNLOAD" BIGINT NOT NULL,"SYNC_FILE_UPLOAD" BIGINT NOT NULL,"SYNC_FILE_DOWNLOAD" BIGINT NOT NULL,"LINK_FILE_UPLOAD" BIGINT NOT NULL,"LINK_FILE_DOWNLOAD" BIGINT NOT NULL);
CREATE INDEX IF NOT EXISTS "IDX_MONTHLYSYSTRAFFIC_TIME_ORG" ON "MONTHLYSYSTRAFFIC" ("TIMESTAMP", "ORG_ID");
CREATE TABLE IF NOT EXISTS "VIRUSSCANRECORD" ("REPO_ID" VARCHAR(36) NOT NULL PRIMARY KEY,"SCAN_COMMIT_ID" VARCHAR(40) NOT NULL);
CREATE TABLE IF NOT EXISTS "VIRUSFILE" ("VID" INTEGER PRIMARY KEY AUTO_INCREMENT,"REPO_ID" VARCHAR(36) NOT NULL,"COMMIT_ID" VARCHAR(40) NOT NULL,"FILE_PATH" TEXT NOT NULL,"HAS_DELETED" INTEGER NOT NULL,"HAS_IGNORED" INTEGER NOT NULL);
CREATE INDEX IF NOT EXISTS "IX_VIRUSFILE_HAS_IGNORED" ON "VIRUSFILE" ("HAS_IGNORED");
CREATE INDEX IF NOT EXISTS "IX_VIRUSFILE_HAS_DELETED" ON "VIRUSFILE" ("HAS_DELETED");
CREATE TABLE IF NOT EXISTS "GROUPIDLDAPUUIDPAIR" ("ID" INTEGER PRIMARY KEY AUTO_INCREMENT,"GROUP_ID" INTEGER NOT NULL UNIQUE,"GROUP_UUID" VARCHAR(36) NOT NULL UNIQUE);
CREATE TABLE IF NOT EXISTS "MONTHLYUSERTRAFFIC" ("ID" INTEGER PRIMARY KEY AUTO_INCREMENT,"user" VARCHAR(255) NOT NULL,"ORG_ID" INTEGER DEFAULT NULL,"TIMESTAMP" TIMESTAMP NOT NULL,"WEB_FILE_UPLOAD" BIGINT NOT NULL,"WEB_FILE_DOWNLOAD" BIGINT NOT NULL,"SYNC_FILE_UPLOAD" BIGINT NOT NULL,"SYNC_FILE_DOWNLOAD" BIGINT NOT NULL,"LINK_FILE_UPLOAD" BIGINT NOT NULL,"LINK_FILE_DOWNLOAD" BIGINT NOT NULL);
CREATE INDEX IF NOT EXISTS "IDX_MONTHLYUSERTRAFFIC_TIME_ORG_USER" ON "MONTHLYUSERTRAFFIC" ("TIMESTAMP","user","ORG_ID");





INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(1,'contenttypes','contenttype');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(2,'constance','config');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(3,'sessions','session');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(4,'base','clientlogintoken');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(5,'base','commandslastcheck');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(6,'base','devicetoken');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(7,'base','filecomment');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(8,'base','userlastlogin');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(9,'base','userstarredfiles');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(10,'base','reposecretkey');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(11,'base','socialauthuser');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(12,'auth','permission');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(13,'auth','group');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(14,'auth','user');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(15,'registration','registrationprofile');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(16,'captcha','captchastore');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(17,'database','constance');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(18,'post_office','attachment');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(19,'post_office','email');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(20,'post_office','emailtemplate');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(21,'post_office','log');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(22,'termsandconditions','termsandconditions');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(23,'termsandconditions','usertermsandconditions');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(24,'api2','token');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(25,'api2','tokenv2');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(26,'avatar','avatar');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(27,'avatar','groupavatar');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(28,'contacts','contact');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(29,'drafts','draft');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(30,'drafts','draftreviewer');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(31,'institutions','institution');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(32,'institutions','institutionadmin');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(33,'institutions','institutionquota');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(34,'invitations','invitation');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(35,'invitations','reposhareinvitation');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(36,'wiki','wiki');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(37,'notifications','notification');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(38,'notifications','usernotification');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(39,'options','useroptions');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(40,'profile','detailedprofile');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(41,'profile','profile');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(42,'share','anonymousshare');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(43,'share','extragroupssharepermission');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(44,'share','extrasharepermission');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(45,'share','fileshare');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(46,'share','orgfileshare');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(47,'share','privatefiledirshare');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(48,'share','uploadlinkshare');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(49,'admin_log','adminlog');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(50,'tags','filetag');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(51,'tags','fileuuidmap');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(52,'tags','tags');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(53,'revision_tag','revisiontags');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(54,'revision_tag','tags');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(55,'two_factor','phonedevice');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(56,'two_factor','staticdevice');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(57,'two_factor','statictoken');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(58,'two_factor','totpdevice');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(59,'role_permissions','adminrole');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(60,'trusted_ip','trustedip');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(61,'repo_tags','repotags');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(62,'file_tags','filetags');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(63,'related_files','relatedfiles');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(64,'file_participants','fileparticipant');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(65,'REPO_API_TOKENS','repoapitokens');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(66,'abuse_reports','abusereport');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(67,'sysadmin_extra','userloginlog');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(68,'organizations','orgmemberquota');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(69,'organizations','orgsettings');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(70,'django_cas_ng','proxygrantingticket');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(71,'django_cas_ng','sessionticket');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(72,'plan','userplan');
INSERT INTO "DJANGO_CONTENT_TYPE" VALUES(73,'plan','orgplan');
INSERT INTO "AUTH_PERMISSION" VALUES(1,1,'add_contenttype','Can add content type');
INSERT INTO "AUTH_PERMISSION" VALUES(2,1,'change_contenttype','Can change content type');
INSERT INTO "AUTH_PERMISSION" VALUES(3,1,'delete_contenttype','Can delete content type');
INSERT INTO "AUTH_PERMISSION" VALUES(4,2,'change_config','Can change config');
INSERT INTO "AUTH_PERMISSION" VALUES(5,3,'add_session','Can add session');
INSERT INTO "AUTH_PERMISSION" VALUES(6,3,'change_session','Can change session');
INSERT INTO "AUTH_PERMISSION" VALUES(7,3,'delete_session','Can delete session');
INSERT INTO "AUTH_PERMISSION" VALUES(8,4,'add_clientlogintoken','Can add client login token');
INSERT INTO "AUTH_PERMISSION" VALUES(9,4,'change_clientlogintoken','Can change client login token');
INSERT INTO "AUTH_PERMISSION" VALUES(10,4,'delete_clientlogintoken','Can delete client login token');
INSERT INTO "AUTH_PERMISSION" VALUES(11,5,'add_commandslastcheck','Can add commands last check');
INSERT INTO "AUTH_PERMISSION" VALUES(12,5,'change_commandslastcheck','Can change commands last check');
INSERT INTO "AUTH_PERMISSION" VALUES(13,5,'delete_commandslastcheck','Can delete commands last check');
INSERT INTO "AUTH_PERMISSION" VALUES(14,6,'add_devicetoken','Can add device token');
INSERT INTO "AUTH_PERMISSION" VALUES(15,6,'change_devicetoken','Can change device token');
INSERT INTO "AUTH_PERMISSION" VALUES(16,6,'delete_devicetoken','Can delete device token');
INSERT INTO "AUTH_PERMISSION" VALUES(17,7,'add_filecomment','Can add file comment');
INSERT INTO "AUTH_PERMISSION" VALUES(18,7,'change_filecomment','Can change file comment');
INSERT INTO "AUTH_PERMISSION" VALUES(19,7,'delete_filecomment','Can delete file comment');
INSERT INTO "AUTH_PERMISSION" VALUES(20,8,'add_userlastlogin','Can add user last login');
INSERT INTO "AUTH_PERMISSION" VALUES(21,8,'change_userlastlogin','Can change user last login');
INSERT INTO "AUTH_PERMISSION" VALUES(22,8,'delete_userlastlogin','Can delete user last login');
INSERT INTO "AUTH_PERMISSION" VALUES(23,9,'add_userstarredfiles','Can add user starred files');
INSERT INTO "AUTH_PERMISSION" VALUES(24,9,'change_userstarredfiles','Can change user starred files');
INSERT INTO "AUTH_PERMISSION" VALUES(25,9,'delete_userstarredfiles','Can delete user starred files');
INSERT INTO "AUTH_PERMISSION" VALUES(26,10,'add_reposecretkey','Can add repo secret key');
INSERT INTO "AUTH_PERMISSION" VALUES(27,10,'change_reposecretkey','Can change repo secret key');
INSERT INTO "AUTH_PERMISSION" VALUES(28,10,'delete_reposecretkey','Can delete repo secret key');
INSERT INTO "AUTH_PERMISSION" VALUES(29,11,'add_socialauthuser','Can add social auth user');
INSERT INTO "AUTH_PERMISSION" VALUES(30,11,'change_socialauthuser','Can change social auth user');
INSERT INTO "AUTH_PERMISSION" VALUES(31,11,'delete_socialauthuser','Can delete social auth user');
INSERT INTO "AUTH_PERMISSION" VALUES(32,12,'add_permission','Can add permission');
INSERT INTO "AUTH_PERMISSION" VALUES(33,12,'change_permission','Can change permission');
INSERT INTO "AUTH_PERMISSION" VALUES(34,12,'delete_permission','Can delete permission');
INSERT INTO "AUTH_PERMISSION" VALUES(35,13,'add_group','Can add group');
INSERT INTO "AUTH_PERMISSION" VALUES(36,13,'change_group','Can change group');
INSERT INTO "AUTH_PERMISSION" VALUES(37,13,'delete_group','Can delete group');
INSERT INTO "AUTH_PERMISSION" VALUES(38,14,'add_user','Can add user');
INSERT INTO "AUTH_PERMISSION" VALUES(39,14,'change_user','Can change user');
INSERT INTO "AUTH_PERMISSION" VALUES(40,14,'delete_user','Can delete user');
INSERT INTO "AUTH_PERMISSION" VALUES(41,15,'add_registrationprofile','Can add registration profile');
INSERT INTO "AUTH_PERMISSION" VALUES(42,15,'change_registrationprofile','Can change registration profile');
INSERT INTO "AUTH_PERMISSION" VALUES(43,15,'delete_registrationprofile','Can delete registration profile');
INSERT INTO "AUTH_PERMISSION" VALUES(44,16,'add_captchastore','Can add captcha store');
INSERT INTO "AUTH_PERMISSION" VALUES(45,16,'change_captchastore','Can change captcha store');
INSERT INTO "AUTH_PERMISSION" VALUES(46,16,'delete_captchastore','Can delete captcha store');
INSERT INTO "AUTH_PERMISSION" VALUES(47,17,'add_constance','Can add constance');
INSERT INTO "AUTH_PERMISSION" VALUES(48,17,'change_constance','Can change constance');
INSERT INTO "AUTH_PERMISSION" VALUES(49,17,'delete_constance','Can delete constance');
INSERT INTO "AUTH_PERMISSION" VALUES(50,18,'add_attachment','Can add Attachment');
INSERT INTO "AUTH_PERMISSION" VALUES(51,18,'change_attachment','Can change Attachment');
INSERT INTO "AUTH_PERMISSION" VALUES(52,18,'delete_attachment','Can delete Attachment');
INSERT INTO "AUTH_PERMISSION" VALUES(53,19,'add_email','Can add Email');
INSERT INTO "AUTH_PERMISSION" VALUES(54,19,'change_email','Can change Email');
INSERT INTO "AUTH_PERMISSION" VALUES(55,19,'delete_email','Can delete Email');
INSERT INTO "AUTH_PERMISSION" VALUES(56,20,'add_emailtemplate','Can add Email Template');
INSERT INTO "AUTH_PERMISSION" VALUES(57,20,'change_emailtemplate','Can change Email Template');
INSERT INTO "AUTH_PERMISSION" VALUES(58,20,'delete_emailtemplate','Can delete Email Template');
INSERT INTO "AUTH_PERMISSION" VALUES(59,21,'add_log','Can add Log');
INSERT INTO "AUTH_PERMISSION" VALUES(60,21,'change_log','Can change Log');
INSERT INTO "AUTH_PERMISSION" VALUES(61,21,'delete_log','Can delete Log');
INSERT INTO "AUTH_PERMISSION" VALUES(62,22,'add_termsandconditions','Can add Terms and Conditions');
INSERT INTO "AUTH_PERMISSION" VALUES(63,22,'change_termsandconditions','Can change Terms and Conditions');
INSERT INTO "AUTH_PERMISSION" VALUES(64,22,'delete_termsandconditions','Can delete Terms and Conditions');
INSERT INTO "AUTH_PERMISSION" VALUES(65,23,'add_usertermsandconditions','Can add User Terms and Conditions');
INSERT INTO "AUTH_PERMISSION" VALUES(66,23,'change_usertermsandconditions','Can change User Terms and Conditions');
INSERT INTO "AUTH_PERMISSION" VALUES(67,23,'delete_usertermsandconditions','Can delete User Terms and Conditions');
INSERT INTO "AUTH_PERMISSION" VALUES(68,24,'add_token','Can add token');
INSERT INTO "AUTH_PERMISSION" VALUES(69,24,'change_token','Can change token');
INSERT INTO "AUTH_PERMISSION" VALUES(70,24,'delete_token','Can delete token');
INSERT INTO "AUTH_PERMISSION" VALUES(71,25,'add_tokenv2','Can add token v2');
INSERT INTO "AUTH_PERMISSION" VALUES(72,25,'change_tokenv2','Can change token v2');
INSERT INTO "AUTH_PERMISSION" VALUES(73,25,'delete_tokenv2','Can delete token v2');
INSERT INTO "AUTH_PERMISSION" VALUES(74,26,'add_avatar','Can add avatar');
INSERT INTO "AUTH_PERMISSION" VALUES(75,26,'change_avatar','Can change avatar');
INSERT INTO "AUTH_PERMISSION" VALUES(76,26,'delete_avatar','Can delete avatar');
INSERT INTO "AUTH_PERMISSION" VALUES(77,27,'add_groupavatar','Can add group avatar');
INSERT INTO "AUTH_PERMISSION" VALUES(78,27,'change_groupavatar','Can change group avatar');
INSERT INTO "AUTH_PERMISSION" VALUES(79,27,'delete_groupavatar','Can delete group avatar');
INSERT INTO "AUTH_PERMISSION" VALUES(80,28,'add_contact','Can add contact');
INSERT INTO "AUTH_PERMISSION" VALUES(81,28,'change_contact','Can change contact');
INSERT INTO "AUTH_PERMISSION" VALUES(82,28,'delete_contact','Can delete contact');
INSERT INTO "AUTH_PERMISSION" VALUES(83,29,'add_draft','Can add draft');
INSERT INTO "AUTH_PERMISSION" VALUES(84,29,'change_draft','Can change draft');
INSERT INTO "AUTH_PERMISSION" VALUES(85,29,'delete_draft','Can delete draft');
INSERT INTO "AUTH_PERMISSION" VALUES(86,30,'add_draftreviewer','Can add draft reviewer');
INSERT INTO "AUTH_PERMISSION" VALUES(87,30,'change_draftreviewer','Can change draft reviewer');
INSERT INTO "AUTH_PERMISSION" VALUES(88,30,'delete_draftreviewer','Can delete draft reviewer');
INSERT INTO "AUTH_PERMISSION" VALUES(89,31,'add_institution','Can add institution');
INSERT INTO "AUTH_PERMISSION" VALUES(90,31,'change_institution','Can change institution');
INSERT INTO "AUTH_PERMISSION" VALUES(91,31,'delete_institution','Can delete institution');
INSERT INTO "AUTH_PERMISSION" VALUES(92,32,'add_institutionadmin','Can add institution admin');
INSERT INTO "AUTH_PERMISSION" VALUES(93,32,'change_institutionadmin','Can change institution admin');
INSERT INTO "AUTH_PERMISSION" VALUES(94,32,'delete_institutionadmin','Can delete institution admin');
INSERT INTO "AUTH_PERMISSION" VALUES(95,33,'add_institutionquota','Can add institution quota');
INSERT INTO "AUTH_PERMISSION" VALUES(96,33,'change_institutionquota','Can change institution quota');
INSERT INTO "AUTH_PERMISSION" VALUES(97,33,'delete_institutionquota','Can delete institution quota');
INSERT INTO "AUTH_PERMISSION" VALUES(98,34,'add_invitation','Can add invitation');
INSERT INTO "AUTH_PERMISSION" VALUES(99,34,'change_invitation','Can change invitation');
INSERT INTO "AUTH_PERMISSION" VALUES(100,34,'delete_invitation','Can delete invitation');
INSERT INTO "AUTH_PERMISSION" VALUES(101,35,'add_reposhareinvitation','Can add repo share invitation');
INSERT INTO "AUTH_PERMISSION" VALUES(102,35,'change_reposhareinvitation','Can change repo share invitation');
INSERT INTO "AUTH_PERMISSION" VALUES(103,35,'delete_reposhareinvitation','Can delete repo share invitation');
INSERT INTO "AUTH_PERMISSION" VALUES(104,36,'add_wiki','Can add wiki');
INSERT INTO "AUTH_PERMISSION" VALUES(105,36,'change_wiki','Can change wiki');
INSERT INTO "AUTH_PERMISSION" VALUES(106,36,'delete_wiki','Can delete wiki');
INSERT INTO "AUTH_PERMISSION" VALUES(107,37,'add_notification','Can add notification');
INSERT INTO "AUTH_PERMISSION" VALUES(108,37,'change_notification','Can change notification');
INSERT INTO "AUTH_PERMISSION" VALUES(109,37,'delete_notification','Can delete notification');
INSERT INTO "AUTH_PERMISSION" VALUES(110,38,'add_usernotification','Can add user notification');
INSERT INTO "AUTH_PERMISSION" VALUES(111,38,'change_usernotification','Can change user notification');
INSERT INTO "AUTH_PERMISSION" VALUES(112,38,'delete_usernotification','Can delete user notification');
INSERT INTO "AUTH_PERMISSION" VALUES(113,39,'add_useroptions','Can add user options');
INSERT INTO "AUTH_PERMISSION" VALUES(114,39,'change_useroptions','Can change user options');
INSERT INTO "AUTH_PERMISSION" VALUES(115,39,'delete_useroptions','Can delete user options');
INSERT INTO "AUTH_PERMISSION" VALUES(116,40,'add_detailedprofile','Can add detailed profile');
INSERT INTO "AUTH_PERMISSION" VALUES(117,40,'change_detailedprofile','Can change detailed profile');
INSERT INTO "AUTH_PERMISSION" VALUES(118,40,'delete_detailedprofile','Can delete detailed profile');
INSERT INTO "AUTH_PERMISSION" VALUES(119,41,'add_profile','Can add profile');
INSERT INTO "AUTH_PERMISSION" VALUES(120,41,'change_profile','Can change profile');
INSERT INTO "AUTH_PERMISSION" VALUES(121,41,'delete_profile','Can delete profile');
INSERT INTO "AUTH_PERMISSION" VALUES(122,42,'add_anonymousshare','Can add anonymous share');
INSERT INTO "AUTH_PERMISSION" VALUES(123,42,'change_anonymousshare','Can change anonymous share');
INSERT INTO "AUTH_PERMISSION" VALUES(124,42,'delete_anonymousshare','Can delete anonymous share');
INSERT INTO "AUTH_PERMISSION" VALUES(125,43,'add_extragroupssharepermission','Can add extra groups share permission');
INSERT INTO "AUTH_PERMISSION" VALUES(126,43,'change_extragroupssharepermission','Can change extra groups share permission');
INSERT INTO "AUTH_PERMISSION" VALUES(127,43,'delete_extragroupssharepermission','Can delete extra groups share permission');
INSERT INTO "AUTH_PERMISSION" VALUES(128,44,'add_extrasharepermission','Can add extra share permission');
INSERT INTO "AUTH_PERMISSION" VALUES(129,44,'change_extrasharepermission','Can change extra share permission');
INSERT INTO "AUTH_PERMISSION" VALUES(130,44,'delete_extrasharepermission','Can delete extra share permission');
INSERT INTO "AUTH_PERMISSION" VALUES(131,45,'add_fileshare','Can add file share');
INSERT INTO "AUTH_PERMISSION" VALUES(132,45,'change_fileshare','Can change file share');
INSERT INTO "AUTH_PERMISSION" VALUES(133,45,'delete_fileshare','Can delete file share');
INSERT INTO "AUTH_PERMISSION" VALUES(134,46,'add_orgfileshare','Can add org file share');
INSERT INTO "AUTH_PERMISSION" VALUES(135,46,'change_orgfileshare','Can change org file share');
INSERT INTO "AUTH_PERMISSION" VALUES(136,46,'delete_orgfileshare','Can delete org file share');
INSERT INTO "AUTH_PERMISSION" VALUES(137,47,'add_privatefiledirshare','Can add private file dir share');
INSERT INTO "AUTH_PERMISSION" VALUES(138,47,'change_privatefiledirshare','Can change private file dir share');
INSERT INTO "AUTH_PERMISSION" VALUES(139,47,'delete_privatefiledirshare','Can delete private file dir share');
INSERT INTO "AUTH_PERMISSION" VALUES(140,48,'add_uploadlinkshare','Can add upload link share');
INSERT INTO "AUTH_PERMISSION" VALUES(141,48,'change_uploadlinkshare','Can change upload link share');
INSERT INTO "AUTH_PERMISSION" VALUES(142,48,'delete_uploadlinkshare','Can delete upload link share');
INSERT INTO "AUTH_PERMISSION" VALUES(143,49,'add_adminlog','Can add admin log');
INSERT INTO "AUTH_PERMISSION" VALUES(144,49,'change_adminlog','Can change admin log');
INSERT INTO "AUTH_PERMISSION" VALUES(145,49,'delete_adminlog','Can delete admin log');
INSERT INTO "AUTH_PERMISSION" VALUES(146,50,'add_filetag','Can add file tag');
INSERT INTO "AUTH_PERMISSION" VALUES(147,50,'change_filetag','Can change file tag');
INSERT INTO "AUTH_PERMISSION" VALUES(148,50,'delete_filetag','Can delete file tag');
INSERT INTO "AUTH_PERMISSION" VALUES(149,51,'add_fileuuidmap','Can add file uuid map');
INSERT INTO "AUTH_PERMISSION" VALUES(150,51,'change_fileuuidmap','Can change file uuid map');
INSERT INTO "AUTH_PERMISSION" VALUES(151,51,'delete_fileuuidmap','Can delete file uuid map');
INSERT INTO "AUTH_PERMISSION" VALUES(152,52,'add_tags','Can add tags');
INSERT INTO "AUTH_PERMISSION" VALUES(153,52,'change_tags','Can change tags');
INSERT INTO "AUTH_PERMISSION" VALUES(154,52,'delete_tags','Can delete tags');
INSERT INTO "AUTH_PERMISSION" VALUES(155,53,'add_revisiontags','Can add revision tags');
INSERT INTO "AUTH_PERMISSION" VALUES(156,53,'change_revisiontags','Can change revision tags');
INSERT INTO "AUTH_PERMISSION" VALUES(157,53,'delete_revisiontags','Can delete revision tags');
INSERT INTO "AUTH_PERMISSION" VALUES(158,54,'add_tags','Can add tags');
INSERT INTO "AUTH_PERMISSION" VALUES(159,54,'change_tags','Can change tags');
INSERT INTO "AUTH_PERMISSION" VALUES(160,54,'delete_tags','Can delete tags');
INSERT INTO "AUTH_PERMISSION" VALUES(161,55,'add_phonedevice','Can add phone device');
INSERT INTO "AUTH_PERMISSION" VALUES(162,55,'change_phonedevice','Can change phone device');
INSERT INTO "AUTH_PERMISSION" VALUES(163,55,'delete_phonedevice','Can delete phone device');
INSERT INTO "AUTH_PERMISSION" VALUES(164,56,'add_staticdevice','Can add static device');
INSERT INTO "AUTH_PERMISSION" VALUES(165,56,'change_staticdevice','Can change static device');
INSERT INTO "AUTH_PERMISSION" VALUES(166,56,'delete_staticdevice','Can delete static device');
INSERT INTO "AUTH_PERMISSION" VALUES(167,57,'add_statictoken','Can add static token');
INSERT INTO "AUTH_PERMISSION" VALUES(168,57,'change_statictoken','Can change static token');
INSERT INTO "AUTH_PERMISSION" VALUES(169,57,'delete_statictoken','Can delete static token');
INSERT INTO "AUTH_PERMISSION" VALUES(170,58,'add_totpdevice','Can add TOTP device');
INSERT INTO "AUTH_PERMISSION" VALUES(171,58,'change_totpdevice','Can change TOTP device');
INSERT INTO "AUTH_PERMISSION" VALUES(172,58,'delete_totpdevice','Can delete TOTP device');
INSERT INTO "AUTH_PERMISSION" VALUES(173,59,'add_adminrole','Can add admin role');
INSERT INTO "AUTH_PERMISSION" VALUES(174,59,'change_adminrole','Can change admin role');
INSERT INTO "AUTH_PERMISSION" VALUES(175,59,'delete_adminrole','Can delete admin role');
INSERT INTO "AUTH_PERMISSION" VALUES(176,60,'add_trustedip','Can add trusted ip');
INSERT INTO "AUTH_PERMISSION" VALUES(177,60,'change_trustedip','Can change trusted ip');
INSERT INTO "AUTH_PERMISSION" VALUES(178,60,'delete_trustedip','Can delete trusted ip');
INSERT INTO "AUTH_PERMISSION" VALUES(179,61,'add_repotags','Can add repo tags');
INSERT INTO "AUTH_PERMISSION" VALUES(180,61,'change_repotags','Can change repo tags');
INSERT INTO "AUTH_PERMISSION" VALUES(181,61,'delete_repotags','Can delete repo tags');
INSERT INTO "AUTH_PERMISSION" VALUES(182,62,'add_filetags','Can add file tags');
INSERT INTO "AUTH_PERMISSION" VALUES(183,62,'change_filetags','Can change file tags');
INSERT INTO "AUTH_PERMISSION" VALUES(184,62,'delete_filetags','Can delete file tags');
INSERT INTO "AUTH_PERMISSION" VALUES(185,63,'add_relatedfiles','Can add related files');
INSERT INTO "AUTH_PERMISSION" VALUES(186,63,'change_relatedfiles','Can change related files');
INSERT INTO "AUTH_PERMISSION" VALUES(187,63,'delete_relatedfiles','Can delete related files');
INSERT INTO "AUTH_PERMISSION" VALUES(188,64,'add_fileparticipant','Can add file participant');
INSERT INTO "AUTH_PERMISSION" VALUES(189,64,'change_fileparticipant','Can change file participant');
INSERT INTO "AUTH_PERMISSION" VALUES(190,64,'delete_fileparticipant','Can delete file participant');
INSERT INTO "AUTH_PERMISSION" VALUES(191,65,'add_repoapitokens','Can add repo api tokens');
INSERT INTO "AUTH_PERMISSION" VALUES(192,65,'change_repoapitokens','Can change repo api tokens');
INSERT INTO "AUTH_PERMISSION" VALUES(193,65,'delete_repoapitokens','Can delete repo api tokens');
INSERT INTO "AUTH_PERMISSION" VALUES(194,66,'add_abusereport','Can add abuse report');
INSERT INTO "AUTH_PERMISSION" VALUES(195,66,'change_abusereport','Can change abuse report');
INSERT INTO "AUTH_PERMISSION" VALUES(196,66,'delete_abusereport','Can delete abuse report');
INSERT INTO "AUTH_PERMISSION" VALUES(197,67,'add_userloginlog','Can add user login log');
INSERT INTO "AUTH_PERMISSION" VALUES(198,67,'change_userloginlog','Can change user login log');
INSERT INTO "AUTH_PERMISSION" VALUES(199,67,'delete_userloginlog','Can delete user login log');
INSERT INTO "AUTH_PERMISSION" VALUES(200,68,'add_orgmemberquota','Can add org member quota');
INSERT INTO "AUTH_PERMISSION" VALUES(201,68,'change_orgmemberquota','Can change org member quota');
INSERT INTO "AUTH_PERMISSION" VALUES(202,68,'delete_orgmemberquota','Can delete org member quota');
INSERT INTO "AUTH_PERMISSION" VALUES(203,69,'add_orgsettings','Can add org settings');
INSERT INTO "AUTH_PERMISSION" VALUES(204,69,'change_orgsettings','Can change org settings');
INSERT INTO "AUTH_PERMISSION" VALUES(205,69,'delete_orgsettings','Can delete org settings');
INSERT INTO "AUTH_PERMISSION" VALUES(206,70,'add_proxygrantingticket','Can add proxy granting ticket');
INSERT INTO "AUTH_PERMISSION" VALUES(207,70,'change_proxygrantingticket','Can change proxy granting ticket');
INSERT INTO "AUTH_PERMISSION" VALUES(208,70,'delete_proxygrantingticket','Can delete proxy granting ticket');
INSERT INTO "AUTH_PERMISSION" VALUES(209,71,'add_sessionticket','Can add session ticket');
INSERT INTO "AUTH_PERMISSION" VALUES(210,71,'change_sessionticket','Can change session ticket');
INSERT INTO "AUTH_PERMISSION" VALUES(211,71,'delete_sessionticket','Can delete session ticket');
INSERT INTO "AUTH_PERMISSION" VALUES(212,72,'add_userplan','Can add user plan');
INSERT INTO "AUTH_PERMISSION" VALUES(213,72,'change_userplan','Can change user plan');
INSERT INTO "AUTH_PERMISSION" VALUES(214,72,'delete_userplan','Can delete user plan');
INSERT INTO "AUTH_PERMISSION" VALUES(215,73,'add_orgplan','Can add org plan');
INSERT INTO "AUTH_PERMISSION" VALUES(216,73,'change_orgplan','Can change org plan');
INSERT INTO "AUTH_PERMISSION" VALUES(217,73,'delete_orgplan','Can delete org plan');
