{"version":3,"sources":["../js/draft.js","components/modal-portal.js","components/loading.js","../node_modules/lodash/lodash.js","../config/polyfills.js","utils/pinyin-by-unicode.js","draft.js","components/review-list-view/review-comments.js","../node_modules/unified/index.js","../node_modules/vfile/index.js","../node_modules/vfile/core.js","../node_modules/vfile/node_modules/is-buffer/index.js","models/review-comment.js","components/review-list-view/review-comment-dialog.js","components/dialog/add-reviewer-dialog.js","pages/review/history-list.js","utils/constants.js","components/user-select.js","../node_modules/@seafile/seafile-editor/dist/editor/code-hight-package.js","../node_modules/prismjs/components/prism-c.min.js","../node_modules/prismjs/components/prism-cpp.min.js","../node_modules/prismjs/components/prism-csharp.min.js","../node_modules/prismjs/components/prism-java.min.js","../node_modules/prismjs/components/prism-python.min.js","../node_modules/prismjs/components/prism-sql.min.js","../node_modules/prismjs/components/prism-swift.min.js","../node_modules/prismjs/plugins/toolbar/prism-toolbar.min.js","../node_modules/prismjs/plugins/show-language/prism-show-language.min.js","utils/seafile-api.js","../node_modules/prismjs/plugins/line-numbers/prism-line-numbers.min.js","../node_modules/@seafile/seafile-editor/dist/viewer/diff-viewer.js","../node_modules/@seafile/seafile-editor/dist/utils/diff/diff.js","../node_modules/@seafile/seafile-editor/dist/utils/diff/compare-strings.js","utils/utils.js","utils/seafile-markdown2html.js"],"names":["webpackJsonp","10","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","_react","_react2","_reactDom","_reactDom2","_propTypes","_propTypes2","propTypes","children","PropTypes","object","isRequired","modalRoot","document","getElementById","ModalPortal","_React$Component","this","_this","getPrototypeOf","el","createElement","appendChild","removeChild","ReactDOM","createPortal","React","Component","104","105","106","107","11","Loading","className","111","global","__WEBPACK_AMD_DEFINE_RESULT__","apply","func","thisArg","args","arrayAggregator","array","setter","iteratee","accumulator","index","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","result","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","Array","arrayPush","values","offset","arrayReduce","initAccum","arrayReduceRight","arraySome","asciiToArray","string","split","asciiWords","match","reAsciiWord","baseFindKey","collection","eachFunc","baseFindIndex","fromIndex","fromRight","strictIndexOf","baseIsNaN","baseIndexOfWith","baseMean","baseSum","NAN","baseProperty","undefined","basePropertyOf","baseReduce","baseSortBy","comparer","sort","current","baseTimes","n","baseToPairs","baseUnary","baseValues","cacheHas","cache","has","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","countHolders","placeholder","escapeStringChar","chr","stringEscapes","getValue","hasUnicode","reHasUnicode","test","hasUnicodeWord","reHasUnicodeWord","iteratorToArray","iterator","data","next","done","push","mapToArray","map","size","forEach","overArg","transform","arg","replaceHolders","PLACEHOLDER","setToArray","set","setToPairs","strictLastIndexOf","stringSize","unicodeSize","asciiSize","stringToArray","unicodeToArray","reUnicode","lastIndex","unicodeWords","reUnicodeWord","LARGE_ARRAY_SIZE","CORE_ERROR_TEXT","FUNC_ERROR_TEXT","HASH_UNDEFINED","MAX_MEMOIZE_SIZE","CLONE_DEEP_FLAG","CLONE_FLAT_FLAG","CLONE_SYMBOLS_FLAG","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","WRAP_BIND_FLAG","WRAP_BIND_KEY_FLAG","WRAP_CURRY_BOUND_FLAG","WRAP_CURRY_FLAG","WRAP_CURRY_RIGHT_FLAG","WRAP_PARTIAL_FLAG","WRAP_PARTIAL_RIGHT_FLAG","WRAP_ARY_FLAG","WRAP_REARG_FLAG","WRAP_FLIP_FLAG","DEFAULT_TRUNC_LENGTH","DEFAULT_TRUNC_OMISSION","HOT_COUNT","HOT_SPAN","LAZY_FILTER_FLAG","LAZY_MAP_FLAG","INFINITY","MAX_SAFE_INTEGER","MAX_INTEGER","MAX_ARRAY_LENGTH","MAX_ARRAY_INDEX","HALF_MAX_ARRAY_LENGTH","wrapFlags","argsTag","arrayTag","asyncTag","boolTag","dateTag","domExcTag","errorTag","funcTag","genTag","mapTag","numberTag","nullTag","objectTag","proxyTag","regexpTag","setTag","stringTag","symbolTag","undefinedTag","weakMapTag","weakSetTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","RegExp","source","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","rePropName","reRegExpChar","reHasRegExpChar","reTrim","reTrimStart","reTrimEnd","reWrapComment","reWrapDetails","reSplitDetails","reEscapeChar","reEsTemplate","reFlags","reIsBadHex","reIsBinary","reIsHostCtor","reIsOctal","reIsUint","reLatin","reNoMatch","reUnescapedString","rsComboRange","rsComboMarksRange","rsBreakRange","rsMathOpRange","rsBreak","rsCombo","rsLower","rsMisc","rsFitz","rsRegional","rsSurrPair","rsUpper","rsMiscLower","reOptMod","rsModifier","rsOptJoin","join","rsSeq","rsEmoji","rsSymbol","reApos","reComboMark","rsMiscUpper","contextProps","templateCounter","typedArrayTags","cloneableTags","deburredLetters","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","Ā","Ă","Ą","ā","ă","ą","Ć","Ĉ","Ċ","Č","ć","ĉ","ċ","č","Ď","Đ","ď","đ","Ē","Ĕ","Ė","Ę","Ě","ē","ĕ","ė","ę","ě","Ĝ","Ğ","Ġ","Ģ","ĝ","ğ","ġ","ģ","Ĥ","Ħ","ĥ","ħ","Ĩ","Ī","Ĭ","Į","İ","ĩ","ī","ĭ","į","ı","Ĵ","ĵ","Ķ","ķ","ĸ","Ĺ","Ļ","Ľ","Ŀ","Ł","ĺ","ļ","ľ","ŀ","ł","Ń","Ņ","Ň","Ŋ","ń","ņ","ň","ŋ","Ō","Ŏ","Ő","ō","ŏ","ő","Ŕ","Ŗ","Ř","ŕ","ŗ","ř","Ś","Ŝ","Ş","Š","ś","ŝ","ş","š","Ţ","Ť","Ŧ","ţ","ť","ŧ","Ũ","Ū","Ŭ","Ů","Ű","Ų","ũ","ū","ŭ","ů","ű","ų","Ŵ","ŵ","Ŷ","ŷ","Ÿ","Ź","Ż","Ž","ź","ż","ž","Ĳ","ĳ","Œ","œ","ŉ","ſ","htmlEscapes","&","<",">","\"","'","htmlUnescapes","&amp;","&lt;","&gt;","&quot;","&#39;","\\","\n","\r"," "," ","freeParseFloat","parseFloat","freeParseInt","parseInt","freeGlobal","freeSelf","root","Function","freeExports","nodeType","freeModule","moduleExports","freeProcess","process","nodeUtil","types","require","binding","e","nodeIsArrayBuffer","isArrayBuffer","nodeIsDate","isDate","nodeIsMap","isMap","nodeIsRegExp","isRegExp","nodeIsSet","isSet","nodeIsTypedArray","isTypedArray","deburrLetter","escapeHtmlChar","unescapeHtmlChar","_","runInContext","context","lodash","isObjectLike","isArray","LazyWrapper","LodashWrapper","hasOwnProperty","wrapperClone","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","lazyClone","copyArray","lazyReverse","clone","lazyValue","dir","isArr","isRight","arrLength","view","getView","start","end","iteratees","iterLength","takeCount","nativeMin","baseWrapperValue","outer","iterIndex","type","computed","Hash","entries","clear","entry","hashClear","__data__","nativeCreate","hashDelete","hashGet","hashHas","hashSet","ListCache","listCacheClear","listCacheDelete","assocIndexOf","pop","splice","listCacheGet","listCacheHas","listCacheSet","MapCache","mapCacheClear","hash","Map","mapCacheDelete","getMapData","mapCacheGet","get","mapCacheHas","mapCacheSet","SetCache","add","setCacheAdd","setCacheHas","Stack","stackClear","stackDelete","stackGet","stackHas","stackSet","pairs","arrayLikeKeys","inherited","isArg","isArguments","isBuff","isBuffer","isType","skipIndexes","String","isIndex","arraySample","baseRandom","arraySampleSize","shuffleSelf","baseClamp","arrayShuffle","assignMergeValue","eq","baseAssignValue","assignValue","objValue","baseAggregator","baseEach","baseAssign","copyObject","keys","baseAssignIn","keysIn","baseAt","paths","skip","number","lower","upper","baseClone","bitmask","customizer","stack","isDeep","isFlat","isFull","isObject","initCloneArray","tag","getTag","isFunc","cloneBuffer","initCloneObject","copySymbolsIn","copySymbols","initCloneByTag","stacked","subValue","keysFunc","getAllKeysIn","getAllKeys","baseConforms","baseConformsTo","baseDelay","wait","setTimeout","baseDifference","includes","isCommon","valuesLength","valuesIndex","baseEvery","baseExtremum","isSymbol","baseFill","toInteger","toLength","baseFilter","baseFlatten","depth","isStrict","isFlattenable","baseForOwn","baseFor","baseForOwnRight","baseForRight","baseFunctions","isFunction","baseGet","path","castPath","toKey","baseGetAllKeys","symbolsFunc","baseGetTag","symToStringTag","getRawTag","objectToString","baseGt","other","baseHas","baseHasIn","baseInRange","nativeMax","baseIntersection","arrays","othLength","othIndex","caches","maxLength","Infinity","seen","baseInverter","baseInvoke","parent","last","baseIsArguments","baseIsArrayBuffer","baseIsDate","baseIsEqual","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","baseIsMap","baseIsMatch","matchData","noCustomizer","srcValue","baseIsNative","isMasked","reIsNative","toSource","baseIsRegExp","baseIsSet","baseIsTypedArray","isLength","baseIteratee","identity","baseMatchesProperty","baseMatches","property","baseKeys","isPrototype","nativeKeys","baseKeysIn","nativeKeysIn","isProto","baseLt","baseMap","isArrayLike","getMatchData","matchesStrictComparable","isKey","isStrictComparable","hasIn","baseMerge","srcIndex","baseMergeDeep","newValue","safeGet","mergeFunc","isTyped","isArrayLikeObject","cloneTypedArray","isPlainObject","toPlainObject","baseNth","baseOrderBy","orders","getIteratee","criteria","compareMultiple","basePick","basePickBy","baseSet","basePropertyDeep","basePullAll","indexOf","basePullAt","indexes","previous","baseUnset","nativeFloor","nativeRandom","baseRange","step","nativeCeil","baseRepeat","baseRest","setToString","overRest","baseSample","baseSampleSize","nested","baseShuffle","baseSlice","baseSome","baseSortedIndex","retHighest","low","high","mid","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","baseSortedUniq","baseToNumber","baseToString","symbolToString","baseUniq","createSet","seenIndex","baseUpdate","updater","baseWhile","isDrop","actions","action","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","toString","castSlice","buffer","slice","allocUnsafe","copy","cloneArrayBuffer","arrayBuffer","byteLength","Uint8Array","cloneDataView","dataView","byteOffset","cloneRegExp","regexp","exec","cloneSymbol","symbol","symbolValueOf","typedArray","compareAscending","valIsDefined","valIsReflexive","objCriteria","othCriteria","ordersLength","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","isNew","getSymbols","getSymbolsIn","createAggregator","initializer","createAssigner","assigner","sources","guard","isIterateeCall","createBaseEach","iterable","createBaseFor","createBind","wrapper","Ctor","isBind","arguments","createCtor","createCaseFirst","methodName","charAt","trailing","createCompounder","callback","words","deburr","replace","thisBinding","baseCreate","createCurry","arity","getHolder","createRecurry","createHybrid","createFind","findIndexFunc","createFlow","flatRest","funcs","prereq","thru","reverse","getFuncName","funcName","getData","isLaziable","plant","partialsRight","holdersRight","argPos","ary","holdersCount","newHolders","fn","isBindKey","reorder","isFlip","isAry","createInverter","toIteratee","createMathOperation","operator","defaultValue","createOver","arrayFunc","createPadding","chars","charsLength","createPartial","createRange","toFinite","createRelationalOperation","toNumber","wrapFunc","isCurry","newHoldersRight","newPartials","newPartialsRight","newData","setData","setWrapToString","createRound","Math","precision","pair","createToPairs","createWrap","mergeData","baseSetData","customDefaultsAssignIn","objectProto","customDefaultsMerge","customOmitClone","isPartial","arrValue","othValue","compared","name","message","convert","objProps","objLength","skipCtor","objCtor","othCtor","flatten","realNames","otherFunc","isKeyable","getNative","isOwn","unmasked","nativeObjectToString","transforms","getWrapDetails","hasPath","hasFunc","input","getPrototype","insertWrapDetails","details","spreadableSymbol","maskSrcKey","srcBitmask","newBitmask","isCombo","otherArgs","oldArray","reference","updateWrapDetails","shortOut","count","lastCalled","stamp","nativeNow","remaining","rand","funcToString","chunk","compact","concat","drop","dropRight","dropRightWhile","dropWhile","fill","findIndex","findLastIndex","flattenDeep","flattenDepth","fromPairs","head","initial","separator","nativeJoin","lastIndexOf","nth","pullAll","pullAllBy","pullAllWith","remove","nativeReverse","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","sortedUniq","sortedUniqBy","tail","take","takeRight","takeRightWhile","takeWhile","uniq","uniqBy","uniqWith","unzip","group","unzipWith","zipObject","zipObjectDeep","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperNext","toArray","wrapperToIterator","wrapperPlant","wrapperReverse","wrapped","wrapperValue","every","filter","flatMap","flatMapDeep","flatMapDepth","forEachRight","baseEachRight","isString","orderBy","reduce","reduceRight","reject","negate","sample","sampleSize","shuffle","some","after","before","curry","curryRight","debounce","options","invokeFunc","time","lastArgs","lastThis","lastInvokeTime","leadingEdge","timerId","timerExpired","leading","remainingWait","timeSinceLastCall","lastCallTime","timeSinceLastInvoke","timeWaiting","maxing","maxWait","shouldInvoke","now","trailingEdge","cancel","clearTimeout","flush","debounced","isInvoking","flip","memoize","resolver","memoized","Cache","once","rest","spread","throttle","unary","wrap","partial","castArray","cloneWith","cloneDeep","cloneDeepWith","conformsTo","isBoolean","isElement","isEmpty","isEqual","isEqualWith","isError","isFinite","nativeIsFinite","isInteger","isMatch","isMatchWith","isNaN","isNumber","isNative","isMaskable","Error","isNull","isNil","proto","objectCtorString","isSafeInteger","isUndefined","isWeakMap","isWeakSet","symIterator","remainder","valueOf","isBinary","toSafeInteger","properties","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","functions","functionsIn","mapKeys","mapValues","omitBy","pickBy","prop","setWith","isArrLike","unset","update","updateWith","valuesIn","clamp","inRange","random","floating","temp","capitalize","upperFirst","toLowerCase","endsWith","position","escape","escapeRegExp","pad","strLength","padEnd","padStart","radix","nativeParseInt","repeat","limit","startsWith","template","settings","templateSettings","assignInWith","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reDelimiters","evaluate","sourceURL","escapeValue","interpolateValue","esTemplateValue","evaluateValue","variable","attempt","toLower","toUpper","toUpperCase","trim","trimEnd","trimStart","truncate","omission","search","substring","newEnd","unescape","pattern","cond","conforms","constant","defaultTo","matches","matchesProperty","mixin","methodNames","noConflict","oldDash","noop","nthArg","propertyOf","stubArray","stubFalse","stubObject","stubString","stubTrue","times","toPath","uniqueId","prefix","id","idCounter","max","maxBy","mean","meanBy","min","minBy","sum","sumBy","defaults","pick","Date","arrayProto","funcProto","coreJsData","uid","IE_PROTO","Buffer","Symbol","objectCreate","propertyIsEnumerable","isConcatSpreadable","toStringTag","ctxClearTimeout","ctxNow","ctxSetTimeout","ceil","floor","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","DataView","Promise","Set","WeakMap","metaMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","baseSetToString","castRest","ArrayBuffer","resolve","ctorString","charCodeAt","quote","subString","difference","differenceBy","differenceWith","intersection","mapped","intersectionBy","intersectionWith","pull","pullAt","union","unionBy","unionWith","without","xor","xorBy","xorWith","zip","zipWith","wrapperAt","countBy","find","findLast","groupBy","invokeMap","keyBy","partition","sortBy","bind","bindKey","defer","delay","overArgs","funcsLength","partialRight","rearg","gt","gte","lt","lte","assign","assignIn","assignWith","at","propsIndex","propsLength","defaultsDeep","mergeWith","invert","invertBy","invoke","merge","omit","toPairs","toPairsIn","camelCase","word","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","bindAll","flow","flowRight","method","methodOf","over","overEvery","overSome","range","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplier","multiplicand","round","subtract","minuend","subtrahend","entriesIn","extend","extendWith","each","eachRight","first","VERSION","isFilter","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","commit","toJSON","12","enable","window","128","13","strChineseFirstPY","1306","1307","_reactstrap","_prismjs","_constants","_seafileApi","_axios","_axios2","_diffViewer","_diffViewer2","_serialize","_loading","_loading2","_reviewComments","_reviewComments2","_reviewCommentDialog","_reviewCommentDialog2","_addReviewerDialog","_addReviewerDialog2","_slateReact","_classnames","_classnames2","_historyList","_historyList2","_slate","_modalPortal","_modalPortal2","_utils","URL","Draft","initialContent","draftStatus","draftFileExists","setState","isLoading","isShowDiff","originFileExists","seafileAPI","getFileDownloadLink","draftRepoID","draftFilePath","then","res","getFileContent","draftContent","draftOriginContent","location","currentCommitID","preCommitID","preItemFilePath","currentItemFilePath","activeTab","listFileHistoryRecords","historyList","totalReversionCount","total_count","commit_id","activeItem","axios","all","getFileRevision","res1","res2","content1","content2","setDiffViewerContent","draftOriginFilePath","that","getChangedNodes","dl0","siteRoot","draftPublishVersion","dl","originFileVersion","onHistoryItemClick","currentItem","preItem","url","setURL","onHistoryListChange","getCommentsNumber","listComments","comments","unresolvedComments","resolved","commentsNumber","addComment","stopPropagation","getQuote","isShowCommentDialog","onCommentAdded","toggleCommentDialog","state","getOriginRepoInfo","getRepoInfo","originRepoName","repo_name","nodes","refs","diffViewer","lastDiffState","node","changedNodes","scrollToChangedNode","scroll","changeIndex","win","element","querySelector","tagName","parentNode","scroller","findScrollContainer","body","documentElement","scrollTo","offsetTop","scrollTop","OVERFLOWS","style","getComputedStyle","overflowY","scrollToQuote","newIndex","oldIndex","text","showDiffViewer","newMarkdownContent","oldMarkdownContent","ref","onMouseDown","listReviewers","listDraftReviewers","draftID","reviewers","onSwitchShowDiff","toggleDiffTip","showDiffTip","toggleAddReviewerDialog","showReviewerDialog","showDiffButton","checked","onChange","Tooltip","placement","isOpen","toggle","gettext","onPublishDraft","publishDraft","OriginFileLink","Utils","encodePath","published_file_path","href","initialDiffViewerContent","content","newContent","prevContent","newurl","tabItemClick","tab","showNavItem","showTab","NavItem","NavLink","active","onClick","setBtnPosition","nativeSelection","getSelection","rangeCount","isCollapsed","nativeRange","getRangeAt","focusNode","getAttribute","fragment","cloneContents","startNode","firstChild","newNativeRange","setStartBefore","setEndAfter","findRange","rect","getBoundingClientRect","navigator","userAgent","collapsed","top","height","startOffset","setEnd","endContainer","setStart","startContainer","getClientRects","commentbtn","viewContent","_range","anchor","focus","anchorText","getNode","focusText","anchorInline","getClosestInline","focusInline","block","getClosestBlock","nextText","getNextText","moveAnchorTo","moveFocusTo","getFragmentAtRange","removeNullNode","newFragment","Document","Value","serialize","blockPath","createSelection","oldNodes","newNodes","childNodes","newNode","Block","onResizeMouseUp","inResizing","onResizeMouseDown","onResizeMouseMove","rate","nativeEvent","clientX","main","clientWidth","rightPartWidth","renderDiffButton","renderNavItems","Nav","tabs","renderContent","addEventListener","removeEventListener","onResizeMove","draftLink","Fragment","draftFileName","title","disabled","onMouseMove","onMouseUp","width","TabContent","TabPane","tabId","SidePanelReviewers","SidePanelAuthor","UnresolvedComments","SidePanelChanges","changedNumber","SidePanelOrigin","Button","color","_React$Component2","item","src","avatar_url","alt","user_name","sidePanelReviewersPropTypes","_React$Component3","authorAvatar","author","_React$Component4","SidePanelOriginPropTypes","_React$Component5","UnresolvedCommentsPropTypes","_React$Component6","_this7","sidePanelChangesPropTypes","render","1308","_seafileMarkdown2html","_reviewComment","_reviewComment2","_constants2","commentPropTypes","bool","ReviewComments","response","commentList","commentItem","reviewComment","commentsList","handleCommentChange","event","comment","submitComment","postComment","resolveComment","updateComment","editComment","commentID","newComment","toggleResolvedComment","showResolvedComment","deleteComment","clientY","clientHeight","commentFooterHeight","nextProps","_this2","CommentItem","clos","rows","warp","commentItemPropTypes","_this3","toggleDropDownMenu","dropdownOpen","convertComment","processor","toggleEditComment","editable","avatarUrl","Dropdown","DropdownToggle","DropdownMenu","userEmail","username","DropdownItem","dangerouslySetInnerHTML","__html","1309","pipelineParse","p","ctx","tree","parse","file","pipelineRun","err","run","pipelineStringify","contents","stringify","unified","destination","attachers","use","namespace","freeze","plugin","transformer","frozen","freezeIndex","transformers","assertUnfrozen","own","addPreset","addList","plugins","addPlugin","plain","doc","Parser","vfile","assertParser","newable","cb","executor","assertNode","runSync","complete","bail","assertDone","Compiler","assertCompiler","compile","pipeline","processSync","trough","asyncName","1310","reason","origin","filePath","VMessage","fatal","messages","fail","info","VFile","warn","1311","history","cwd","order","encoding","assertPart","part","sep","assertNonEmpty","assertPath","dirname","basename","extname","ext","stem","1312","1313","_moment","_moment2","oldTime","created_at","getTime","format","user_email","detail","JSON","1314","1315","commentDialogPropTypes","ReviewCommentDialog","detailJSON","setQuoteText","mdQuote","1316","1317","_userSelect","_userSelect2","AddReviewerDialog","handleSelectChange","option","selectedOption","Options","addReviewers","reviewSelect","clearSelect","email","loading","errorMsg","addDraftReviewers","failed","success","deleteReviewer","reviewer","deleteDraftReviewer","newReviewers","Modal","ModalHeader","ModalBody","onSelectChange","isMulti","error_msg","ModalFooter","1318","1319","_toConsumableArray","arr","arr2","from","moment","locale","app","config","lang","HistoryList","onScroll","scrollHeight","perPage","currentPage","draftOriginRepoID","currentHistoryList","preItemIndex","HistoryItem","ctime","creator_name","_this4","parseZone","1320","2","dirPath","loginUrl","avatarInfo","logoPath","mediaUrl","siteTitle","siteName","logoWidth","logoHeight","isPro","isDocs","fileServerRoot","seafileVersion","serviceURL","seafileCollabServer","pageOptions","contactEmail","canAddRepo","canGenerateShareLink","canGenerateUploadLink","canViewOrg","fileAuditEnabled","enableFileComment","folderPermEnabled","enableResetEncryptedRepoPassword","isEmailConfigured","enableUploadFolder","enableResumableFileUpload","storages","enableRepoSnapshotLabel","shareLinkExpireDaysMin","shareLinkExpireDaysMax","maxFileName","enableWiki","enableEncryptedLibrary","enableRepoHistorySetting","isSystemStaff","thumbnailSizeForOriginal","repoPasswordMinLength","curNoteMsg","curNoteID","slug","wiki","repoID","repoId","initialPath","initial_path","permission","isDir","serviceUrl","isPublicWiki","PER_PAGE","historyRepoID","fileHistory","repoName","fileName","draft","orgID","org","invitationLink","orgMemberQuotaEnabled","constanceEnabled","sysadmin","constance_enabled","multiTenancy","multi_tenancy","multiInstitution","multi_institution","sysadminExtraEnabled","sysadmin_extra_enabled","enableGuestInvitation","enable_guest_invitation","enableTermsAndConditions","enable_terms_and_conditions","isDefaultAdmin","is_default_admin","enableFileScan","enable_file_scan","canViewSystemInfo","admin_permissions","can_view_system_info","canViewStatistic","can_view_statistic","canConfigSystem","can_config_system","canManageLibrary","can_manage_library","canManageUser","can_manage_user","canManageGroup","can_manage_group","canViewUserLog","can_view_user_log","canViewAdminLog","can_view_admin_log","239","27","_extends","_Async","_Async2","NoOptionsMessage","innerProps","margin","textAlign","UserSelect","loadOptions","searchUsers","users","label","userSelect","select","isClearable","classNamePrefix","components","288","289","Prism","languages","c","keyword","insertBefore","macro","lookbehind","alias","inside","directive","290","cpp","boolean","class-name","raw-string","greedy","291","csharp","punctuation","generic-method","function","preprocessor","dotnet","292","java","annotation","generics","293","python","triple-quoted-string","builtin","294","sql","295","swift","interpolation","delimiter","atrule","296","297","298","t","toolbar","a","registerButton","o","textContent","hook","nodeName","classList","contains","r","hasAttribute","hooks","299","console","html","xml","svg","mathml","css","clike","javascript","abap","actionscript","apacheconf","apl","applescript","arff","asciidoc","asm6502","aspnet","autohotkey","autoit","basic","coffeescript","csp","css-extras","django","erb","fsharp","gedcom","glsl","graphql","http","hpkp","hsts","ichigojam","inform7","json","latex","livescript","lolcode","markup-templating","matlab","mel","n4js","nasm","nginx","nsis","objectivec","ocaml","opencl","parigp","objectpascal","php","php-extras","plsql","powershell","protobuf","q","jsx","tsx","renpy","sas","sass","scss","soy","tt2","typescript","vbnet","vhdl","vim","visual-basic","wasm","xojo","xquery","yaml","s","language","3","_reactCookies","_reactCookies2","_seafileJs","SeafileAPI","xcsrfHeaders","cookie","load","initForSeahubUsage","300","l","display","currentStyle","querySelectorAll","code","setAttribute","innerHTML","counterReset","lineNumbers","getLine","301","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","__WEBPACK_IMPORTED_MODULE_1_slate__","__WEBPACK_IMPORTED_MODULE_2__seafile_slate_react__","__WEBPACK_IMPORTED_MODULE_3__utils_diff__","__WEBPACK_IMPORTED_MODULE_4__utils_render_slate_js__","__WEBPACK_IMPORTED_MODULE_5__css_diff_viewer_css__","DiffViewer","_React$PureComponent","_initialiseProps","slateDiff","OldMarkdownContent","diffDocument","getDiffDocument","renderNode","renderDiffNode","renderMark","readOnly","PureComponent","diffState","parentDiffState","302","__WEBPACK_IMPORTED_MODULE_0__diff__","d","303","equalityFunctionForSlate","b","isVoid","__WEBPACK_IMPORTED_MODULE_0_lodash___default","__WEBPACK_IMPORTED_MODULE_1__compare_strings__","__WEBPACK_IMPORTED_MODULE_2_slate__","marks","defaultEqualityFunction","printChunk","oArray","aArray","bArray","sO","startO","endO","sA","startA","endA","sB","startB","endB","log","isStable","SlateDiff","__WEBPACK_IMPORTED_MODULE_0_lodash__","__WEBPACK_IMPORTED_MODULE_3__slate2markdown__","__WEBPACK_IMPORTED_MODULE_4_immutable__","deepDiff","slateDiffNodes","diff","Diff","ArrayDiff","diffElement","changeType","diff_state","new_index","old_index","leaves","leaf","diffNodes","elementType","getTextDiffLeaves","newItem","oldItem","topSlateDiffNodes","splitTopDiffNodes","fromJSON","newTextLeaves","oldTextLeaves","textLeaves","diffLeaf","textDiff","newText","oldText","textDiffleaves","StringDiff","textDiffArray","stringFragment","textCharacter","markType","diffParagraph","newParagraph","oldParagraph","newParagraphNodes","oldParagraphNodes","newParagraphLeaves","oldParagraphLeaves","index1","leafNode","leafDiffMark","getLeafDiffMark","paragraph_state","newSlateDiffNodes","splicedParagraph","splitDiffParagraph","splitTableDiffParagraph","tableRow","rowIndex","tablerows","tableCell","splicedParagraphNodes","ArrayDiffElement","opts","shouldDetectChange","similarityFunc","added","removed","replaced","common","newString","oldString","newLength","oldLength","table","addCommon","addAdded","addRemoved","newArray","addReplaced","Diff3","chunks","mergedArray","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","return","oaDiff","obDiff","M_oa","j","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","M_ob","_i","_j","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_item","found","_i2","_j2","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","indexA","indexO","indexB","calPatchChunk","304","compareTwoStrings","str1","str2","pairs1","wordLetterPairs","pairs2","pair1","pair2","letterPairs","str","305","4","_pinyinByUnicode","keyCodes","esc","space","up","down","bytesToSize","bytes","sizes","toFixed","isHiDPI","devicePixelRatio","FILEEXT_ICON_MAP","md","txt","pdf","docx","odt","fodt","ppt","pptx","odp","fodp","xls","xlsx","ods","fods","mp4","ogv","webm","mov","flv","wmv","rmvb","mp3","oga","ogg","flac","aac","ac3","wma","jpg","jpeg","png","gif","bmp","ico","imageCheck","filename","substr","videoCheck","path_arr","path_arr_","len","encodeURIComponent","HTMLescape","createTextNode","generateDialogTitle","operationTarget","targetStr","getFileName","getPaths","getFolderName","getDirName","isChildPath","child","isAncestorPath","ancestor","renameAncestorPath","newAncestor","joinPath","pathA","pathB","isSupportUploadFolder","getDefaultLibIconUrl","isBig","getLibIconUrl","repo","share_permission","icon_name","encrypted","getDirentIcon","dirent","readonly","getFolderIconUrl","getFileIconUrl","file_ext","getLibIconTitle","is_admin","getFolderIconTitle","sharePerms","sharePermsExplanation","formatSize","kilobyte","megabyte","gigabyte","formatBitRate","bits","Bs","isMarkdownFile","isInternalMarkdownLink","isInternalDirLink","getPathFromInternalMarkdownLink","re","decodeURIComponent","getPathFromInternalDirLink","isWikiInternalMarkdownLink","isWikiInternalDirLink","getPathFromWikiInternalMarkdownLink","getPathFromWikiInternalDirLink","compareTwoWord","wordA","wordB","a_val","b_val","a_uni","b_uni","compareStrWithNumbersIn","isDigitPart","aPart","bPart","reParts","reDigit","aParts","bParts","sortRepos","repos","sortOrder","last_modified","sortDirents","items","mtime","changeMarkdownNodes","chooseLanguage","suffix","mode","DARK_COLOR_MAP","red","orange","yellow","green","cyan","blue","indigo","purple","pink","azure","lime","teal","gray","#FFA8A8","#FFA94D","#FFD43B","#A0EC50","#A9E34B","#63E6BE","#4FD2C9","#72C3FC","#91A7FF","#E599F7","#B197FC","#F783AC","#CED4DA","getDarkColor","439","646","compiler","hast","sanitize","schema","toHTML","xtend","deepmerge","gh","attributes","li","tagNames","markdown","breaks","remark2rehype","raw","commonmark","allowDangerousHTML","processorGetAST","85"],"mappings":"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IACAC,OAAA,IAAAC,OAAA,IAAAC,OAAA,IAAAC,OAAA,IAAAC,OAAA,IAAAC,OAAA,IACAC,OAAA,IAAAC,OAAA,IAAAC,OAAA,IAAAC,OAAA,IAAAC,OAAA,IAAAC,OAAA,IACAC,OAAA,IAAAC,OAAA,IAAAC,OAAA,IAAAC,OAAA,IACAC,OAAA,IAAAC,OAAA,IAAAC,OAAA,IAAAC,OAAA,IACAC,OAAA,IAAAC,OAAA,IAAAC,OAAA,IACAC,OAAA,KAAAC,OAAA,KACAC,OAAA,KAAAC,OAAA,KACAC,OAAA,KAEAC,SAAA,IAAAC,SAAA,IAAAC,SAAA,IACAC,SAAA,IAAAC,SAAA,IAAAC,SAAA,IACAC,SAAA,IAAAC,SAAA,IAAAC,SAAA,IAAAC,SAAA,IACAC,SAAA,IAAAC,SAAA,IAAAC,SAAA,IAAAC,SAAA,IACAC,SAAA,IAAAC,SAAA,IAAAC,SAAA,IAAAC,SAAA,IACAC,SAAA,IAAAC,SAAA,IAAAC,SAAA,IAAAC,SAAA,IAAAC,SAAA,IACAC,SAAA,IAAAC,SAAA,IAAAC,SAAA,IAAAC,SAAA,IAAAC,SAAA,IACAC,SAAA,IAAAC,SAAA,IAAAC,SAAA,IAAAC,SAAA,IACAC,SAAA,IAAAC,SAAA,IAAAC,SAAA,IAAAC,SAAA,IACAC,SAAA,IAAAC,SAAA,IAAAC,SAAA,IAAAC,SAAA,IACAC,SAAA,IAAAC,SAAA,IAAAC,SAAA,IAAAC,SAAA,IAAAC,SAAA,IACAC,SAAA,IAAAC,SAAA,IAAAC,SAAA,IAAAC,SAAA,IAAAC,SAAA,IACAC,SAAA,IAAAC,SAAA,IACAC,SAAA,IAAAC,SAAA,IAAAC,SAAA,IACAC,SAAA,IAAAC,SAAA,IAAAC,SAAA,IAAAC,SAAA,IAAAC,SAAA,IACAC,SAAA,IAAAC,SAAA,IAAAC,SAAA,IAAAC,SAAA,IAAAC,SAAA,IACAC,SAAA,IAAAC,SAAA,IAAAC,SAAA,IAAAC,SAAA,IACAC,SAAA,IAAAC,SAAA,IAAAC,SAAA,IAAAC,SAAA,IACAC,SAAA,IAAAC,SAAA,IAAAC,SAAA,IACAC,SAAA,IAAAC,SAAA,IAAAC,SAAA,IACAC,SAAA,IAAAC,SAAA,I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AAA41B,WACA51B,EAAA0zB,WACA1zB,EAAA0mB,aACA1mB,EAAAmiB,SACAniB,EAAAsf,SACAtf,EAAAuf,WACAvf,EAAAwf,UACAxf,EAAAqtB,QACArtB,EAAAstB,YACAttB,EAAAutB,YACAvtB,EAAAizB,WACAjzB,EAAAthB,UACAshB,EAAAkkB,SACAlkB,EAAAmkB,cACAnkB,EAAAokB,YACApkB,EAAAqvB,YACArvB,EAAA20B,gBACA30B,EAAA2zB,SACA3zB,EAAA4zB,SACA5zB,EAAA8xB,cACA9xB,EAAA+xB,gBACA/xB,EAAAgyB,kBACAhyB,EAAAyf,QACAzf,EAAA0f,aACA1f,EAAA2f,kBACA3f,EAAA4f,aACA5f,EAAA6f,QACA7f,EAAAgjB,UACAhjB,EAAAijB,WACAjjB,EAAAkjB,eACAljB,EAAAmjB,gBACAnjB,EAAAqd,WACArd,EAAAggB,eACAhgB,EAAAigB,gBACAjgB,EAAA8lB,QACA9lB,EAAA61B,QACA71B,EAAA81B,aACA91B,EAAAkgB,aACAlgB,EAAAmpB,aACAnpB,EAAAopB,eACAppB,EAAAozB,WACApzB,EAAAogB,WACApgB,EAAAiyB,gBACAjyB,EAAAmyB,kBACAnyB,EAAAoyB,oBACApyB,EAAA60B,UACA70B,EAAA80B,YACA90B,EAAAqzB,aACArzB,EAAAvd,YACAud,EAAAszB,SACAtzB,EAAA2G,QACA3G,EAAA6G,UACA7G,EAAAxY,OACAwY,EAAAqpB,WACArpB,EAAAspB,aACAtpB,EAAAytB,WACAztB,EAAA0tB,mBACA1tB,EAAA+lB,WACA/lB,EAAAg1B,SACAh1B,EAAA40B,aACA50B,EAAA+1B,UACA/1B,EAAAg2B,YACAh2B,EAAA2tB,SACA3tB,EAAA2jB,UACA3jB,EAAAguB,UACAhuB,EAAAi1B,QACAj1B,EAAAupB,UACAvpB,EAAAmmB,QACAnmB,EAAAujB,WACAvjB,EAAAi2B,QACAj2B,EAAA6zB,YACA7zB,EAAAk2B,aACAl2B,EAAAm2B,YACAn2B,EAAAymB,WACAzmB,EAAA+zB,gBACA/zB,EAAAuzB,aACAvzB,EAAAsvB,QACAtvB,EAAAwpB,UACAxpB,EAAAsO,YACAtO,EAAAiuB,cACAjuB,EAAAqyB,QACAryB,EAAAygB,WACAzgB,EAAA0gB,aACA1gB,EAAA2gB,eACA3gB,EAAAsyB,UACAtyB,EAAAo2B,SACAp2B,EAAAq2B,cACAr2B,EAAAg0B,SACAh0B,EAAA0jB,UACA1jB,EAAA4gB,UACA5gB,EAAAomB,QACApmB,EAAAqZ,WACArZ,EAAA6jB,cACA7jB,EAAA/X,OACA+X,EAAA0pB,WACA1pB,EAAA8jB,WACA9jB,EAAAqU,SACArU,EAAAwzB,UACAxzB,EAAAohB,cACAphB,EAAAqhB,gBACArhB,EAAA9b,SACA8b,EAAAqmB,UACArmB,EAAAshB,QACAthB,EAAAuhB,QACAvhB,EAAAwhB,aACAxhB,EAAAyhB,kBACAzhB,EAAA0hB,aACA1hB,EAAAoiB,OACApiB,EAAAsmB,YACAtmB,EAAAoZ,QACApZ,EAAAyiB,WACAziB,EAAAk1B,WACAl1B,EAAAm1B,aACAn1B,EAAAwuB,UACAxuB,EAAA+P,iBACA/P,EAAApY,aACAoY,EAAAumB,SACAvmB,EAAAuyB,SACAvyB,EAAAwyB,WACAxyB,EAAAyyB,aACAzyB,EAAA2hB,QACA3hB,EAAA4hB,UACA5hB,EAAA6hB,YACA7hB,EAAA4pB,SACA5pB,EAAA8hB,SACA9hB,EAAAgiB,aACAhiB,EAAA6pB,UACA7pB,EAAA8pB,cACA9pB,EAAAtc,UACAsc,EAAA+pB,YACA/pB,EAAA0yB,WACA1yB,EAAAoY,SACApY,EAAAwmB,QACAxmB,EAAA2yB,OACA3yB,EAAA4yB,SACA5yB,EAAA6yB,WACA7yB,EAAA8yB,OACA9yB,EAAAiiB,aACAjiB,EAAAkiB,iBACAliB,EAAA+yB,WAGA/yB,EAAA0C,QAAAwyB,GACAl1B,EAAAk3B,UAAA/B,GACAn1B,EAAAm3B,OAAA7C,GACAt0B,EAAAo3B,WAAA5L,GAGAmC,GAAA3tB,KAKAA,EAAAwE,OACAxE,EAAAusB,WACAvsB,EAAAo1B,aACAp1B,EAAAqqB,cACArqB,EAAAswB,QACAtwB,EAAAgqB,SACAhqB,EAAAsB,SACAtB,EAAA4mB,aACA5mB,EAAA6mB,iBACA7mB,EAAA2mB,aACA3mB,EAAA8mB,cACA9mB,EAAAqY,UACArY,EAAAwtB,aACAxtB,EAAAw2B,UACAx2B,EAAAwqB,YACAxqB,EAAAmG,MACAnG,EAAA0qB,UACA1qB,EAAA2qB,gBACA3qB,EAAA+iB,SACA/iB,EAAAkzB,QACAlzB,EAAA8f,aACA9f,EAAA6oB,WACA7oB,EAAAmzB,YACAnzB,EAAA+f,iBACA/f,EAAA8oB,eACA9oB,EAAAuwB,SACAvwB,EAAAtY,WACAsY,EAAAojB,gBACApjB,EAAA+oB,SACA/oB,EAAAgpB,cACAhpB,EAAAipB,UACAjpB,EAAAkpB,eACAlpB,EAAAoE,OACApE,EAAAi0B,MACAj0B,EAAAk0B,OACAl0B,EAAA/Z,OACA+Z,EAAAoP,SACApP,EAAAmgB,QACAngB,EAAAmO,YACAnO,EAAAgJ,YACAhJ,EAAA2Q,WACA3Q,EAAAiqB,WACAjqB,EAAA+0B,UACA/0B,EAAAqF,eACArF,EAAAE,WACAF,EAAAjB,iBACAiB,EAAA+O,eACA/O,EAAA4P,qBACA5P,EAAA+mB,aACA/mB,EAAAuF,YACAvF,EAAAf,UACAe,EAAAgnB,aACAhnB,EAAAinB,WACAjnB,EAAAknB,WACAlnB,EAAAmnB,eACAnnB,EAAAonB,WACApnB,EAAAqnB,YACArnB,EAAAoK,cACApK,EAAAunB,aACAvnB,EAAAiO,YACAjO,EAAAb,SACAa,EAAAwnB,WACAxnB,EAAAynB,eACAznB,EAAA0nB,SACA1nB,EAAA4nB,YACA5nB,EAAAgoB,SACAhoB,EAAA+nB,UACA/nB,EAAA2nB,YACA3nB,EAAA2H,YACA3H,EAAAC,gBACAD,EAAA8P,iBACA9P,EAAAX,YACAW,EAAAmoB,iBACAnoB,EAAAT,SACAS,EAAAsjB,YACAtjB,EAAAsJ,YACAtJ,EAAAP,gBACAO,EAAAooB,eACApoB,EAAAqoB,aACAroB,EAAAsoB,aACAtoB,EAAAhQ,QACAgQ,EAAAs1B,aACAt1B,EAAAgM,QACAhM,EAAAugB,eACAvgB,EAAAu1B,aACAv1B,EAAAw1B,cACAx1B,EAAAm0B,MACAn0B,EAAAo0B,OACAp0B,EAAA6uB,OACA7uB,EAAA8uB,SACA9uB,EAAA+uB,QACA/uB,EAAAgvB,UACAhvB,EAAAivB,OACAjvB,EAAAkvB,SACAlvB,EAAAkuB,aACAluB,EAAAmuB,aACAnuB,EAAAouB,cACApuB,EAAAquB,cACAruB,EAAAsuB,YACAtuB,EAAA22B,YACA32B,EAAAwgB,OACAxgB,EAAA6tB,cACA7tB,EAAA+tB,QACA/tB,EAAAulB,OACAvlB,EAAA4qB,OACA5qB,EAAA8qB,UACA9qB,EAAA+qB,YACA/qB,EAAAlC,YACAkC,EAAAkqB,UACAlqB,EAAAwjB,UACAxjB,EAAAyjB,eACAzjB,EAAAkrB,UACAlrB,EAAAsY,WACAtY,EAAA9c,UACA8c,EAAA82B,SACA92B,EAAAF,eACAE,EAAA4jB,UACA5jB,EAAAvY,QACAuY,EAAAy1B,aACAz1B,EAAA+jB,QACA/jB,EAAA8gB,eACA9gB,EAAA+gB,iBACA/gB,EAAAghB,iBACAhhB,EAAAihB,mBACAjhB,EAAAkhB,qBACAlhB,EAAAmhB,qBACAnhB,EAAA01B,aACA11B,EAAAorB,cACAprB,EAAA+2B,YACA/2B,EAAAmvB,OACAnvB,EAAAovB,SACApvB,EAAAqrB,YACArrB,EAAAuuB,SACAvuB,EAAAkb,YACAlb,EAAAwJ,aACAxJ,EAAAyJ,YACAzJ,EAAAwsB,WACAxsB,EAAAob,YACApb,EAAA2oB,iBACA3oB,EAAAkU,YACAlU,EAAAysB,WACAzsB,EAAA2sB,QACA3sB,EAAA4sB,WACA5sB,EAAA6sB,aACA7sB,EAAA8sB,YACA9sB,EAAAmtB,YACAntB,EAAAyuB,YACAzuB,EAAA21B,aACA31B,EAAAsqB,cAGAtqB,EAAAq3B,KAAA3vC,GACAsY,EAAAs3B,UAAAlU,GACApjB,EAAAu3B,MAAApX,GAEAwN,GAAA3tB,EAAA,WACA,GAAA3S,KAMA,OALA0c,IAAA/J,EAAA,SAAA7d,EAAA41B,GACA1X,GAAAliB,KAAA6hB,EAAAxhB,UAAAu5B,KACA1qB,EAAA0qB,GAAA51B,KAGAkL,MACW80B,OAAA,IAWXniB,EAAAw3B,QA18gBA,UA68gBA50C,GAAA,yEAAAm1B,GACA/X,EAAA+X,GAAAxxB,YAAAyZ,IAIApd,GAAA,wBAAAm1B,EAAAp1B,GACAwd,EAAA3hB,UAAAu5B,GAAA,SAAApyB,GACAA,MAAAR,GAAA,EAAAimB,GAAA5B,GAAA7jB,GAAA,EAEA,IAAAzC,GAAArC,KAAAkgB,eAAApe,EACA,GAAAwd,GAAAtf,MACAA,KAAAygB,OAUA,OARApe,GAAA6d,aACA7d,EAAA+d,cAAAkB,GAAAxc,EAAAzC,EAAA+d,eAEA/d,EAAAge,UAAA5Z,MACAG,KAAA0a,GAAAxc,EAAA+E,IACA6X,KAAAwV,GAAA70B,EAAA4d,QAAA,gBAGA5d,GAGAid,EAAA3hB,UAAAu5B,EAAA,kBAAApyB,GACA,MAAA9E,MAAAw4B,UAAAtB,GAAApyB,GAAA0zB,aAKAz2B,GAAA,qCAAAm1B,EAAAp1B,GACA,GAAA4f,GAAA5f,EAAA,EACA80C,EAAAl1B,GAAAlY,IA37gBA,GA27gBAkY,CAEApC,GAAA3hB,UAAAu5B,GAAA,SAAAt1B,GACA,GAAAS,GAAArC,KAAAygB,OAMA,OALApe,GAAA8d,cAAA1Z,MACA7E,SAAA0tB,GAAA1tB,EAAA,GACA8f,SAEArf,EAAA6d,aAAA7d,EAAA6d,cAAA02B,EACAv0C,KAKAN,GAAA,wBAAAm1B,EAAAp1B,GACA,GAAA+0C,GAAA,QAAA/0C,EAAA,WAEAwd,GAAA3hB,UAAAu5B,GAAA,WACA,MAAAl3B,MAAA62C,GAAA,GAAA94C,QAAA,MAKAgE,GAAA,2BAAAm1B,EAAAp1B,GACA,GAAAg1C,GAAA,QAAAh1C,EAAA,WAEAwd,GAAA3hB,UAAAu5B,GAAA,WACA,MAAAl3B,MAAAkgB,aAAA,GAAAZ,GAAAtf,WAAA82C,GAAA,MAIAx3B,EAAA3hB,UAAA+gC,QAAA,WACA,MAAA1+B,MAAAmiC,OAAA7U,KAGAhO,EAAA3hB,UAAA00C,KAAA,SAAAnwC,GACA,MAAAlC,MAAAmiC,OAAAjgC,GAAAo9B,QAGAhgB,EAAA3hB,UAAA20C,SAAA,SAAApwC,GACA,MAAAlC,MAAAw4B,UAAA6Z,KAAAnwC,IAGAod,EAAA3hB,UAAA60C,UAAA/hB,GAAA,SAAAhH,EAAAjoB,GACA,wBAAAioB,GACA,GAAAnK,GAAAtf,MAEAA,KAAA2G,IAAA,SAAA5I,GACA,MAAAktB,IAAAltB,EAAA0rB,EAAAjoB,OAIA8d,EAAA3hB,UAAAklC,OAAA,SAAA3gC,GACA,MAAAlC,MAAAmiC,OAAAW,GAAAxT,GAAAptB,MAGAod,EAAA3hB,UAAA61B,MAAA,SAAAvS,EAAAC,GACAD,EAAA0H,GAAA1H,EAEA,IAAA5e,GAAArC,IACA,OAAAqC,GAAA6d,eAAAe,EAAA,GAAAC,EAAA,GACA,GAAA5B,GAAAjd,IAEA4e,EAAA,EACA5e,IAAAs+B,WAAA1f,GACOA,IACP5e,IAAAu8B,KAAA3d,IAEAC,IAAA5c,KACA4c,EAAAyH,GAAAzH,GACA7e,EAAA6e,EAAA,EAAA7e,EAAAw8B,WAAA3d,GAAA7e,EAAAq+B,KAAAxf,EAAAD,IAEA5e,IAGAid,EAAA3hB,UAAAijC,eAAA,SAAA1+B,GACA,MAAAlC,MAAAw4B,UAAAqI,UAAA3+B,GAAAs2B,WAGAlZ,EAAA3hB,UAAAikC,QAAA,WACA,MAAA5hC,MAAA0gC,KAAA72B,KAIAqf,GAAA5J,EAAA3hB,UAAA,SAAA2D,EAAA41B,GACA,GAAA6f,GAAA,qCAAA9wC,KAAAixB,GACA8f,EAAA,kBAAA/wC,KAAAixB,GACA+f,EAAA93B,EAAA63B,EAAA,gBAAA9f,EAAA,YAAAA,GACAggB,EAAAF,GAAA,QAAA/wC,KAAAixB,EAEA+f,KAGA93B,EAAAxhB,UAAAu5B,GAAA,WACA,GAAAn5B,GAAAiC,KAAA4f,YACApe,EAAAw1C,GAAA,GAAAjgB,UACAogB,EAAAp5C,YAAAuhB,GACA1d,EAAAJ,EAAA,GACA41C,EAAAD,GAAA93B,GAAAthB,GAEAyjC,EAAA,SAAAzjC,GACA,GAAAsE,GAAA40C,EAAA51C,MAAA8d,EAAAvc,GAAA7E,GAAAyD,GACA,OAAAw1C,IAAAr3B,EAAAtd,EAAA,GAAAA,EAGA+0C,IAAAL,GAAA,kBAAAn1C,IAAA,GAAAA,EAAAjD,SAEAw4C,EAAAC,GAAA,EAEA,IAAAz3B,GAAA3f,KAAA8f,UACAu3B,IAAAr3C,KAAA6f,YAAAlhB,OACA24C,EAAAJ,IAAAv3B,EACA43B,EAAAJ,IAAAE,CAEA,KAAAH,GAAAE,EAAA,CACAr5C,EAAAw5C,EAAAx5C,EAAA,GAAAuhB,GAAAtf,KACA,IAAAqC,GAAAf,EAAAD,MAAAtD,EAAAyD,EAEA,OADAa,GAAAwd,YAAApZ,MAAmCnF,KAAAi3B,GAAA/2B,MAAAggC,GAAAjgC,QAAA+C,KACnC,GAAAib,GAAAld,EAAAsd,GAEA,MAAA23B,IAAAC,EACAj2C,EAAAD,MAAArB,KAAAwB,IAEAa,EAAArC,KAAAu4B,KAAAiJ,GACA8V,EAAAN,EAAA30C,EAAAtE,QAAA,GAAAsE,EAAAtE,QAAAsE,OAKAN,GAAA,yDAAAm1B,GACA,GAAA51B,GAAAqtC,GAAAzX,GACAsgB,EAAA,0BAAAvxC,KAAAixB,GAAA,aACAggB,EAAA,kBAAAjxC,KAAAixB,EAEA/X,GAAAxhB,UAAAu5B,GAAA,WACA,GAAA11B,GAAAu1B,SACA,IAAAmgB,IAAAl3C,KAAA8f,UAAA,CACA,GAAA/hB,GAAAiC,KAAAjC,OACA,OAAAuD,GAAAD,MAAAge,GAAAthB,QAAAyD,GAEA,MAAAxB,MAAAw3C,GAAA,SAAAz5C,GACA,MAAAuD,GAAAD,MAAAge,GAAAthB,QAAAyD,QAMA0nB,GAAA5J,EAAA3hB,UAAA,SAAA2D,EAAA41B,GACA,GAAA+f,GAAA93B,EAAA+X,EACA,IAAA+f,EAAA,CACA,GAAAp4C,GAAAo4C,EAAAjb,KAAA,IACAS,GAAA59B,KAAA49B,GAAA59B,QAEA4H,MAAoBu1B,KAAA9E,EAAA51B,KAAA21C,OAIpBxa,GAAAzE,GAAA1zB,GAAAqE,IAAAqzB,QACAA,KAAA,UACA16B,KAAAgD,KAIAgb,EAAA3hB,UAAA8iB,MAAAH,EACAhB,EAAA3hB,UAAA66B,QAAAhY,EACAlB,EAAA3hB,UAAAI,MAAA2iB,EAGAvB,EAAAxhB,UAAAg2C,GAAAxB,GACAhzB,EAAAxhB,UAAA2jC,MAAAG,GACAtiB,EAAAxhB,UAAA85C,OAAA/V,GACAviB,EAAAxhB,UAAA4I,KAAAo7B,GACAxiB,EAAAxhB,UAAAk7B,MAAAiJ,GACA3iB,EAAAxhB,UAAA66B,QAAAuJ,GACA5iB,EAAAxhB,UAAA+5C,OAAAv4B,EAAAxhB,UAAAiqC,QAAAzoB,EAAAxhB,UAAAI,MAAAkkC,GAGA9iB,EAAAxhB,UAAA+4C,MAAAv3B,EAAAxhB,UAAA2hC,KAEAoI,KACAvoB,EAAAxhB,UAAA+pC,IAAA7F,IAEA1iB,IAcA/B,IAAA4B,MAIA5d,EAAA,WACA,MAAA4d,KACK1hB,KAAAZ,EAAAC,EAAAD,EAAAD,MAAA6H,KAAA7H,EAAAC,QAAA0E,KAaJ9D,KAAA0C,QHoD4B1C,KAAKZ,EAASC,EAAoB,IAAKA,EAAoB,KAAKF,KAIvFk7C,GACA,SAAUl7C,EAAQC,EAASC,GAEjC,YI3whBA,qBAAAozC,WAIApzC,EAAA,IAAAi7C,SACAC,OAAA9H,QAAApzC,EAAA,KAIAA,EAAA,IAIAiB,OAAA41C,OAAA72C,EAAA,KJyxhBMm7C,IACA,SAAUr7C,EAAQC,KAMlBq7C,GACA,SAAUt7C,EAAQC,EAASC,GAEjC,YACAiB,QAAOS,eAAe3B,EAAQ,cAAcqB,OAAM,GKnzhBrCi6C,qBAAoB,06oBLuzhB3BC,KACA,SAAUx7C,EAAQC,EAASC,GAEjCA,EAAoB,IACpBF,EAAOC,QAAUC,EAAoB,OAK/Bu7C,KACA,SAAUz7C,EAAQC,EAASC,GAEjC,YACioE,SAASC,GAAuBC,GAAK,MAAOA,IAAKA,EAAIC,WAAWD,GAAKE,QAAQF,GAAM,QAASG,GAAgBC,EAASC,GAAa,KAAKD,YAAoBC,IAAc,KAAM,IAAIC,WAAU,qCAAuC,QAASC,GAA2BC,EAAKC,GAAM,IAAID,EAAM,KAAM,IAAIE,gBAAe,4DAA8D,QAAOD,GAAqB,iBAAPA,IAA+B,mBAAPA,GAAwBD,EAALC,EAAW,QAASE,GAAUC,EAASC,GAAY,GAAuB,mBAAbA,IAAsC,OAAbA,EAAmB,KAAM,IAAIP,WAAU,iEAAkEO,GAAaD,GAASE,UAAUC,OAAOC,OAAOH,GAAYA,EAAWC,WAAWG,aAAaC,MAAMN,EAASO,YAAW,EAAMC,UAAS,EAAKC,cAAa,KAAWR,IAAWE,OAAOO,eAAeP,OAAOO,eAAeV,EAASC,GAAYD,EAASW,UAAUV,GAAt/F,GAAIY,GAAa,WAAW,QAASC,GAAiBC,EAAOC,GAAO,IAAI,GAAIC,GAAE,EAAEA,EAAED,EAAME,OAAOD,IAAI,CAAC,GAAIE,GAAWH,EAAMC,EAAGE,GAAWZ,WAAWY,EAAWZ,aAAY,EAAMY,EAAWV,cAAa,EAAQ,SAAUU,KAAWA,EAAWX,UAAS,GAAKL,OAAOS,eAAeG,EAAOI,EAAWC,IAAID,IAAc,MAAO,UAAS1B,EAAY4B,EAAWC,GAAuI,MAAvHD,IAAWP,EAAiBrB,EAAYS,UAAUmB,GAAeC,GAAYR,EAAiBrB,EAAY6B,GAAoB7B,MMp0hB5e8B,EAAArC,EAAA,GNo0hBoiBsC,EAAQrC,EAAuBoC,GMn0hBnkBE,EAAAvC,EAAA,GNm0hBonBwC,EAAWvC,EAAuBsC,GMl0hBtpBE,EAAAzC,EAAA,GNk0hB2sB0C,EAAYzC,EAAuBwC,GMj0hB9uB+4C,EAAAx7C,EAAA,GAEAy7C,EAAAz7C,EAAA,KAEA07C,GN6zhBq1Bz7C,EAAuBw7C,GM7zhB52Bz7C,EAAA,IACA27C,EAAA37C,EAAA,GACA47C,EAAA57C,EAAA,KN2zhB2+B67C,EAAQ57C,EAAuB27C,GM1zhB1gCE,EAAA97C,EAAA,KN0zhB+jC+7C,EAAa97C,EAAuB67C,GMzzhBnmCE,EAAAh8C,EAAA,KACAi8C,EAAAj8C,EAAA,INwzhBisCk8C,EAAUj8C,EAAuBg8C,GMvzhBluCE,EAAAn8C,EAAA,MNuzhB8xCo8C,EAAiBn8C,EAAuBk8C,GMtzhBt0CE,EAAAr8C,EAAA,MNszhB84Cs8C,EAAsBr8C,EAAuBo8C,GMpzhB37CE,EAAAv8C,EAAA,MNozhBsgDw8C,EAAoBv8C,EAAuBs8C,GMnzhBjjDE,EAAAz8C,EAAA,IAEA08C,EAAA18C,EAAA,KNizhB0pD28C,EAAa18C,EAAuBy8C,GMhzhB9rDE,EAAA58C,EAAA,MNgzhB0vD68C,EAAc58C,EAAuB28C,GM/yhB/xDE,EAAA98C,EAAA,IACA+8C,EAAA/8C,EAAA,IN8yhB63Dg9C,EAAc/8C,EAAuB88C,GM7yhBl6DE,EAAAj9C,EAAA,EAEAA,GAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,IACAA,EAAA,KACAA,EAAA,KACAA,EAAA,MAEAA,EAAQ,IACR,IAAMk9C,GAAMl9C,EAAQ,KAEdm9C,ENgyhBumG,SAAS/5C,GM/xhBpnG,QAAA+5C,GAAYr7C,GAAOzB,EAAAgD,KAAA85C,EAAA,IAAA75C,GAAA7C,EAAA4C,MAAA85C,EAAA17C,WAAAR,OAAAsC,eAAA45C,IAAAx8C,KAAA0C,KACXvB,GADW,OAAAwB,GA4BnB85C,eAAiB,WACf,OAAOC,eACL,IAAK,OACH,IAAKC,kBAKH,WAJAh6C,GAAKi6C,UACHC,WAAW,EACXC,YAAY,GAKhB,KAAKC,mBAaH,WAZAC,cAAWC,oBAAoBC,cAAaC,iBACzCC,KAAK,SAAAC,GACJL,aAAWM,eAAeD,EAAIr0C,MAC3Bo0C,KAAK,SAAAC,GACJ16C,EAAKi6C,UACHW,aAAcF,EAAIr0C,KAClBw0C,mBAAoBH,EAAIr0C,KACxB6zC,WAAW,EACXC,YAAY,OAOxB,IAAMl3B,GAAO20B,OAAOkD,SAAS73B,IAC7B,IAAkC,IAA9BA,EAAK4M,QAAQ,aAAoB,CACnC,GAAMkrB,GAAkB93B,EAAKsQ,MAAM,EAAG,IAChCynB,EAAc/3B,EAAKsQ,MAAM,GAAI,IAC/B0nB,SAAiBC,QACrBl7C,GAAKi6C,UACHC,WAAW,EACXiB,UAAW,YAEbd,aAAWe,uBAAuBb,cAAaC,gBAAe,EAAG,IAAIC,KAAK,SAACC,GACzE,GAAMW,GAAcX,EAAIr0C,KAAKA,IAC7BrG,GAAKi6C,UACHoB,YAAaA,EACbC,oBAAqBZ,EAAIr0C,KAAKk1C,aAEhC,KAAK,GAAI98C,GAAI,EAAGC,EAAS28C,EAAY38C,OAAQD,EAAIC,IAC3Cs8C,IAAgBK,EAAY58C,GAAG+8C,YACjCx7C,EAAKi6C,UACHwB,WAAYh9C,IAEdw8C,EAAkBI,EAAY58C,GAAG+qB,MAE/BuxB,IAAoBM,EAAY58C,GAAG+8C,YACrCN,EAAsBG,EAAY58C,GAAG+qB,OAEnCyxB,IAAmBC,GAVgCz8C,KAYzDi9C,UAAMC,KACJtB,aAAWuB,gBAAgBrB,cAAaQ,EAAiBG,GACzDb,aAAWuB,gBAAgBrB,cAAaS,EAAaC,KACpDR,KAAKiB,UAAMnW,OAAO,SAACsW,EAAMC,GAC1BJ,UAAMC,KAAKtB,aAAWM,eAAekB,EAAKx1C,MAAOg0C,aAAWM,eAAemB,EAAKz1C,QAAQo0C,KAAKiB,UAAMnW,OAAO,SAACwW,EAAUC,GACnHh8C,EAAKi8C,qBAAqBD,EAAS31C,KAAM01C,EAAS11C,kBAMxDq1C,WAAMC,KACJtB,aAAWC,oBAAoBC,cAAaC,iBAC5CH,aAAWC,oBAAoBC,cAAa2B,yBAC3CzB,KAAKiB,UAAMnW,OAAO,SAACsW,EAAMC,GAC1BJ,UAAMC,KACJtB,aAAWM,eAAekB,EAAKx1C,MAC/Bg0C,aAAWM,eAAemB,EAAKz1C,QAC9Bo0C,KAAKiB,UAAMnW,OAAO,SAACqV,EAAcC,GAClC76C,EAAKi6C,UACHW,aAAcA,EAAav0C,KAC3Bw0C,mBAAoBA,EAAmBx0C,KACvC6zC,WAAW,GAEb,IAAIiC,IACJn0B,YAAW,WACTm0B,EAAKC,mBACJ,UAIT,MACF,KAAK,YACH,IAAKhC,mBAKH,WAJAp6C,GAAKi6C,UACHC,WAAW,EACXC,YAAY,GAKhB,IAAIkC,GAAMC,WAAW,QAAU/B,cAAc,IAAMgC,sBAAsB,eAAsBL,sBAC3FM,EAAKF,WAAW,QAAU/B,cAAc,IAAMkC,oBAAoB,eAAsBP,qBAC5FR,WAAMC,KACJtB,aAAWM,eAAe0B,GAC1BhC,aAAWM,eAAe6B,KACzB/B,KAAKiB,UAAMnW,OAAO,SAACqV,EAAcC,GAClC76C,EAAKi6C,UACHW,aAAcA,EAAav0C,KAC3Bw0C,mBAAoBA,EAAmBx0C,KACvC6zC,WAAW,SApIFl6C,EA2InB08C,mBAAqB,SAACC,EAAaC,EAASnB,GAC1C,GAAMT,GAAc4B,EAAQpB,UACtBT,EAAkB4B,EAAYnB,UAC9BqB,EAAM,WAAa7B,EAAc,IAAMD,CAC7C/6C,GAAK88C,OAAOD,GACZ78C,EAAKi6C,UACHwB,WAAYA,EACZvB,WAAW,IAEbwB,UAAMC,KACJtB,aAAWuB,gBAAgBrB,cAAaQ,EAAiB4B,EAAYnzB,MACrE6wB,aAAWuB,gBAAgBrB,cAAaS,EAAa4B,EAAQpzB,QAC5DixB,KAAKiB,UAAMnW,OAAO,SAACsW,EAAMC,GAC1BJ,UAAMC,KAAKtB,aAAWM,eAAekB,EAAKx1C,MAAOg0C,aAAWM,eAAemB,EAAKz1C,QAAQo0C,KAAKiB,UAAMnW,OAAO,SAACwW,EAASC,GAClHh8C,EAAKi8C,qBAAqBF,EAAS11C,KAAM21C,EAAS31C,aAzJrCrG,EA8JnB+8C,oBAAsB,SAAC1B,GACrBr7C,EAAKi6C,UACHoB,YAAaA,KAhKEr7C,EAoKnBg9C,kBAAoB,WAClB3C,aAAW4C,aAAa1C,cAAaC,iBAAeC,KAAK,SAACC,GAIxD,IAAK,GAHDv0B,GAASu0B,EAAIr0C,KAAKk1C,YAClB2B,EAAWxC,EAAIr0C,KAAK62C,SACpBC,EAAqB,EAChB1+C,EAAI,EAAGA,EAAIi8C,EAAIr0C,KAAKk1C,YAAa98C,KACX,IAAzBy+C,EAASz+C,GAAG2+C,UACdD,GAGJn9C,GAAKi6C,UACHoD,eAAgBl3B,EAChBg3B,mBAAoBA,OAhLPn9C,EAqLnBs9C,WAAa,SAACv/B,GACZA,EAAEw/B,kBACFv9C,EAAKw9C,WACAx9C,EAAK8wC,OAGV9wC,EAAKi6C,UACHwD,qBAAqB,KA5LNz9C,EAgMnB09C,eAAiB,WACf19C,EAAKg9C,oBACLh9C,EAAK29C,uBAlMY39C,EAqMnB29C,oBAAsB,WACpB39C,EAAKi6C,UACHwD,qBAAsBz9C,EAAK49C,MAAMH,uBAvMlBz9C,EA2MnB69C,kBAAoB,WAClBxD,aAAWyD,YAAYvD,eAAaE,KAAK,SAACC,GACxC16C,EAAKi6C,UACH8D,eAAgBrD,EAAIr0C,KAAK23C,eA9MZh+C,EAmNnBo8C,gBAAkB,WAChB,GAAM6B,GAAQj+C,EAAKk+C,KAAKC,WAAWrgD,MAAM6B,SAASs+C,MAC9Cp4B,KACAu4B,EAAgB,EACpBH,GAAMv3C,IAAI,SAAC23C,GAC2B,eAAhCA,EAAKh4C,KAAKid,IAAI,eAAoD,eAAlB86B,EAClDv4B,EAAKrf,KAAK63C,EAAKz/C,KAC0B,iBAAhCy/C,EAAKh4C,KAAKid,IAAI,eAAsD,iBAAlB86B,EAC3Dv4B,EAAKrf,KAAK63C,EAAKz/C,KAC0B,kBAAhCy/C,EAAKh4C,KAAKid,IAAI,eAAuD,kBAAlB86B,GAC5Dv4B,EAAKrf,KAAK63C,EAAKz/C,KAEjBw/C,EAAgBC,EAAKh4C,KAAKid,IAAI,gBAEhCtjB,EAAKi6C,UACHqE,aAAcz4B,KAlOC7lB,EAsOnBu+C,oBAAsB,SAACC,GACrB,GAAsC,GAAlCx+C,EAAK49C,MAAMU,aAAa5/C,OAA5B,CACe,OAAX8/C,EAAmBx+C,EAAKy+C,cAAwBz+C,EAAKy+C,cACrDz+C,EAAKy+C,YAAcz+C,EAAK49C,MAAMU,aAAa5/C,OAAS,IACtDsB,EAAKy+C,YAAc,GAEjBz+C,EAAKy+C,YAAc,IACrBz+C,EAAKy+C,YAAcz+C,EAAK49C,MAAMU,aAAa5/C,OAAS,EAMtD,KAJA,GAAMggD,GAAM9G,OACRh5C,EAAMoB,EAAK49C,MAAMU,aAAat+C,EAAKy+C,aACnCE,EAAUD,EAAI/+C,SAASi/C,cAAb,cAAyChgD,EAAzC,OAEiC,IAAxC+/C,EAAQ39C,UAAU6uB,QAAQ,UAAuC,SAApB8uB,EAAQE,SAC1DF,EAAUA,EAAQG,UAEpB,IAAMC,GAAW/+C,EAAKg/C,oBAAoBL,EAASD,EAClCK,IAAYL,EAAI/+C,SAASs/C,MAAQF,GAAYL,EAAI/+C,SAASu/C,gBAEzER,EAAIS,SAAS,EAAGR,EAAQS,WAExBL,EAASM,UAAYV,EAAQS,YA3Pdp/C,EA+PnBg/C,oBAAsB,SAACL,EAAS/G,GAI9B,IAHA,GAAI3sB,GAAS0zB,EAAQG,WACfQ,GAAa,OAAQ,UAAW,UAClCP,UACIA,GACD9zB,EAAO6zB,YADI,CAEhB,GAAMS,GAAQ3H,EAAO4H,iBAAiBv0B,GAC9Bw0B,EAAcF,EAAdE,SACR,IAAIH,EAAUp3B,SAASu3B,GAAY,CACjCV,EAAW9zB,CACX,OAEFA,EAASA,EAAO6zB,WAElB,MAAKC,IACInH,EAAOj4C,SAASs/C,MA9QRj/C,EAmRnB0/C,cAAgB,SAACC,EAAUC,EAAU9O,GACnC,GAAMmN,GAAQj+C,EAAKk+C,KAAKC,WAAWrgD,MAAM6B,SAASs+C,MAC9Cr/C,QAaJ,IAZAq/C,EAAMv3C,IAAI,SAAC23C,GACLA,EAAKh4C,KAAKid,IAAI,cAAgBs8B,GAAYvB,EAAKh4C,KAAKid,IAAI,cAAgBq8B,IAC1E/gD,EAAMy/C,EAAKz/C,OAGK,iBAATA,IACTq/C,EAAMv3C,IAAI,SAAC23C,GACLA,EAAKwB,KAAKhwB,QAAQihB,GAAS,IAC7BlyC,EAAMy/C,EAAKz/C,OAIG,iBAATA,GAAmB,CAG5B,IAFA,GAAM8/C,GAAM9G,OACR+G,EAAUD,EAAI/+C,SAASi/C,cAAb,cAAyChgD,EAAzC,MACa,SAApB+/C,EAAQE,SACbF,EAAUA,EAAQG,UAEpB,IAAMC,GAAW/+C,EAAKg/C,oBAAoBL,EAASD,EAClCK,IAAYL,EAAI/+C,SAASs/C,MAAQF,GAAYL,EAAI/+C,SAASu/C,gBAEzER,EAAIS,SAAS,EAAGR,EAAQS,WAExBL,EAASM,UAAYV,EAAQS,YA7ShBp/C,EAkTnB8/C,eAAiB,WACf,MACE9gD,GAAAlC,QAAAqD,cAAA,WACGH,EAAK49C,MAAMzD,WACVn7C,EAAAlC,QAAAqD,cAACs4C,EAAA37C,SACCijD,mBAAoB//C,EAAK49C,MAAMhD,aAC/BoF,mBAAoBhgD,EAAK49C,MAAM/C,mBAC/BoF,IAAI,eAENjhD,EAAAlC,QAAAqD,cAACs4C,EAAA37C,SACCijD,mBAAoB//C,EAAK49C,MAAMhD,aAC/BoF,mBAAoBhgD,EAAK49C,MAAMhD,aAC/BqF,IAAI,eAGRjhD,EAAAlC,QAAAqD,cAAA,KAAGa,UAAU,uCAAuCi/C,IAAI,aAAaC,YAAalgD,EAAKs9C,eAjU1Et9C,EAsUnBmgD,cAAgB,WACd9F,aAAW+F,mBAAmBC,WAAS5F,KAAK,SAACC,GAC3C16C,EAAKi6C,UACHqG,UAAW5F,EAAIr0C,KAAKi6C,eAzUPtgD,EA8UnBugD,iBAAmB,WACjB,IAAKvgD,EAAK49C,MAAMzD,WAAY,CAC1B,GAAIgC,IACJn0B,YAAW,WACTm0B,EAAKC,mBACJ,KAELp8C,EAAKi6C,UACHE,YAAan6C,EAAK49C,MAAMzD,cAtVTn6C,EA0VnBwgD,cAAgB,WACdxgD,EAAKi6C,UACHwG,aAAczgD,EAAK49C,MAAM6C,eA5VVzgD,EAgWnB0gD,wBAA0B,WACpB1gD,EAAK49C,MAAM+C,oBACb3gD,EAAKmgD,gBAEPngD,EAAKi6C,UACH0G,oBAAqB3gD,EAAK49C,MAAM+C,sBArWjB3gD,EAyWnB4gD,eAAiB,WACf,MACE5hD,GAAAlC,QAAAqD,cAAA,OAAKa,UAAW,uBACdhC,EAAAlC,QAAAqD,cAAA,SAAOa,UAAU,gBAAgB6sC,GAAG,eAClC7uC,EAAAlC,QAAAqD,cAAA,SAAOshB,KAAK,WAAWo/B,QAAS7gD,EAAK49C,MAAMzD,YAAc,UACvDpe,KAAK,SAAS/6B,UAAU,sBACxB8/C,SAAU9gD,EAAKugD,mBACjBvhD,EAAAlC,QAAAqD,cAAA,QAAMa,UAAU,6BAElBhC,EAAAlC,QAAAqD,cAAC+3C,EAAA6I,SAAQC,UAAU,SAASC,OAAQjhD,EAAK49C,MAAM6C,YAC7CliD,OAAO,cAAc2iD,OAAQlhD,EAAKwgD,gBACjC,EAAApI,EAAA+I,SAAQ,gBApXEnhD,EAyXnBohD,eAAiB,WACf/G,aAAWgH,aAAahB,WAAS5F,KAAK,SAAAC,GACpC,GAAM4G,GAAiBhF,WAAW,OAAS/B,cAAc,QAAUgH,QAAMC,WAAW9G,EAAIr0C,KAAKo7C,oBAC7F7J,QAAOkD,SAAS4G,KAAOJ,KA5XRthD,EAgYnB2hD,yBAA2B,WACzBtH,aAAWe,uBAAuBb,cAAaC,gBAAe,EAAG,IAAIC,KAAK,SAACC,GACzE16C,EAAKi6C,UACHoB,YAAaX,EAAIr0C,KAAKA,KACtBi1C,oBAAqBZ,EAAIr0C,KAAKk1C,cAE5Bb,EAAIr0C,KAAKA,KAAK3H,OAAS,EACzBg9C,UAAMC,KACJtB,aAAWuB,gBAAgBrB,cAAaG,EAAIr0C,KAAKA,KAAK,GAAGm1C,UAAWhB,iBACpEH,aAAWuB,gBAAgBrB,cAAaG,EAAIr0C,KAAKA,KAAK,GAAGm1C,UAAWhB,mBACnEC,KAAKiB,UAAMnW,OAAO,SAACsW,EAAMC,GAC1BJ,UAAMC,KAAKtB,aAAWM,eAAekB,EAAKx1C,MAAOg0C,aAAWM,eAAemB,EAAKz1C,QAAQo0C,KAAKiB,UAAMnW,OAAO,SAACwW,EAASC,GAClHh8C,EAAKi6C,UACHW,aAAcmB,EAAS11C,KACvBw0C,mBAAoBmB,EAAS31C,aAKnCg0C,aAAWuB,gBAAgBrB,cAAaG,EAAIr0C,KAAKA,KAAK,GAAGm1C,UAAWhB,iBAAeC,KAAK,SAACC,GACvFL,aAAWM,eAAeD,EAAIr0C,MAAMo0C,KAAK,SAACmH,GACxC5hD,EAAKi6C,UACHW,aAAcgH,EAAQv7C,KACtBw0C,mBAAoB,YAvZb76C,EA+ZnBi8C,qBAAuB,SAAC4F,EAAYC,GAClC9hD,EAAKi6C,UACHW,aAAciH,EACdhH,mBAAoBiH,EACpB5H,WAAW,KAnaIl6C,EAuanB88C,OAAS,SAACiF,GACR,GAAIlF,GAAM,GAAIjD,GAAIhC,OAAOkD,SAAS4G,KAClC7E,GAAI11C,IAAI,OAAQ46C,GAChBnK,OAAOkD,SAAS4G,KAAO7E,EAAIzpB,YA1aVpzB,EA6anBgiD,aAAe,SAACC,GACVjiD,EAAK49C,MAAMzC,YAAc8G,IACf,YAARA,GAAqBrK,OAAOkD,SAAS73B,MACvCjjB,EAAK88C,OAAO,KAEH,cAAPmF,EACFjiD,EAAK85C,iBAES,WAAPmI,GACPjiD,EAAK2hD,2BAEP3hD,EAAKi6C,UACHkB,UAAW8G,MAzbEjiD,EA8bnBkiD,YAAc,SAACC,GACb,OAAOA,GACL,IAAK,OACH,MACEnjD,GAAAlC,QAAAqD,cAAC+3C,EAAAkK,SAAQphD,UAAU,YACjBhC,EAAAlC,QAAAqD,cAAC+3C,EAAAmK,SACCrhD,WAAW,EAAAq4C,EAAAv8C,UAAawlD,OAAiC,eAAzBtiD,EAAK49C,MAAMzC,YAC3CoH,QAAS,WAAQviD,EAAKgiD,aAAa,gBAEnChjD,EAAAlC,QAAAqD,cAAA,KAAGa,UAAU,wBAIrB,KAAK,WACH,MACEhC,GAAAlC,QAAAqD,cAAC+3C,EAAAkK,SAAQphD,UAAU,YACjBhC,EAAAlC,QAAAqD,cAAC+3C,EAAAmK,SACCrhD,WAAW,EAAAq4C,EAAAv8C,UAAawlD,OAAiC,aAAzBtiD,EAAK49C,MAAMzC,YAC3CoH,QAAS,WAAOviD,EAAKgiD,aAAa,cAElChjD,EAAAlC,QAAAqD,cAAA,KAAGa,UAAU,mBACZhB,EAAK49C,MAAMP,eAAiB,GAAKr+C,EAAAlC,QAAAqD,cAAA,OAAKa,UAAU,mBAAmBhB,EAAK49C,MAAMP,iBAIvF,KAAK,UACH,MACEr+C,GAAAlC,QAAAqD,cAAC+3C,EAAAkK,SAAQphD,UAAU,YACjBhC,EAAAlC,QAAAqD,cAAC+3C,EAAAmK,SACCrhD,WAAW,EAAAq4C,EAAAv8C,UAAawlD,OAAiC,YAAzBtiD,EAAK49C,MAAMzC,YAC3CoH,QAAS,WAAQviD,EAAKgiD,aAAa,aAEnChjD,EAAAlC,QAAAqD,cAAA,KAAGa,UAAU,uBA9dNhB,EAsenBwiD,eAAiB,SAACzkC,GAChB,GAAM0kC,GAAkB7K,OAAO8K,cAC/B,KAAKD,EAAgBE,WAEnB,YADA3iD,EAAKs1C,MAAQ,KAGf,KAAoC,IAAhCmN,EAAgBG,YAAuB,CACzC,GAAMC,GAAcJ,EAAgBK,WAAW,GACzCC,EAAYN,EAAgBM,SAClC,IAA2B,MAAtBA,EAAUlE,SACa,IAAvBkE,EAAUzlC,UAAsD,kBAApCylC,EAAUC,aAAa,SAA+B,CAErF,GAAIC,GAAWJ,EAAYK,gBACvBC,EAAYF,EAASG,WAAWA,UACpC,KAAKD,EACH,MAEF,IAAIE,GAAiB1jD,SAASw6B,aAC9BkpB,GAAeC,eAAeH,GAC9BE,EAAeE,YAAYJ,GAC3BnjD,EAAKs1C,OAAS,EAAA6D,EAAAqK,WAAUH,EAAgBrjD,EAAKk+C,KAAKC,gBAGlDn+C,GAAKs1C,OAAQ,EAAA6D,EAAAqK,WAAUX,EAAa7iD,EAAKk+C,KAAKC,WAEhD,KAAKn+C,EAAKs1C,MACR,MAEF,IAAImO,GAAOZ,EAAYa,uBAEnBC,WAAUC,UAAU/zB,QAAQ,UAAY,GAAK8zB,UAAUC,UAAU/zB,QAAQ,UAAY,GACnFgzB,EAAYgB,WAAyB,GAAZJ,EAAKK,KAA2B,GAAfL,EAAKM,SAClB,GAA3BlB,EAAYmB,YACdnB,EAAYoB,OAAOpB,EAAYqB,aAAc,GAE7CrB,EAAYsB,SAAStB,EAAYuB,eAAgBvB,EAAYmB,YAAc,GAE7EP,EAAOZ,EAAYa,wBACH,GAAZD,EAAKK,KAA2B,GAAfL,EAAKM,QACpBlB,EAAYwB,iBAAiB3lD,SAC/B+kD,EAAOZ,EAAYwB,iBAAiB,IAKhCrkD,GAAKk+C,KAAKoG,WAAW/E,MAC3BuE,IAASL,EAAKK,IAAM,IAAM9jD,EAAKk+C,KAAKqG,YAAYlF,UAAtD,SAEG,CACSr/C,EAAKk+C,KAAKoG,WAAW/E,MAC3BuE,IAAM,YAxhBG9jD,EA4hBnBw9C,SAAW,WACT,GAAIlI,GAAQt1C,EAAKs1C,KACjB,IAAKA,EAAL,CAGAt1C,EAAK8wC,MAAQ,EALE,IAMPnxC,GAAaK,EAAKk+C,KAAKC,WAAWrgD,MAAlC6B,SANO6kD,EAOSlP,EAAlBmP,EAPSD,EAOTC,OAAQC,EAPCF,EAODE,MACRC,EAAahlD,EAASilD,QAAQH,EAAO7lD,KACrCimD,EAAYllD,EAASilD,QAAQF,EAAM9lD,KACnCkmD,EAAenlD,EAASolD,iBAAiBN,EAAO7lD,KAChDomD,EAAcrlD,EAASolD,iBAAiBL,EAAM9lD,IAIpD,IAAIkmD,GAAgBL,EAAO5hD,QAAU8hD,EAAW9E,KAAKnhD,OAAQ,CAC3D,GAAMumD,GAAQtlD,EAASulD,gBAAgBT,EAAO7lD,KACxCumD,EAAWF,EAAMG,YAAYX,EAAO7lD,IACtCumD,KACF7P,EAAQA,EAAM+P,aAAaF,EAASvmD,IAAK,IAG7C,GAAIomD,GAAeN,EAAM7hD,QAAUgiD,EAAUhF,KAAKnhD,OAAQ,CACxD,GAAMumD,GAAQtlD,EAASulD,gBAAgBR,EAAM9lD,KACvCumD,EAAWF,EAAMG,YAAYV,EAAM9lD,IACrCumD,KACF7P,EAAQA,EAAMgQ,YAAYH,EAASvmD,IAAK,IAG5C,GAAIqkD,GAAWtjD,EAAS4lD,mBAAmBjQ,GACvC2I,EAAQj+C,EAAKwlD,eAAevC,EAAShF,OACrCwH,EAAcC,WAAS9nD,QACzBqgD,MAAOA,IAELvvB,EAAWi3B,QAAM/nD,QACnB+B,SAAU8lD,GAEZzlD,GAAK8wC,OAAQ,EAAA4H,EAAAkN,WAAUl3B,EAAS+oB,SAChC,IAAIoO,GAAYlmD,EAASmmD,gBAAgBxQ,GAAOmP,OAAOj7B,KAAK+J,MAAM,EAAG,GACjE8qB,EAAO1+C,EAASilD,QAAQiB,EAC5B7lD,GAAK2/C,SAAWtB,EAAKh4C,KAAKid,IAAI,aAC9BtjB,EAAK4/C,SAAWvB,EAAKh4C,KAAKid,IAAI,eArkBbtjB,EAwkBnBwlD,eAAiB,SAACO,GAChB,GAAIC,KAqBJ,OApBAD,GAASr/C,IAAI,SAAC23C,GACZ,GAAMwB,GAAOxB,EAAKwB,KAAKhU,OACjBoa,EAAa5H,EAAKJ,KACxB,IAAK4B,EAGL,GAAKoG,GAAkC,IAApBA,EAAWt/C,OAAiBs/C,EAC7CD,EAASx/C,KAAK63C,OAEX,IAAI4H,EAAWt/C,KAAO,EAAG,CAC5B,GAAIs3C,GAAQj+C,EAAKwlD,eAAeS,GAC5BC,EAAUC,QAAMvoD,QAClBqgD,MAAOA,EACP53C,KAAMg4C,EAAKh4C,KACXzH,IAAKy/C,EAAKz/C,IACV6iB,KAAM48B,EAAK58B,MAEbukC,GAASx/C,KAAK0/C,MAGXF,GA9lBUhmD,EAimBnBomD,gBAAkB,WACZpmD,EAAK49C,MAAMyI,YACbrmD,EAAKi6C,UACHoM,YAAY,KApmBCrmD,EAymBnBsmD,kBAAoB,WAClBtmD,EAAKi6C,UACHoM,YAAY,KA3mBGrmD,EA+mBnBumD,kBAAoB,SAACxoC,GACnB,GAAIyoC,GAAO,IAAMzoC,EAAE0oC,YAAYC,QAAU1mD,EAAKk+C,KAAKyI,KAAKC,YAAc,GACtE,IAAIJ,EAAO,IAAMA,EAAO,GAItB,MAHAxmD,GAAKi6C,UACHoM,YAAY,IAEP,IAETrmD,GAAKi6C,UACH4M,eAAgBL,KAxnBDxmD,EA2oBnB8mD,iBAAmB,WACjB,OAAO/M,eACL,IAAK,OACH,IAAKC,kBACH,MAGF,KAAKI,mBACH,MAGF,OAAOp6C,GAAK4gD,gBACd,KAAK,YACH,IAAKxG,mBACH,MAGF,OAAOp6C,GAAK4gD,mBA5pBC5gD,EAgqBnB+mD,eAAiB,WACf,OAAQhN,eACN,IAAK,OACH,MAAKC,mBASHh7C,EAAAlC,QAAAqD,cAAC+3C,EAAA8O,KAAIC,MAAA,EAAKjmD,UAAU,yBACjBhB,EAAKkiD,YAAY,QACjBliD,EAAKkiD,YAAY,YACjBliD,EAAKkiD,YAAY,YAVlBljD,EAAAlC,QAAAqD,cAAC+3C,EAAA8O,KAAIC,MAAA,EAAKjmD,UAAU,yBACnBhB,EAAKkiD,YAAY,QAYxB,KAAK,YACH,MAAK9H,oBAQHp7C,EAAAlC,QAAAqD,cAAC+3C,EAAA8O,KAAIC,MAAA,EAAKjmD,UAAU,yBACjBhB,EAAKkiD,YAAY,QACjBliD,EAAKkiD,YAAY,aARlBljD,EAAAlC,QAAAqD,cAAC+3C,EAAA8O,KAAIC,MAAA,EAAKjmD,UAAU,yBACjBhB,EAAKkiD,YAAY,WAtrBXliD,EAmsBnBknD,cAAgB,WACd,OAAOnN,eACL,IAAK,OACH,MAAKC,mBAGEh6C,EAAK8/C,iBAFH9gD,EAAAlC,QAAAqD,cAAA,KAAGa,UAAU,UAAS,EAAAo3C,EAAA+I,SAAQ,2BAGzC,KAAK,YACH,MAAK/G,oBAGEp6C,EAAK8/C,iBAFH9gD,EAAAlC,QAAAqD,cAAA,KAAGa,UAAU,UAAS,EAAAo3C,EAAA+I,SAAQ,sCA1sB3CnhD,EAAK49C,OACHhD,aAAc,GACdC,mBAAoB,GACpBX,WAAW,EACXC,YAAY,EACZsG,aAAa,EACbtF,UAAW,aACXkC,eAAgB,KAChBiB,gBACAP,eAAgB,GAChBN,qBAAqB,EACrBN,mBAAoB,EACpB1B,WAAY,KACZJ,eACAsF,oBAAoB,EACpBL,aACA+F,YAAY,EACZQ,eAAgB,IAElB7mD,EAAK8wC,MAAQ,GACb9wC,EAAK2/C,SAAW,KAChB3/C,EAAK4/C,SAAW,KAChB5/C,EAAKy+C,aAAe,EACpBz+C,EAAKs1C,MAAQ,KAzBIt1C,ENqyhBs+Q,MANn3KzC,GAAUs8C,EAAM/5C,GAMwWzB,EAAaw7C,IAAQj7C,IAAI,qBAAqBd,MAAM,WMxqgBhjHiC,KAAKi9C,oBACLj9C,KAAKogD,gBACLpgD,KAAK89C,uBNsqgBopHj/C,IAAI,oBAAoBd,MAAM,WMlqgBvrHiC,KAAK+5C,iBACLn6C,SAASwnD,iBAAiB,kBAAmBpnD,KAAKyiD,mBNiqgB6vH5jD,IAAI,uBAAuBd,MAAM,WM7pgBh1H6B,SAASynD,oBAAoB,kBAAmBrnD,KAAKyiD,mBN6pgBm4H5jD,IAAI,SAASd,MAAM,WMllgB38H,GAAMupD,GAAetnD,KAAK69C,MAAMyI,WAAatmD,KAAKwmD,kBAAoB,KAChEe,EAAYhL,WAAW,OAAS/B,cAAc,QAAUC,gBAAgB,YAC9E,OACEx7C,GAAAlC,QAAAqD,cAAA,OAAKa,UAAU,WACbhC,EAAAlC,QAAAqD,cAAA,OAAK0tC,GAAG,SAAS7sC,UAAU,iBACzBhC,EAAAlC,QAAAqD,cAAA,OAAKa,UAAU,iBACbhC,EAAAlC,QAAAqD,cAAA,OAAKa,UAAU,0BACbhC,EAAAlC,QAAAqD,cAAA,QAAMa,UAAU,qBAElBhC,EAAAlC,QAAAqD,cAAA,OAAKa,UAAU,uBACXhC,EAAAlC,QAAAqD,cAACnB,EAAAlC,QAAMyqD,SAAP,KACEvoD,EAAAlC,QAAAqD,cAAA,QAAMa,UAAU,aAAawmD,iBAC5BxN,mBACCh7C,EAAAlC,QAAAqD,cAAA,KAAGuhD,KAAM4F,EAAWtmD,UAAU,eAAc,EAAAo3C,EAAA+I,SAAQ,kBAK9DniD,EAAAlC,QAAAqD,cAAA,OAAKa,UAAU,gBACZjB,KAAK+mD,mBACL9M,mBACCh7C,EAAAlC,QAAAqD,cAAA,UACEa,UAAU,qCACVymD,OAAO,EAAArP,EAAA+I,SAAQ,iBACfoB,QAASxiD,KAAKqhD,iBAEb,EAAAhJ,EAAA+I,SAAQ,YAGG,aAAfpH,eACC/6C,EAAAlC,QAAAqD,cAAA,UACEa,UAAU,qCACVymD,OAAO,EAAArP,EAAA+I,SAAQ,aACfuG,UAAA,IAEC,EAAAtP,EAAA+I,SAAQ,gBAKjBniD,EAAAlC,QAAAqD,cAAA,OAAK0tC,GAAG,OAAO7sC,UAAU,OAAOi/C,IAAI,QAClCjhD,EAAAlC,QAAAqD,cAAA,OAAKa,UAAU,qBAAqB2mD,YAAaN,EAAcO,UAAW7nD,KAAKqmD,iBAC7EpnD,EAAAlC,QAAAqD,cAAA,OAAKa,UAAU,mBAAmBi/C,IAAI,cAAcV,OAAQsI,MAAO,IAAM9nD,KAAK69C,MAAMiJ,eAAkB,MACnG9mD,KAAK69C,MAAM1D,UACVl7C,EAAAlC,QAAAqD,cAAA,OAAKa,UAAU,0CACbhC,EAAAlC,QAAAqD,cAACy4C,EAAA97C,QAAD,OAGFkC,EAAAlC,QAAAqD,cAAA,OAAKa,UAAU,0CACZjB,KAAKmnD,kBAIZloD,EAAAlC,QAAAqD,cAAA,OAAKa,UAAU,sBAAsBu+C,OAAQsI,MAAO9nD,KAAK69C,MAAMiJ,eAAkB,MAC/E7nD,EAAAlC,QAAAqD,cAAA,OAAKa,UAAU,yBAAyBk/C,YAAangD,KAAKumD,oBAC1DtnD,EAAAlC,QAAAqD,cAAA,OAAKa,UAAU,qBACZjB,KAAKgnD,iBACN/nD,EAAAlC,QAAAqD,cAAC+3C,EAAA4P,YAAW3M,UAAWp7C,KAAK69C,MAAMzC,WAChCn8C,EAAAlC,QAAAqD,cAAC+3C,EAAA6P,SAAQC,MAAM,cACbhpD,EAAAlC,QAAAqD,cAAA,OAAKa,UAAU,0BACbhC,EAAAlC,QAAAqD,cAAC8nD,GACC3H,UAAWvgD,KAAK69C,MAAM0C,UACtBI,wBAAyB3gD,KAAK2gD,0BAChC1hD,EAAAlC,QAAAqD,cAAC+nD,EAAD,MACClO,mBACCh7C,EAAAlC,QAAAqD,cAACgoD,GAAmBhiC,OAAQpmB,KAAK69C,MAAMT,sBAEb,IAA1Bp9C,KAAK69C,MAAMzD,YAAuBp6C,KAAK69C,MAAMU,aAAa5/C,OAAS,GACrEM,EAAAlC,QAAAqD,cAACioD,GACCC,cAAetoD,KAAK69C,MAAMU,aAAa5/C,OACvC6/C,oBAAqBx+C,KAAKw+C,sBAE5Bv/C,EAAAlC,QAAAqD,cAACmoD,GAAgBvK,eAAgBh+C,KAAK69C,MAAMG,iBAC3C/D,mBACCh7C,EAAAlC,QAAAqD,cAAA,KAAGuhD,KAAM4F,GAAWtoD,EAAAlC,QAAAqD,cAAC+3C,EAAAqQ,QAAOC,MAAM,cAAa,EAAApQ,EAAA+I,SAAQ,kBAI7DniD,EAAAlC,QAAAqD,cAAC+3C,EAAA6P,SAAQC,MAAM,WAAWhnD,UAAU,YAClChC,EAAAlC,QAAAqD,cAAC24C,EAAAh8C,SACC4iD,cAAe3/C,KAAK2/C,cACpB1C,kBAAmBj9C,KAAKi9C,kBACxBK,eAAgBt9C,KAAK69C,MAAMP,eAC3BgJ,YAAY,KAGhBrnD,EAAAlC,QAAAqD,cAAC+3C,EAAA6P,SAAQC,MAAM,UAAUhnD,UAAU,WACjChC,EAAAlC,QAAAqD,cAACo5C,EAAAz8C,SACC2+C,WAAY17C,KAAK69C,MAAMnC,WACvBJ,YAAat7C,KAAK69C,MAAMvC,YACxBC,oBAAqBv7C,KAAK69C,MAAMtC,oBAChCoB,mBAAoB38C,KAAK28C,mBACzBK,oBAAqBh9C,KAAKg9C,4BAQtCh9C,KAAK69C,MAAM+C,oBACX3hD,EAAAlC,QAAAqD,cAACu5C,EAAA58C,QAAD,KACEkC,EAAAlC,QAAAqD,cAAC+4C,EAAAp8C,SACC6jD,mBAAoB5gD,KAAK69C,MAAM+C,mBAC/BD,wBAAyB3gD,KAAK2gD,wBAC9BL,QAASA,UACTC,UAAWvgD,KAAK69C,MAAM0C,aAI3BvgD,KAAK69C,MAAMH,qBACVz+C,EAAAlC,QAAAqD,cAACu5C,EAAA58C,QAAD,KACEkC,EAAAlC,QAAAqD,cAAC64C,EAAAl8C,SACC6gD,oBAAqB59C,KAAK49C,oBAC1BD,eAAgB39C,KAAK29C,eACrB5M,MAAO/wC,KAAK+wC,MACZuP,QAASA,UACTV,SAAU5/C,KAAK4/C,SACfC,SAAU7/C,KAAK6/C,iBN49fq+Q/F,GMtyhB9+Qr5C,UAAMC,WAo1BpBwnD,ENk9fsjR,SAASQ,GMh9fnkR,QAAAR,GAAYzpD,GAAO,MAAAzB,GAAAgD,KAAAkoD,GAAA9qD,EAAA4C,MAAAkoD,EAAA9pD,WAAAR,OAAAsC,eAAAgoD,IAAA5qD,KAAA0C,KACXvB,IN+8f4sT,MAA9nCjB,GAAU0qD,EAAmBQ,GAAmOpqD,EAAa4pD,IAAqBrpD,IAAI,SAASd,MAAM,WM38fz4R,MACEkB,GAAAlC,QAAAqD,cAAA,OAAKa,UAAU,0BACbhC,EAAAlC,QAAAqD,cAAA,OAAKa,UAAU,6BAA4B,EAAAo3C,EAAA+I,SAAQ,aACjDniD,EAAAlC,QAAAqD,cAAA,KAAGa,UAAU,YAAYuhD,QAASxiD,KAAKvB,MAAMkiD,2BAE7C3gD,KAAKvB,MAAM8hD,UAAU5hD,OAAS,EAC9BqB,KAAKvB,MAAM8hD,UAAU55C,IAAI,SAACgiD,GAAyB,GAAnB7mD,GAAmBi1B,UAAAp4B,OAAA,OAAA2F,KAAAyyB,UAAA,GAAAA,UAAA,GAAX,CAAWA,WAAA,EACjD,OACE93B,GAAAlC,QAAAqD,cAAA,OAAKa,UAAU,gBAAgBpC,IAAKiD,GAClC7C,EAAAlC,QAAAqD,cAAA,OAAKa,UAAU,kCAAkC2nD,IAAKD,EAAKE,WAAYC,IAAI,KAC3E7pD,EAAAlC,QAAAqD,cAAA,QAAMa,UAAU,iBAAiB0nD,EAAKI,cAK5C9pD,EAAAlC,QAAAqD,cAAA,aAAO,EAAAi4C,EAAA+I,SAAQ,0BN47fosT8G,GMl9f5rTznD,UAAMC,WA6BjCsoD,GACJzI,UAAW/gD,UAAUkC,MAAMhC,WAC3BihD,wBAAyBnhD,UAAU8B,KAAK5B,WAG1CwoD,GAAmB5oD,UAAY0pD,CNg7fo7T,IM96f78Tb,GN86fi+T,SAASc,GAAgE,QAASd,KAAwD,MAAtCnrD,GAAgBgD,KAAKmoD,GAAwB/qD,EAA2B4C,MAAMmoD,EAAgB/pD,WAAWR,OAAOsC,eAAeioD,IAAkB9mD,MAAMrB,KAAK+2B,YAA2hB,MAA/vBv5B,GAAU2qD,EAAgBc,GAAuN3qD,EAAa6pD,IAAkBtpD,IAAI,SAASd,MAAM,WM56flyU,MACEkB,GAAAlC,QAAAqD,cAAA,OAAKa,UAAU,0BACbhC,EAAAlC,QAAAqD,cAAA,OAAKa,UAAU,6BAA4B,EAAAo3C,EAAA+I,SAAQ,WACnDniD,EAAAlC,QAAAqD,cAAA,OAAKa,UAAU,eACbhC,EAAAlC,QAAAqD,cAAA,OAAKa,UAAU,kCAAkC2nD,IAAKM,eAAcJ,IAAI,KACxE7pD,EAAAlC,QAAAqD,cAAA,QAAMa,UAAU,eAAekoD,gBNu6fguVhB,GM96f3uV1nD,UAAMC,WAc9B6nD,ENg6fo0V,SAASa,GM95fj1V,QAAAb,GAAY9pD,GAAO,MAAAzB,GAAAgD,KAAAuoD,GAAAnrD,EAAA4C,MAAAuoD,EAAAnqD,WAAAR,OAAAsC,eAAAqoD,IAAAjrD,KAAA0C,KACXvB,IN65fquX,MAAz4BjB,GAAU+qD,EAAgBa,GAAuN9qD,EAAaiqD,IAAkB1pD,IAAI,SAASd,MAAM,WMz5froW,MACEkB,GAAAlC,QAAAqD,cAAA,OAAKa,UAAU,0BACbhC,EAAAlC,QAAAqD,cAAA,SAAOa,UAAU,sBACfhC,EAAAlC,QAAAqD,cAAA,aACEnB,EAAAlC,QAAAqD,cAAA,UAAInB,EAAAlC,QAAAqD,cAAA,MAAI0nD,MAAM,QAAW7oD,EAAAlC,QAAAqD,cAAA,MAAI0nD,MAAM,UAErC7oD,EAAAlC,QAAAqD,cAAA,aACEnB,EAAAlC,QAAAqD,cAAA,UAAInB,EAAAlC,QAAAqD,cAAA,WAAK,EAAAi4C,EAAA+I,SAAQ,aAAiBniD,EAAAlC,QAAAqD,cAAA,UAAKJ,KAAKvB,MAAMu/C,eAAgBvD,yBNk5fwqX8N,GMh6fxtX9nD,UAAMC,WAsB9B2oD,GACJrL,eAAgBx+C,UAAU4D,OAAO1D,WAGnC6oD,GAAgBjpD,UAAY+pD,CNs4f84X,IMn4fp6XjB,GNm4f27X,SAASkB,GMj4fx8X,QAAAlB,GAAY3pD,GAAO,MAAAzB,GAAAgD,KAAAooD,GAAAhrD,EAAA4C,MAAAooD,EAAAhqD,WAAAR,OAAAsC,eAAAkoD,IAAA9qD,KAAA0C,KACXvB,INg4f+oZ,MAA5rBjB,GAAU4qD,EAAmBkB,GAAmOhrD,EAAa8pD,IAAqBvpD,IAAI,SAASd,MAAM,WM53f9wY,MACEkB,GAAAlC,QAAAqD,cAAA,OAAKa,UAAU,0BACbhC,EAAAlC,QAAAqD,cAAA,OAAKa,UAAU,6BAA4B,EAAAo3C,EAAA+I,SAAQ,aACnDniD,EAAAlC,QAAAqD,cAAA,OAAKa,UAAU,gBACbhC,EAAAlC,QAAAqD,cAAA,aAAO,EAAAi4C,EAAA+I,SAAQ,wBAAyB,IAAKphD,KAAKvB,MAAM2nB,cNw3f8lZgiC,GMn4f/nZ3nD,UAAMC,WAkBjC6oD,GACJnjC,OAAQ5mB,UAAU4mB,OAAO1mB,WAG3B0oD,GAAmB9oD,UAAYiqD,CN62fyzZ,IM12fl1ZlB,GN02fu2Z,SAASmB,GMx2fp3Z,QAAAnB,GAAY5pD,GAAO,MAAAzB,GAAAgD,KAAAqoD,GAAAjrD,EAAA4C,MAAAqoD,EAAAjqD,WAAAR,OAAAsC,eAAAmoD,IAAA/qD,KAAA0C,KACXvB,INu2fm6b,MAApiCjB,GAAU6qD,EAAiBmB,GAA2NlrD,EAAa+pD,IAAmBxpD,IAAI,SAASd,MAAM,WMp2fvqa,GAAA0rD,GAAAzpD,IACP,OACEf,GAAAlC,QAAAqD,cAAA,OAAKa,UAAU,0BACbhC,EAAAlC,QAAAqD,cAAA,OAAKa,UAAU,6BAA4B,EAAAo3C,EAAA+I,SAAQ,YACnDniD,EAAAlC,QAAAqD,cAAA,OAAKa,UAAU,gBACbhC,EAAAlC,QAAAqD,cAAA,aAAO,EAAAi4C,EAAA+I,SAAQ,sBAAuB,IAAKphD,KAAKvB,MAAM6pD,eACpDtoD,KAAKvB,MAAM6pD,cAAgB,GAC3BrpD,EAAAlC,QAAAqD,cAAA,WACEnB,EAAAlC,QAAAqD,cAAA,KAAGa,UAAU,wBAAwBuhD,QAAS,WAAQiH,EAAKhrD,MAAM+/C,oBAAoB,WACrFv/C,EAAAlC,QAAAqD,cAAA,KAAGa,UAAU,0BAA0BuhD,QAAS,WAAQiH,EAAKhrD,MAAM+/C,oBAAoB,gBN21f+0b6J,GM12fr5b5nD,UAAMC,WAwB/BgpD,GACJpB,cAAe9oD,UAAU4mB,OAAO1mB,WAChC8+C,oBAAqBh/C,UAAU8B,KAAK5B,WAGtC2oD,GAAiB/oD,UAAYoqD,EAG7BnpD,UAASopD,OACP1qD,EAAAlC,QAAAqD,cAAC05C,EAAD,MACAl6C,SAASC,eAAe,aN40fpB+pD,KACA,SAAUntD,EAAQC,EAASC,GAEjC,YACioC,SAASC,GAAuBC,GAAK,MAAOA,IAAKA,EAAIC,WAAWD,GAAKE,QAAQF,GAAM,QAASG,GAAgBC,EAASC,GAAa,KAAKD,YAAoBC,IAAc,KAAM,IAAIC,WAAU,qCAAuC,QAASC,GAA2BC,EAAKC,GAAM,IAAID,EAAM,KAAM,IAAIE,gBAAe,4DAA8D,QAAOD,GAAqB,iBAAPA,IAA+B,mBAAPA,GAAwBD,EAALC,EAAW,QAASE,GAAUC,EAASC,GAAY,GAAuB,mBAAbA,IAAsC,OAAbA,EAAmB,KAAM,IAAIP,WAAU,iEAAkEO,GAAaD,GAASE,UAAUC,OAAOC,OAAOH,GAAYA,EAAWC,WAAWG,aAAaC,MAAMN,EAASO,YAAW,EAAMC,UAAS,EAAKC,cAAa,KAAWR,IAAWE,OAAOO,eAAeP,OAAOO,eAAeV,EAASC,GAAYD,EAASW,UAAUV,GAAt/DE,OAAOS,eAAe3B,EAAQ,cAAcqB,OAAM,GAAO,IAAIO,GAAa,WAAW,QAASC,GAAiBC,EAAOC,GAAO,IAAI,GAAIC,GAAE,EAAEA,EAAED,EAAME,OAAOD,IAAI,CAAC,GAAIE,GAAWH,EAAMC,EAAGE,GAAWZ,WAAWY,EAAWZ,aAAY,EAAMY,EAAWV,cAAa,EAAQ,SAAUU,KAAWA,EAAWX,UAAS,GAAKL,OAAOS,eAAeG,EAAOI,EAAWC,IAAID,IAAc,MAAO,UAAS1B,EAAY4B,EAAWC,GAAuI,MAAvHD,IAAWP,EAAiBrB,EAAYS,UAAUmB,GAAeC,GAAYR,EAAiBrB,EAAY6B,GAAoB7B,MOl1hBriB8B,EAAArC,EAAA,GPk1hB6lBsC,EAAQrC,EAAuBoC,GOj1hB5nBI,EAAAzC,EAAA,GPi1hB8qB0C,EAAYzC,EAAuBwC,GOh1hBjtByqD,EAAAltD,EAAA,KACAw7C,EAAAx7C,EAAA,GACA27C,EAAA37C,EAAA,GACA07C,EAAA17C,EAAA,GACAi8C,EAAAj8C,EAAA,IP40hB66Bk8C,EAAUj8C,EAAuBg8C,GO30hB98BkR,EAAAntD,EAAA,MP20hBygCotD,EAAgBntD,EAAuBktD,GO10hBhjCE,EAAArtD,EAAA,EAEAA,GAAA,KAEA,IAAMstD,IACJhN,kBAAmBz9C,UAAU8B,KAAK5B,WAClC4mD,WAAY9mD,UAAU0qD,KAAKxqD,WAC3B49C,eAAgB99C,UAAU4mB,OAC1Bu5B,cAAengD,UAAU8B,KAAK5B,YAG1ByqD,EP+zhBuuE,SAASpqD,GO7zhBpvE,QAAAoqD,GAAY1rD,GAAOzB,EAAAgD,KAAAmqD,EAAA,IAAAlqD,GAAA7C,EAAA4C,MAAAmqD,EAAA/rD,WAAAR,OAAAsC,eAAAiqD,IAAA7sD,KAAA0C,KACXvB,GADW,OAAAwB,GAWnBi9C,aAAe,SAACuB,GACdnE,aAAW4C,aAAa1C,cAAaC,iBAAeC,KAAK,SAAC0P,GACxD,GAAIC,KAQJ,IAPAD,EAAS9jD,KAAK62C,SAASt2C,QAAQ,SAAA8hD,GAC7B,GAAI2B,GAAc,GAAIC,WAAc5B,EACpC0B,GAAY5jD,KAAK6jD,KAEnBrqD,EAAKi6C,UACHsQ,aAAcH,IAEZ5L,EAAQ,CACV,GAAIrC,IACJn0B,YAAW,WACTm0B,EAAK+B,KAAKqM,aAAapL,SAAS,EAAG,MAClC,SAzBUn/C,EA8BnBwqD,oBAAsB,SAACC,GACrBzqD,EAAKi6C,UACHyQ,QAASD,EAAMlsD,OAAOT,SAhCPkC,EAoCnB2qD,cAAgB,WACd,GAAID,GAAU1qD,EAAK49C,MAAM8M,QAAQ7e,MAC7B6e,GAAQhsD,OAAS,IACnB27C,aAAWuQ,YAAYrQ,cAAaC,gBAAekQ,GAASjQ,KAAK,SAAC0P,GAChEnqD,EAAKi9C,cAAa,GAClBj9C,EAAKxB,MAAMw+C,sBAEbh9C,EAAKi6C,UACHyQ,QAAS,OA5CI1qD,EAiDnB6qD,eAAiB,SAACJ,GAChBpQ,aAAWyQ,cAAcvQ,cAAakQ,EAAMlsD,OAAOsvC,GAAI,QAAQ4M,KAAK,SAACC,GACnE16C,EAAKxB,MAAMw+C,oBACXh9C,EAAKi9C,kBApDUj9C,EAwDnB+qD,YAAc,SAACC,EAAWC,GACxB5Q,aAAWyQ,cAAcvQ,cAAayQ,EAAW,KAAM,KAAMC,GAAYxQ,KAAK,SAACC,GAC7E16C,EAAKxB,MAAMw+C,oBACXh9C,EAAKi9C,kBA3DUj9C,EA+DnBkrD,sBAAwB,WACtBlrD,EAAKi6C,UACHkR,qBAAsBnrD,EAAK49C,MAAMuN,uBAjElBnrD,EAqEnBorD,cAAgB,SAACX,GACfpQ,aAAW+Q,cAAc7Q,cAAakQ,EAAMlsD,OAAOsvC,IAAI4M,KAAK,SAACC,GAC3D16C,EAAKxB,MAAMw+C,oBACXh9C,EAAKi9C,kBAxEUj9C,EA4EnBomD,gBAAkB,WACZpmD,EAAK49C,MAAMyI,YACbrmD,EAAKi6C,UACHoM,YAAY,KA/ECrmD,EAoFnBsmD,kBAAoB,WAClBtmD,EAAKi6C,UACHoM,YAAY,KAtFGrmD,EA0FnBumD,kBAAoB,SAACkE,GACnB,GAAIjE,GAAO,KAAOiE,EAAMhE,YAAY4E,QAAU,KAAQrrD,EAAKk+C,KAAKwM,QAAQY,aAAe,GACvF,IAAI9E,EAAO,IAAMA,EAAO,GActB,MAbIA,GAAO,IACTxmD,EAAKi6C,UACHsR,oBAAqB,KAGrB/E,EAAO,IACTxmD,EAAKi6C,UACHsR,oBAAqB,KAGzBvrD,EAAKi6C,UACHoM,YAAY,IAEP,IAETrmD,GAAKi6C,UACHsR,oBAAqB/E,KA7GNxmD,EAiHnB0/C,cAAgB,SAACC,EAAUC,EAAU9O,GACnC9wC,EAAKxB,MAAMkhD,cAAcC,EAAUC,EAAU9O,GAC7C9wC,EAAKi6C,UACHyQ,QAAS,MAlHX1qD,EAAK49C,OACH2M,gBACAlE,YAAY,EACZkF,oBAAqB,GACrBJ,qBAAqB,EACrBT,QAAS,IAPM1qD,EP6zhB+nP,MAA54KzC,GAAU2sD,EAAepqD,GAA49EzB,EAAa6rD,IAAiBtrD,IAAI,qBAAqBd,MAAM,WOpshBtzJiC,KAAKk9C,kBPoshBu2Jr+C,IAAI,4BAA4Bd,MAAM,SOjshB13J0tD,GACpBzrD,KAAKvB,MAAM6+C,iBAAmBmO,EAAUnO,gBAC1Ct9C,KAAKk9C,kBP+rhB2gKr+C,IAAI,SAASd,MAAM,WO3rhB9hK,GAAA2tD,GAAA1rD,KACDsnD,EAAetnD,KAAK69C,MAAMyI,WAAatmD,KAAKwmD,kBAAoB,IACtE,OACEvnD,GAAAlC,QAAAqD,cAAA,OAAKa,UAAYjB,KAAK69C,MAAMyI,YAActmD,KAAKvB,MAAM6nD,WACnD,2CAA6C,kBAC/CsB,YAAaN,EAAcO,UAAW7nD,KAAKqmD,gBAAiBnG,IAAI,WAC9DjhD,EAAAlC,QAAAqD,cAAA,OAAKa,UAAU,yBACbhC,EAAAlC,QAAAqD,cAAA,OAAKa,UAAW,+BAA+B,EAAAo3C,EAAA+I,SAAQ,2BACvDniD,EAAAlC,QAAAqD,cAAA,OAAKa,UAAW,gCACdhC,EAAAlC,QAAAqD,cAAA,SAAOa,UAAU,gBAAgB6sC,GAAG,4BAClC7uC,EAAAlC,QAAAqD,cAAA,SAAOshB,KAAK,WAAWsa,KAAK,SAAS/6B,UAAU,sBAC7C8/C,SAAU/gD,KAAKmrD,sBACfrK,QAAS9gD,KAAK69C,MAAMuN,qBAAuB,YAE7CnsD,EAAAlC,QAAAqD,cAAA,QAAMa,UAAU,+BAItBhC,EAAAlC,QAAAqD,cAAA,OAAKo/C,OAAQwE,OAAQ,IAAIhkD,KAAK69C,MAAM2N,oBAAqB,MACxB,GAA7BxrD,KAAKvB,MAAM6+C,gBACXr+C,EAAAlC,QAAAqD,cAAA,OAAKa,UAAW,wBACdhC,EAAAlC,QAAAqD,cAAA,OAAKa,UAAU,mBAAkB,EAAAo3C,EAAA+I,SAAQ,qBAGP,IAAnCphD,KAAK69C,MAAM2M,aAAa7rD,QAAgBqB,KAAKvB,MAAM6+C,eAAiB,GACrEr+C,EAAAlC,QAAAqD,cAAA,OAAKa,UAAW,wBAAwBhC,EAAAlC,QAAAqD,cAACy4C,EAAA97C,QAAD,OAExCiD,KAAK69C,MAAM2M,aAAa7rD,OAAS,GACjCM,EAAAlC,QAAAqD,cAAA,MAAIa,UAAW,uBAAwBi/C,IAAI,gBACtClgD,KAAK69C,MAAM2M,aAAa7rD,OAAS,GAAKqB,KAAKvB,MAAM6+C,eAAiB,GACnEt9C,KAAK69C,MAAM2M,aAAa7jD,IAAI,SAACgiD,EAAM7mD,GACjC,MACE7C,GAAAlC,QAAAqD,cAACurD,GAAYhD,KAAMA,EAAMyC,oBAAqBM,EAAK7N,MAAMuN,oBACvDN,eAAgBY,EAAKZ,eAAgBjsD,IAAKiD,EAAOkpD,YAAaU,EAAKV,YACnErL,cAAe+L,EAAK/L,cAAe0L,cAAeK,EAAKL,oBAOrEpsD,EAAAlC,QAAAqD,cAAA,OAAKa,UAAU,yBAAyBu+C,OAAQwE,OAAOhkD,KAAK69C,MAAM2N,oBAAoB,MACpFvsD,EAAAlC,QAAAqD,cAAA,OAAKa,UAAU,6BAA6Bk/C,YAAangD,KAAKumD,oBAC9DtnD,EAAAlC,QAAAqD,cAAA,OAAKa,UAAU,uBACbhC,EAAAlC,QAAAqD,cAAA,YAAUa,UAAU,oBAAoBlD,MAAOiC,KAAK69C,MAAM8M,QACxDjlD,aAAa,EAAA2yC,EAAA+I,SAAQ,kBAAmBL,SAAU/gD,KAAKyqD,oBACvDmB,KAAK,MAAMC,KAAK,IAAIC,KAAK,YAC3B7sD,EAAAlC,QAAAqD,cAAC+3C,EAAAqQ,QAAOvnD,UAAU,cAAcwnD,MAAM,UACpC7hD,KAAK,KAAK47C,QAASxiD,KAAK4qD,gBACvB,EAAAvS,EAAA+I,SAAQ,kBP0ohBooP+I,GO/zhB9nP1pD,UAAMC,UA6LnCypD,GAAe7qD,UAAY2qD,CAE3B,IAAM8B,IACJpD,KAAMnpD,UAAUC,OAAOC,WACvB2rD,cAAe7rD,UAAU8B,KAAK5B,WAC9BorD,eAAgBtrD,UAAU8B,KAAK5B,WAC/BsrD,YAAaxrD,UAAU8B,KAAK5B,WAC5B0rD,oBAAqB5rD,UAAU0qD,KAAKxqD,WACpCigD,cAAengD,UAAU8B,KAAK5B,YAG1BisD,EPunhBgkQ,SAASjD,GOrnhB7kQ,QAAAiD,GAAYltD,GAAOzB,EAAAgD,KAAA2rD,EAAA,IAAAK,GAAA5uD,EAAA4C,MAAA2rD,EAAAvtD,WAAAR,OAAAsC,eAAAyrD,IAAAruD,KAAA0C,KACXvB,GADW,OAAAutD,GAWnBC,mBAAqB,WACnBD,EAAK9R,UACHgS,cAAeF,EAAKnO,MAAMqO,gBAbXF,EAiBnBG,eAAiB,SAACxD,GAChByD,YAAUzuC,QAAQgrC,EAAKgC,SAASjQ,KAC9B,SAACr4C,GACC,GAAIsoD,GAAU9lC,OAAOxiB,EACrB2pD,GAAK9R,UACHyQ,QAASA,MAIfyB,YAAUzuC,QAAQgrC,EAAK5X,OAAO2J,KAC5B,SAACr4C,GACC,GAAI0uC,GAAQlsB,OAAOxiB,EACnB2pD,GAAK9R,UACHnJ,MAAOA,OA9BIib,EAoCnBrM,cAAgB,WACd,GAAMgJ,GAAOqD,EAAKvtD,MAAMkqD,IACxBqD,GAAKvtD,MAAMkhD,cAAcgJ,EAAK/I,SAAU+I,EAAK9I,SAAU8I,EAAK5X,QAtC3Cib,EAyCnBK,kBAAoB,WAClBL,EAAK9R,UACHoS,UAAWN,EAAKnO,MAAMyO,YA3CPN,EA+CnBjB,cAAgB,SAACL,GACf,GAAMQ,GAAac,EAAKnO,MAAMqN,UAC1Bc,GAAKvtD,MAAMkqD,KAAKgC,UAAYO,GAC9Bc,EAAKvtD,MAAMusD,YAAYN,EAAMlsD,OAAOsvC,GAAIod,GAE1Cc,EAAKK,qBApDYL,EAuDnBvB,oBAAsB,SAACC,GACrBsB,EAAK9R,UACHgR,WAAYR,EAAMlsD,OAAOT,SAvD3BiuD,EAAKnO,OACHqO,cAAc,EACdvB,QAAS,GACT5Z,MAAO,GACPma,WAAYc,EAAKvtD,MAAMkqD,KAAKgC,QAC5B2B,UAAU,GAPKN,EPqnhBykZ,MAA5/IxuD,GAAUmuD,EAAYjD,GAA+tCpqD,EAAaqtD,IAAc9sD,IAAI,qBAAqBd,MAAM,WOvjhB74SiC,KAAKmsD,eAAensD,KAAKvB,MAAMkqD,SPujhBq7S9pD,IAAI,4BAA4Bd,MAAM,SOpjhBl+S0tD,GACxBzrD,KAAKmsD,eAAeV,EAAU9C,SPmjhBkjT9pD,IAAI,SAASd,MAAM,WO/ihBnmT,GAAM4qD,GAAO3oD,KAAKvB,MAAMkqD,IACxB,OAAIA,GAAKtL,WAAar9C,KAAKvB,MAAM2sD,oBACxB,KAELprD,KAAK69C,MAAMyO,SAEXrtD,EAAAlC,QAAAqD,cAAA,MAAIa,UAAU,uBAAuB6sC,GAAI6a,EAAK7a,IAC5C7uC,EAAAlC,QAAAqD,cAAA,OAAKa,UAAU,wBACbhC,EAAAlC,QAAAqD,cAAA,OAAKa,UAAU,SAAS2nD,IAAKD,EAAK4D,UAAWzD,IAAI,KACjD7pD,EAAAlC,QAAAqD,cAAA,OAAKa,UAAU,iBACbhC,EAAAlC,QAAAqD,cAAA,OAAKa,UAAU,iBAAiB0nD,EAAK3sB,MACrC/8B,EAAAlC,QAAAqD,cAAA,OAAKa,UAAU,eAAe0nD,EAAKjlB,QAGvCzkC,EAAAlC,QAAAqD,cAAA,OAAKa,UAAU,wBACbhC,EAAAlC,QAAAqD,cAAA,YAAUa,UAAU,qBAAqBlD,MAAOiC,KAAK69C,MAAMqN,WAAYnK,SAAU/gD,KAAKyqD,oBAAqBmB,KAAK,MAAMC,KAAK,IAAIC,KAAK,YACpI7sD,EAAAlC,QAAAqD,cAAC+3C,EAAAqQ,QAAOvnD,UAAU,cAAcwnD,MAAM,UAAU7hD,KAAK,KAAK47C,QAASxiD,KAAK+qD,cAAejd,GAAI6a,EAAK7a,KAAK,EAAAuK,EAAA+I,SAAQ,WAAoB,IACjIniD,EAAAlC,QAAAqD,cAAC+3C,EAAAqQ,QAAOvnD,UAAU,cAAcwnD,MAAM,YAAY7hD,KAAK,KAAK47C,QAASxiD,KAAKqsD,mBAA1E,KAA+F,EAAAhU,EAAA+I,SAAQ,aAM7GniD,EAAAlC,QAAAqD,cAAA,MAAIa,UAAW0nD,EAAKtL,SAAW,qDAC3B,uBAAwBvP,GAAI6a,EAAK7a,IACnC7uC,EAAAlC,QAAAqD,cAAA,OAAKa,UAAU,wBACbhC,EAAAlC,QAAAqD,cAAA,OAAKa,UAAU,SAAS2nD,IAAKD,EAAK4D,UAAWzD,IAAI,KACjD7pD,EAAAlC,QAAAqD,cAAA,OAAKa,UAAU,iBACbhC,EAAAlC,QAAAqD,cAAA,OAAKa,UAAU,iBAAiB0nD,EAAK3sB,MACrC/8B,EAAAlC,QAAAqD,cAAA,OAAKa,UAAU,eAAe0nD,EAAKjlB,QAElCilB,EAAKtL,UACNp+C,EAAAlC,QAAAqD,cAAC+3C,EAAAqU,UAAStL,OAAQlhD,KAAK69C,MAAMqO,aAActlD,KAAK,KAC9C3F,UAAU,2BAA2BkgD,OAAQnhD,KAAKisD,oBAClDhtD,EAAAlC,QAAAqD,cAAC+3C,EAAAsU,gBAAexrD,UAAU,gCACxBhC,EAAAlC,QAAAqD,cAAA,KAAGa,UAAU,uBAEfhC,EAAAlC,QAAAqD,cAAC+3C,EAAAuU,aAAD,KACK/D,EAAKgE,YAAcC,YACpB3tD,EAAAlC,QAAAqD,cAAC+3C,EAAA0U,cAAarK,QAASxiD,KAAKvB,MAAM4sD,cAChCpqD,UAAU,iBAAiB6sC,GAAI6a,EAAK7a,KAAK,EAAAuK,EAAA+I,SAAQ,WAClDuH,EAAKgE,YAAcC,YACpB3tD,EAAAlC,QAAAqD,cAAC+3C,EAAA0U,cAAarK,QAASxiD,KAAKqsD,kBAC1BprD,UAAU,eAAe6sC,GAAI6a,EAAK7a,KAAK,EAAAuK,EAAA+I,SAAQ,SACnDniD,EAAAlC,QAAAqD,cAAC+3C,EAAA0U,cAAarK,QAASxiD,KAAKvB,MAAMqsD,eAChC7pD,UAAU,2BAA2B6sC,GAAI6a,EAAK7a,KAAK,EAAAuK,EAAA+I,SAAQ,wBAKlEuH,EAAK/I,WAAa,GAAK+I,EAAK9I,WAAa,GAC1C5gD,EAAAlC,QAAAqD,cAAA,cAAYa,UAAU,2BACpBhC,EAAAlC,QAAAqD,cAAA,OAAKoiD,QAASxiD,KAAK2/C,cAAemN,yBAA2BC,OAAQ/sD,KAAK69C,MAAM9M,UAGpF9xC,EAAAlC,QAAAqD,cAAA,OAAKa,UAAU,0BAA0B6rD,yBAA2BC,OAAQ/sD,KAAK69C,MAAM8M,gBPw/gBsgZgB,GOvnhB3kZlrD,UAAMC,UAqIhCirD,GAAYrsD,UAAYysD,EPk/gBiqZrvD,EAAQK,QOh/gBlrZotD,GPo/gBT6C,KACA,SAAUvwD,EAAQC,EAASC,GAEjC,YQn0hBA,SAAAswD,GAAAC,EAAAC,GACAA,EAAAC,KAAAF,EAAAG,MAAAF,EAAAG,MAGA,QAAAC,GAAAL,EAAAC,EAAA5mD,GAGA,QAAAC,GAAAgnD,EAAAJ,EAAAE,GACAE,EACAjnD,EAAAinD,IAEAL,EAAAC,OACAD,EAAAG,OACA/mD,KARA2mD,EAAAO,IAAAN,EAAAC,KAAAD,EAAAG,KAAA9mD,GAaA,QAAAknD,GAAAR,EAAAC,GACAA,EAAAG,KAAAK,SAAAT,EAAAU,UAAAT,EAAAC,KAAAD,EAAAG,MAIA,QAAAO,KA8BA,QAAAzB,KAKA,IAJA,GAAA0B,GAAAD,IACAlvD,EAAAovD,EAAApvD,OACAmD,GAAA,IAEAA,EAAAnD,GACAmvD,EAAAE,IAAA3sD,MAAA,KAAA0sD,EAAAjsD,GAKA,OAFAgsD,GAAAxnD,KAAAgwC,GAAA,KAAoC2X,IAEpCH,EAYA,QAAAI,KACA,GAAArrD,GACAsrD,EACA3qB,EACA4qB,CAEA,IAAAC,EACA,MAAAjC,EAGA,QAAAkC,EAAAP,EAAApvD,QACAkE,EAAAkrD,EAAAO,GACAH,EAAAtrD,EAAA,GACA2gC,EAAA3gC,EAAA,GACAurD,EAAA,MAEA,IAAA5qB,KAIA,IAAAA,IACA3gC,EAAA,OAAAyB,IAKA,oBAFA8pD,EAAAD,EAAA9sD,MAAA+qD,EAAAvpD,EAAA2wB,MAAA,MAGA+6B,EAAAP,IAAAI,GAOA,OAHAC,IAAA,EACAC,EAAAxjC,IAEAshC,EAKA,QAAA9lD,GAAAzH,EAAAd,GACA,MAAAqF,GAAAvE,GAEA,IAAAk4B,UAAAp4B,QACA6vD,EAAA,OAAAH,GAEAJ,EAAApvD,GAAAd,EAEAquD,GAIAqC,EAAAnxD,KAAA2wD,EAAApvD,IAAAovD,EAAApvD,IAAA,KAIAA,GACA2vD,EAAA,OAAAH,GACAJ,EAAApvD,EACAutD,GAIA6B,EAUA,QAAAD,GAAAjwD,GAyBA,QAAA2wD,GAAArsD,GACAssD,EAAAtsD,EAAAusD,SAEAvsD,EAAAooC,WACAA,EAAA6L,EAAA7L,MAAwCpoC,EAAAooC,WAIxC,QAAA9mB,GAAA5lB,GACA,sBAAAA,GACA8wD,EAAA9wD,OACO,qBAAAA,GAOP,SAAAkpC,OAAA,+BAAAlpC,EAAA,IANA,WAAAA,GACA8wD,EAAAxtD,MAAA,KAAAtD,GAEA2wD,EAAA3wD,IAOA,QAAA4wD,GAAAC,GACA,GAAAjwD,GACAmD,CAEA,WAAA8sD,OAAAtqD,KAAAsqD,OAEO,uBAAAA,IAAA,UAAAA,IAQP,SAAA3nB,OAAA,oCAAA2nB,EAAA,IAJA,KAHAjwD,EAAAiwD,EAAAjwD,OACAmD,GAAA,IAEAA,EAAAnD,GACAglB,EAAAirC,EAAA9sD,KAOA,QAAA+sD,GAAAV,EAAApwD,GACA,GAAAgkB,GAAAswB,EAAA8b,EAEApsC,IACA+sC,EAAA/sC,EAAA,KAAA+sC,EAAA/wD,KACAA,EAAAu4C,EAAAv0B,EAAA,GAAAhkB,IAGAgkB,EAAA,GAAAhkB,GAEAgwD,EAAAtnD,KAAA+sB,EAAAl2B,KAAAy5B,YA1EA,GAAA0T,EAIA,IAFA+jB,EAAA,MAAAH,GAEA,OAAAtwD,OAAAuG,KAAAvG,OAEK,uBAAAA,GACL8wD,EAAAxtD,MAAA,KAAA01B,eACK,qBAAAh5B,GAOL,SAAAkpC,OAAA,+BAAAlpC,EAAA,IANA,WAAAA,GACA4wD,EAAA5wD,GAEA2wD,EAAA3wD,GAUA,MAJA0sC,KACAwjB,EAAAxjB,SAAA6L,EAAA2X,EAAAxjB,aAA0DA,IAG1D2hB,EAyDA,QAAA/Z,GAAA8b,GAKA,IAJA,GAEApsC,GAFApjB,EAAAovD,EAAApvD,OACAmD,GAAA,IAGAA,EAAAnD,GAGA,GAFAojB,EAAAgsC,EAAAjsD,GAEAigB,EAAA,KAAAosC,EACA,MAAApsC,GAQA,QAAAsrC,GAAA0B,GACA,GACAC,GADA1B,EAAA2B,EAAAF,EAOA,OAJAb,KACAc,EAAA5C,EAAA4C,OACAE,EAAA,QAAAF,GAEAG,EAAAH,GACA,GAAAA,GAAAnqC,OAAAyoC,MAAAD,QAGA2B,EAAAnqC,OAAAyoC,MAKA,QAAAG,GAAAnP,EAAAgP,EAAA8B,GAeA,QAAAC,GAAAze,EAAA/N,GAGA,QAAAr8B,GAAAgnD,EAAAJ,EAAAE,GACAF,KAAA9O,EACAkP,EACA3qB,EAAA2qB,GACS5c,EACTA,EAAAwc,GAEAgC,EAAA,KAAAhC,EAAAE,GATAiB,EAAAd,IAAAnP,EAAA2Q,EAAA3B,GAAA9mD,GAPA,GARA8oD,EAAAhR,GACA4P,IAEAkB,GAAA,mBAAA9B,KACA8B,EAAA9B,EACAA,EAAA,OAGA8B,EACA,UAAArf,SAAAsf,EAGAA,GAAA,KAAAD,GAoBA,QAAAG,GAAAjR,EAAAgP,GAUA,QAAA9mD,GAAAgnD,EAAAJ,GACAoC,GAAA,EACAC,EAAAjC,GACAnrD,EAAA+qD,EAZA,GACA/qD,GADAmtD,GAAA,CAOA,OAJA/B,GAAAnP,EAAAgP,EAAA9mD,GAEAkpD,EAAA,gBAAAF,GAEAntD,EAYA,QAAAurD,GAAAtP,EAAAyQ,GACA,GACAY,GADArC,EAAA2B,EAAAF,EAQA,OALAb,KACAyB,EAAAvD,EAAAuD,SACAC,EAAA,YAAAD,GACAL,EAAAhR,GAEA6Q,EAAAQ,GACA,GAAAA,GAAArR,EAAAgP,GAAAuC,UAGAF,EAAArR,EAAAgP,GAQA,QAAA3vC,GAAAoxC,EAAAK,GAWA,QAAAC,GAAAze,EAAA/N,GAKA,QAAAr8B,GAAAgnD,GACAA,EACA3qB,EAAA2qB,GACS5c,EACTA,EAAA0c,GAEA8B,EAAA,KAAA9B,GAVA,GAAAA,GAAA2B,EAAAF,EAEAe,GAAArC,IAAArB,GAA+BkB,QAAW9mD,GAT1C,GAJA0nD,IACAgB,EAAA,UAAA9C,EAAA4C,QACAY,EAAA,UAAAxD,EAAAuD,WAEAP,EACA,UAAArf,SAAAsf,EAGAA,GAAA,KAAAD,GAqBA,QAAAW,GAAAhB,GAeA,QAAAvoD,GAAAgnD,GACAgC,GAAA,EACAC,EAAAjC,GAhBA,GACAF,GADAkC,GAAA,CAYA,OATAtB,KACAgB,EAAA,cAAA9C,EAAA4C,QACAY,EAAA,cAAAxD,EAAAuD,UACArC,EAAA2B,EAAAF,GAEApxC,EAAA2vC,EAAA9mD,GAEAkpD,EAAA,wBAAAF,GAEAlC,EAnWA,GAAAS,MACAQ,EAAAyB,IACA/B,KACAI,GAAA,EACAC,GAAA,CAqBA,OAlBAlC,GAAA9lD,OAGA8lD,EAAA8B,SAGA9B,EAAA2B,YACA3B,EAAA4B,MAGA5B,EAAAiB,QACAjB,EAAAwB,YACAxB,EAAAqB,MACArB,EAAAmD,UACAnD,EAAAzuC,UACAyuC,EAAA2D,cAGA3D,EAoVA,QAAA+C,GAAApxD,GACA,yBAAAA,IAAA+nB,EAAA/nB,EAAAJ,WAIA,QAAAmoB,GAAA/nB,GACA,GAAAc,EACA,KAAAA,IAAAd,GACA,QAEA,UAIA,QAAAmxD,GAAAlzB,EAAAgzB,GACA,sBAAAA,GACA,SAAA/nB,OAAA,WAAAjL,EAAA,sBAKA,QAAA4zB,GAAA5zB,EAAA2zB,GACA,sBAAAA,GACA,SAAA1oB,OAAA,WAAAjL,EAAA,wBAKA,QAAAwyB,GAAAxyB,EAAAqyB,GACA,GAAAA,EACA,SAAApnB,QAEA,kBAAAjL,EAAA,0CACA,iEACA,gBACA7sB,KAAA,KAMA,QAAAmgD,GAAAhR,GACA,IAAAA,IAAAl7C,EAAAk7C,EAAA58B,MACA,SAAAulB,OAAA,uBAAAqX,EAAA,KAKA,QAAAoR,GAAA1zB,EAAAi0B,EAAAT,GACA,IAAAA,EACA,SAAAvoB,OACA,IAAAjL,EAAA,0BAAAi0B,EAAA,aA3cA,GAAA3Z,GAAA35C,EAAA,KACA8yD,EAAA9yD,EAAA,KACAsyD,EAAAtyD,EAAA,MACAqzD,EAAArzD,EAAA,KACAyG,EAAAzG,EAAA,KACAmyD,EAAAnyD,EAAA,IAGAF,GAAAC,QAAAmxD,IAAAK,QAEA,IAAA16B,YACAi7B,KAAYjvC,eAGZswC,EAAAE,IACAhC,IAAAf,GACAe,IAAAT,GACAS,IAAAN,IR4xiBMwC,KACA,SAAUzzD,EAAQC,EAASC,GAEjC,YSjyiBA,SAAAs/B,GAAAk0B,EAAAvmB,EAAAwmB,GACA,GAAAC,GAAArwD,KAAAypB,KACAwS,EAAA,GAAAq0B,GAAAH,EAAAvmB,EAAAwmB,EAWA,OATAC,KACAp0B,EAAAD,KAAAq0B,EAAA,IAAAp0B,EAAAD,KACAC,EAAAqxB,KAAA+C,GAGAp0B,EAAAs0B,OAAA,EAEAvwD,KAAAwwD,SAAA/pD,KAAAw1B,GAEAA,EAKA,QAAAw0B,KACA,GAAAx0B,GAAAj8B,KAAAi8B,QAAA56B,MAAArB,KAAA+2B,UAIA,MAFAkF,GAAAs0B,OAAA,EAEAt0B,EAKA,QAAAy0B,KACA,GAAAz0B,GAAAj8B,KAAAi8B,QAAA56B,MAAArB,KAAA+2B,UAIA,OAFAkF,GAAAs0B,MAAA,KAEAt0B,EAjDA,GAAAq0B,GAAA3zD,EAAA,KACAg0D,EAAAh0D,EAAA,KAEAF,GAAAC,QAAAi0D,CAEA,IAAAvpB,GAAAupB,EAAAhzD,SAEAypC,GAAAnL,UACAmL,EAAAspB,OACAtpB,EAAAqpB,OAGArpB,EAAAwpB,KAAA30B,GT+1iBM40B,KACA,SAAUp0D,EAAQC,EAASC,GAEjC,cAC4B,SAASghB,GU91iBrC,QAAAgzC,GAAAntB,GACA,GAAAoF,GACA9mC,EACAnD,CAEA,IAAA6kC,GAEG,oBAAAA,IAAAjQ,EAAAiQ,GACHA,GAAemqB,SAAAnqB,OACZ,eAAAA,IAAA,YAAAA,GACH,MAAAA,OAJAA,KAOA,MAAAxjC,eAAA2wD,IACA,UAAAA,GAAAntB,EAYA,KATAxjC,KAAAsG,QACAtG,KAAAwwD,YACAxwD,KAAA8wD,WACA9wD,KAAA+wD,IAAApzC,EAAAozC,MAGAjvD,GAAA,EACAnD,EAAAqyD,EAAAryD,SAEAmD,EAAAnD,GACAiqC,EAAAooB,EAAAlvD,GAEA2sD,EAAAnxD,KAAAkmC,EAAAoF,KACA5oC,KAAA4oC,GAAApF,EAAAoF,GAKA,KAAAA,IAAApF,IACA,IAAAwtB,EAAAlhC,QAAA8Y,KACA5oC,KAAA4oC,GAAApF,EAAAoF,IAkFA,QAAAvV,GAAA49B,GACA,GAAAlzD,GAAAiC,KAAA2tD,UAAA,EACA,OAAAp6B,GAAAx1B,KAAAs1B,SAAA49B,GAAApsC,OAAA9mB,GAKA,QAAAmzD,GAAAC,EAAAn1B,GACA,QAAAm1B,EAAArhC,QAAArG,EAAA2nC,KACA,SAAAnqB,OACA,IAAAjL,EAAA,uCAAAvS,EAAA2nC,IAAA,KAMA,QAAAC,GAAAF,EAAAn1B,GACA,IAAAm1B,EACA,SAAAlqB,OAAA,IAAAjL,EAAA,qBAKA,QAAAs1B,GAAA7nC,EAAAuS,GACA,IAAAvS,EACA,SAAAwd,OAAA,YAAAjL,EAAA,mCAjKA,GAAAvS,GAAA9sB,EAAA,KACA86B,EAAA96B,EAAA,KACA42B,EAAA52B,EAAA,KAEAF,GAAAC,QAAAi0D,CAEA,IAAAlC,MAAYjvC,eACZ4nB,EAAAupB,EAAAhzD,SAEAypC,GAAA/T,UAKA,IAAA29B,IAAA,uDA8CApzD,QAAAS,eAAA+oC,EAAA,QACA7jB,IAAA,WACA,MAAAvjB,MAAA8wD,QAAA9wD,KAAA8wD,QAAAnyD,OAAA,IAEAyI,IAAA,SAAAqiB,GACA4nC,EAAA5nC,EAAA,QAEAA,IAAAzpB,KAAAypB,MACAzpB,KAAA8wD,QAAArqD,KAAAgjB,MAMA7rB,OAAAS,eAAA+oC,EAAA,WACA7jB,IAAA,WACA,uBAAAvjB,MAAAypB,OAAA8nC,QAAAvxD,KAAAypB,UAAAnlB,IAEA8C,IAAA,SAAAmqD,GACAD,EAAAtxD,KAAAypB,KAAA,WACAzpB,KAAAypB,OAAAta,KAAAoiD,GAAA,GAAAvxD,KAAAwxD,aAKA5zD,OAAAS,eAAA+oC,EAAA,YACA7jB,IAAA,WACA,uBAAAvjB,MAAAypB,OAAA+nC,SAAAxxD,KAAAypB,UAAAnlB,IAEA8C,IAAA,SAAAoqD,GACAH,EAAAG,EAAA,YACAN,EAAAM,EAAA,YACAxxD,KAAAypB,OAAAta,KAAAnP,KAAAuxD,SAAA,GAAAC,MAKA5zD,OAAAS,eAAA+oC,EAAA,WACA7jB,IAAA,WACA,uBAAAvjB,MAAAypB,OAAAgoC,QAAAzxD,KAAAypB,UAAAnlB,IAEA8C,IAAA,SAAAqqD,GACA,GAAAC,GAAAD,GAAA,EAKA,IAHAP,EAAAQ,EAAA,WACAJ,EAAAtxD,KAAAypB,KAAA,WAEAioC,EAAA,CACA,SAAAA,EAAAv6B,OAAA,GACA,SAAA8P,OAAA,gCAGA,SAAAyqB,EAAA5hC,QAAA,OACA,SAAAmX,OAAA,0CAIAjnC,KAAAypB,KAAAgO,EAAAz3B,KAAAypB,KAAAioC,MAKA9zD,OAAAS,eAAA+oC,EAAA,QACA7jB,IAAA,WACA,uBAAAvjB,MAAAypB,KACAA,EAAA+nC,SAAAxxD,KAAAypB,KAAAzpB,KAAAyxD,aACAntD,IAEA8C,IAAA,SAAAuqD,GACAN,EAAAM,EAAA,QACAT,EAAAS,EAAA,QACA3xD,KAAAypB,OAAAta,KAAAnP,KAAAuxD,SAAA,GAAAI,GAAA3xD,KAAAyxD,SAAA,UVm5iB6Bn0D,KAAKZ,EAASC,EAAoB,MAIzDi1D,KACA,SAAUn1D,EAAQC,GWthjBxBD,EAAAC,QAAA,SAAAG,GACA,aAAAA,GAAA,MAAAA,EAAAiB,aACA,mBAAAjB,GAAAiB,YAAA4mB,UAAA7nB,EAAAiB,YAAA4mB,SAAA7nB,KXqijBMg1D,KACA,SAAUp1D,EAAQC,EAASC,GAEjC,YAC4N,SAASK,GAAgBC,EAASC,GAAa,KAAKD,YAAoBC,IAAc,KAAM,IAAIC,WAAU,qCAAtUS,OAAOS,eAAe3B,EAAQ,cAAcqB,OAAM,GYljjBlD,IAAA+zD,GAAAn1D,EAAA,GZkjjBgGo1D,EAAyC,SAAgCl1D,GAAK,MAAOA,IAAKA,EAAIC,WAAWD,GAAKE,QAAQF,IAAtFi1D,GYhjjB1HvH,EAEJ,QAAAA,GAAY5B,GAAM3rD,EAAAgD,KAAAuqD,EAChB,IAAIyH,GAAW,GAAItjB,MAAKia,EAAKsJ,YAAaC,SAQ1C,IAPAlyD,KAAK0jC,MAAO,EAAAquB,EAAAh1D,SAAOi1D,GAASG,OAAO,oBACnCnyD,KAAK8tC,GAAK6a,EAAK7a,GACf9tC,KAAKusD,UAAY5D,EAAKE,WACtB7oD,KAAK2qD,QAAUhC,EAAKgC,QACpB3qD,KAAKg8B,KAAO2sB,EAAKI,UACjB/oD,KAAK2sD,UAAYhE,EAAKyJ,WACtBpyD,KAAKq9C,SAAWsL,EAAKtL,SACjBsL,EAAK0J,OAAQ,CACf,GAAIA,GAASC,KAAKjF,MAAM1E,EAAK0J,OAC7BryD,MAAK4/C,SAAWyS,EAAOzS,SACvB5/C,KAAK6/C,SAAWwS,EAAOxS,SACvB7/C,KAAK+wC,MAAQshB,EAAOthB,OZiijBg0Br0C,GAAQK,QY3hjBn1BwtD,GZ+hjBTgI,KACA,SAAU91D,EAAQC,KAMlB81D,KACA,SAAU/1D,EAAQC,EAASC,GAEjC,YAC85B,SAASC,GAAuBC,GAAK,MAAOA,IAAKA,EAAIC,WAAWD,GAAKE,QAAQF,GAAM,QAASG,GAAgBC,EAASC,GAAa,KAAKD,YAAoBC,IAAc,KAAM,IAAIC,WAAU,qCAAuC,QAASC,GAA2BC,EAAKC,GAAM,IAAID,EAAM,KAAM,IAAIE,gBAAe,4DAA8D,QAAOD,GAAqB,iBAAPA,IAA+B,mBAAPA,GAAwBD,EAALC,EAAW,QAASE,GAAUC,EAASC,GAAY,GAAuB,mBAAbA,IAAsC,OAAbA,EAAmB,KAAM,IAAIP,WAAU,iEAAkEO,GAAaD,GAASE,UAAUC,OAAOC,OAAOH,GAAYA,EAAWC,WAAWG,aAAaC,MAAMN,EAASO,YAAW,EAAMC,UAAS,EAAKC,cAAa,KAAWR,IAAWE,OAAOO,eAAeP,OAAOO,eAAeV,EAASC,GAAYD,EAASW,UAAUV,GAAnxDE,OAAOS,eAAe3B,EAAQ,cAAcqB,OAAM,GAAO,IAAIO,GAAa,WAAW,QAASC,GAAiBC,EAAOC,GAAO,IAAI,GAAIC,GAAE,EAAEA,EAAED,EAAME,OAAOD,IAAI,CAAC,GAAIE,GAAWH,EAAMC,EAAGE,GAAWZ,WAAWY,EAAWZ,aAAY,EAAMY,EAAWV,cAAa,EAAQ,SAAUU,KAAWA,EAAWX,UAAS,GAAKL,OAAOS,eAAeG,EAAOI,EAAWC,IAAID,IAAc,MAAO,UAAS1B,EAAY4B,EAAWC,GAAuI,MAAvHD,IAAWP,EAAiBrB,EAAYS,UAAUmB,GAAeC,GAAYR,EAAiBrB,EAAY6B,GAAoB7B,MajkjBriB8B,EAAArC,EAAA,GbikjB6lBsC,EAAQrC,EAAuBoC,GahkjB5nBI,EAAAzC,EAAA,GbgkjB8qB0C,EAAYzC,EAAuBwC,Ga/jjBjtB+4C,EAAAx7C,EAAA,GACA27C,EAAA37C,EAAA,GACA07C,EAAA17C,EAAA,GACAktD,EAAAltD,EAAA,IAEAA,GAAA,KAEA,IAAM81D,IACJ9U,eAAgBn+C,UAAU8B,KAAK5B,WAC/Bk+C,oBAAqBp+C,UAAU8B,KAAK5B,WACpCqxC,MAAOvxC,UAAU4D,OACjBw8C,SAAUpgD,UAAU4mB,OACpBy5B,SAAUrgD,UAAU4mB,OACpBk6B,QAAS9gD,UAAU4D,QAGfsvD,Eb+ijBqkE,SAAS3yD,Ga7ijBllE,QAAA2yD,GAAYj0D,GAAOzB,EAAAgD,KAAA0yD,EAAA,IAAAzyD,GAAA7C,EAAA4C,MAAA0yD,EAAAt0D,WAAAR,OAAAsC,eAAAwyD,IAAAp1D,KAAA0C,KACXvB,GADW,OAAAwB,GAQnBwqD,oBAAsB,SAACC,GACrB,GAAIC,GAAUD,EAAMlsD,OAAOT,KAC3BkC,GAAKi6C,UACHyQ,QAASA,KAXM1qD,EAenB2qD,cAAgB,WACd,GAAID,GAAU1qD,EAAK49C,MAAM8M,QAAQ7e,MACjC,IAAI6e,EAAQhsD,OAAS,EAAG,CACtB,GAAIsB,EAAKxB,MAAMsyC,MAAMpyC,OAAS,EAAG,CAC/B,GAAI0zD,IACFthB,MAAO9wC,EAAKxB,MAAMsyC,MAClB6O,SAAU3/C,EAAKxB,MAAMmhD,SACrBC,SAAU5/C,EAAKxB,MAAMohD,UAEnB8S,EAAaL,KAAK1E,UAAUyE,EAChC/X,cAAWuQ,YAAYrQ,cAAaC,gBAAekQ,EAASgI,GAAYjY,KAAK,SAAC0P,GAC5EnqD,EAAKxB,MAAMk/C,uBAIbrD,cAAWuQ,YAAYrQ,cAAaC,gBAAekQ,GAASjQ,KAAK,SAAC0P,GAChEnqD,EAAKxB,MAAMk/C,kBAGf19C,GAAKi6C,UACHyQ,QAAS,OAnCI1qD,EAwCnB2yD,aAAe,SAACC,GACdzG,YAAUzuC,QAAQk1C,GAASnY,KACzB,SAACr4C,GACC,GAAI0uC,GAAQlsB,OAAOxiB,EACnBpC,GAAKi6C,UACHnJ,MAAOA,OA3Cb9wC,EAAK49C,OACH8M,QAAS,GACT5Z,MAAO,IAJQ9wC,Eb6ijB+5I,MAA90EzC,GAAUk1D,EAAoB3yD,GAAwoCzB,EAAao0D,IAAsB7zD,IAAI,oBAAoBd,MAAM,Waz/iBz0GiC,KAAK4yD,aAAa5yD,KAAKvB,MAAMsyC,Uby/iBi3GlyC,IAAI,4BAA4Bd,MAAM,Sat/iB55G0tD,GACpBzrD,KAAKvB,MAAMsyC,QAAU0a,EAAU1a,OACjC/wC,KAAK4yD,aAAanH,EAAU1a,Ubo/iBmhHlyC,IAAI,SAASd,MAAM,Wa/+iBpkH,MACEkB,GAAAlC,QAAAqD,cAAA,OAAKa,UAAU,yBACbhC,EAAAlC,QAAAqD,cAAA,WAAM47B,QACN/8B,EAAAlC,QAAAqD,cAAA,cAAYa,UAAU,+BACpBhC,EAAAlC,QAAAqD,cAAA,OAAK0sD,yBAA2BC,OAAQ/sD,KAAK69C,MAAM9M,UAErD9xC,EAAAlC,QAAAqD,cAAA,YAAUrC,MAAOiC,KAAK69C,MAAM8M,QAAS5J,SAAU/gD,KAAKyqD,sBACpDxrD,EAAAlC,QAAAqD,cAAA,OAAKa,UAAU,gBACbhC,EAAAlC,QAAAqD,cAAC+3C,EAAAqQ,QAAO5hD,KAAK,KAAK6hD,MAAM,UAAUjG,QAASxiD,KAAK4qD,gBAAgB,EAAAvS,EAAA+I,SAAQ,WACxEniD,EAAAlC,QAAAqD,cAAC+3C,EAAAqQ,QAAO5hD,KAAK,KAAK6hD,MAAM,YAAYjG,QAASxiD,KAAKvB,MAAMm/C,sBAAsB,EAAAvF,EAAA+I,SAAQ,YAExFniD,EAAAlC,QAAAqD,cAAA,QAAMa,UAAU,wCbo+iBm6IyxD,Ga/ijBz5IjyD,UAAMC,UAiFxCgyD,GAAoBpzD,UAAYmzD,Eb89iBigJ/1D,EAAQK,Qa59iB1hJ21D,Gbg+iBTI,KACA,SAAUr2D,EAAQC,KAMlBq2D,KACA,SAAUt2D,EAAQC,EAASC,GAEjC,YACw8B,SAASC,GAAuBC,GAAK,MAAOA,IAAKA,EAAIC,WAAWD,GAAKE,QAAQF,GAAM,QAASG,GAAgBC,EAASC,GAAa,KAAKD,YAAoBC,IAAc,KAAM,IAAIC,WAAU,qCAAuC,QAASC,GAA2BC,EAAKC,GAAM,IAAID,EAAM,KAAM,IAAIE,gBAAe,4DAA8D,QAAOD,GAAqB,iBAAPA,IAA+B,mBAAPA,GAAwBD,EAALC,EAAW,QAASE,GAAUC,EAASC,GAAY,GAAuB,mBAAbA,IAAsC,OAAbA,EAAmB,KAAM,IAAIP,WAAU,iEAAkEO,GAAaD,GAASE,UAAUC,OAAOC,OAAOH,GAAYA,EAAWC,WAAWG,aAAaC,MAAMN,EAASO,YAAW,EAAMC,UAAS,EAAKC,cAAa,KAAWR,IAAWE,OAAOO,eAAeP,OAAOO,eAAeV,EAASC,GAAYD,EAASW,UAAUV,GAA7zDE,OAAOS,eAAe3B,EAAQ,cAAcqB,OAAM,GAAO,IAAIO,GAAa,WAAW,QAASC,GAAiBC,EAAOC,GAAO,IAAI,GAAIC,GAAE,EAAEA,EAAED,EAAME,OAAOD,IAAI,CAAC,GAAIE,GAAWH,EAAMC,EAAGE,GAAWZ,WAAWY,EAAWZ,aAAY,EAAMY,EAAWV,cAAa,EAAQ,SAAUU,KAAWA,EAAWX,UAAS,GAAKL,OAAOS,eAAeG,EAAOI,EAAWC,IAAID,IAAc,MAAO,UAAS1B,EAAY4B,EAAWC,GAAuI,MAAvHD,IAAWP,EAAiBrB,EAAYS,UAAUmB,GAAeC,GAAYR,EAAiBrB,EAAY6B,GAAoB7B,MchljBriB8B,EAAArC,EAAA,GdgljB6lBsC,EAAQrC,EAAuBoC,Gc/kjB5nBI,EAAAzC,EAAA,Gd+kjB8qB0C,EAAYzC,EAAuBwC,Gc9kjBjtBi5C,EAAA17C,EAAA,GACAw7C,EAAAx7C,EAAA,GACA27C,EAAA37C,EAAA,GACAq2D,EAAAr2D,EAAA,Id2kjB63Bs2D,EAAar2D,EAAuBo2D,Ec1kjBj6Br2D,GAAA,KAEA,IAAM2C,IACJshD,mBAAoBphD,UAAU0qD,KAAKxqD,WACnC4gD,QAAS9gD,UAAU4D,OAAO1D,WAC1BihD,wBAAyBnhD,UAAU8B,KAAK5B,WACxC6gD,UAAW/gD,UAAUkC,MAAMhC,YAGvBwzD,EdikjByjE,SAASnzD,Gc/jjBtkE,QAAAmzD,GAAYz0D,GAAOzB,EAAAgD,KAAAkzD,EAAA,IAAAjzD,GAAA7C,EAAA4C,MAAAkzD,EAAA90D,WAAAR,OAAAsC,eAAAgzD,IAAA51D,KAAA0C,KACXvB,GADW,OAAAwB,GAWnBmgD,cAAgB,WACd9F,aAAW+F,mBAAmBpgD,EAAKxB,MAAM6hD,SAAS5F,KAAK,SAACC,GACtD16C,EAAKi6C,UACHqG,UAAW5F,EAAIr0C,KAAKi6C,eAdPtgD,EAmBnBkzD,mBAAqB,SAACC,GACpBnzD,EAAKi6C,UACHmZ,eAAgBD,IAElBnzD,EAAKqzD,YAvBYrzD,EA0BnBszD,aAAe,WACb,GAAItzD,EAAK49C,MAAMwV,eAAe10D,OAAS,EAAI,CACzCsB,EAAKk+C,KAAKqV,aAAaC,aAEvB,KAAK,GADDlT,MACK7hD,EAAI,EAAGA,EAAIuB,EAAK49C,MAAMwV,eAAe10D,OAAQD,IACpD6hD,EAAU7hD,GAAKuB,EAAK49C,MAAMwV,eAAe30D,GAAGg1D,KAE9CzzD,GAAKi6C,UACHyZ,SAAS,EACTC,cAEFtZ,aAAWuZ,kBAAkB5zD,EAAKxB,MAAM6hD,QAASC,GAAW7F,KAAK,SAACC,GAChE,GAAIA,EAAIr0C,KAAKwtD,OAAOn1D,OAAS,EAAG,CAE9B,IAAK,GADDi1D,MACKl1D,EAAI,EAAIA,EAAIi8C,EAAIr0C,KAAKwtD,OAAOn1D,OAASD,IAC5Ck1D,EAASl1D,GAAKi8C,EAAIr0C,KAAKwtD,OAAOp1D,EAEhCuB,GAAKi6C,UACH0Z,SAAUA,IAGd3zD,EAAKi6C,UACHmZ,eAAgB,KAChBM,SAAS,IAEPhZ,EAAIr0C,KAAKytD,QAAQp1D,OAAS,GAC5BsB,EAAKmgD,oBApDMngD,EA0DnB+zD,eAAiB,SAACtJ,GAChB,GAAIuJ,GAAWvJ,EAAMlsD,OAAOykD,aAAa,OACzC3I,cAAW4Z,oBAAoBj0D,EAAKxB,MAAM6hD,QAAS2T,GAAUvZ,KAAK,SAACC,GACjE,GAAiB,MAAbA,EAAIr0C,KAAc,CAEpB,IAAK,GADD6tD,MACKz1D,EAAI,EAAGA,EAAIuB,EAAK49C,MAAM0C,UAAU5hD,OAAQD,IAC3CuB,EAAK49C,MAAM0C,UAAU7hD,GAAG0zD,aAAe6B,GACzCE,EAAa1tD,KAAKxG,EAAK49C,MAAM0C,UAAU7hD,GAG3CuB,GAAKi6C,UACHqG,UAAW4T,QAnEjBl0D,EAAK49C,OACH0C,UAAWtgD,EAAKxB,MAAM8hD,UACtB8S,eAAgB,KAChBO,YACAD,SAAS,GAEX1zD,EAAKqzD,WARYrzD,Ed+jjBm0L,MAA9vHzC,GAAU01D,EAAkBnzD,GAAsnDzB,EAAa40D,IAAoBr0D,IAAI,SAASd,MAAM,Wcp/iBrxH,GAAA2tD,GAAA1rD,IACP,OACEf,GAAAlC,QAAAqD,cAAC+3C,EAAAic,OAAMlT,QAAQ,EAAMC,OAAQnhD,KAAKvB,MAAMkiD,yBACtC1hD,EAAAlC,QAAAqD,cAAC+3C,EAAAkc,YAAD,MAAc,EAAAhc,EAAA+I,SAAQ,qBACtBniD,EAAAlC,QAAAqD,cAAC+3C,EAAAmc,UAAD,KACEr1D,EAAAlC,QAAAqD,cAAA,UAAI,EAAAi4C,EAAA+I,SAAQ,qBACZniD,EAAAlC,QAAAqD,cAAA,OAAKa,UAAU,gBACbhC,EAAAlC,QAAAqD,cAAC6yD,EAAAl2D,SACC2I,aAAa,EAAA2yC,EAAA+I,SAAQ,mBACrBmT,eAAgBv0D,KAAKmzD,mBACrBjT,IAAI,eACJsU,SAAS,EACTvzD,UAAU,oBAEVjB,KAAK69C,MAAMwV,iBAAmBrzD,KAAK69C,MAAM8V,QACzC10D,EAAAlC,QAAAqD,cAAC+3C,EAAAqQ,QAAOC,MAAM,YAAYjG,QAASxiD,KAAKuzD,eAAe,EAAAlb,EAAA+I,SAAQ,WAC/DniD,EAAAlC,QAAAqD,cAAC+3C,EAAAqQ,QAAOC,MAAM,YAAYd,UAAA,IAAU,EAAAtP,EAAA+I,SAAQ,YAG/CphD,KAAK69C,MAAM+V,SAASj1D,OAAS,GAC5BqB,KAAK69C,MAAM+V,SAASjtD,IAAI,SAACgiD,GAAyB,GAAnB7mD,GAAmBi1B,UAAAp4B,OAAA,OAAA2F,KAAAyyB,UAAA,GAAAA,UAAA,GAAX,CAAWA,WAAA,EAChD,OACE93B,GAAAlC,QAAAqD,cAAA,KAAGa,UAAU,8BAA8BpC,IAAKiD,GAAQ4pD,EAAK7N,MAAM+V,SAAS9xD,GAAO4xD,MAChF,KAAMhI,EAAK7N,MAAM+V,SAAS9xD,GAAO2yD,aAIxCz0D,KAAK69C,MAAM0C,UAAU5hD,OAAS,GAC9BqB,KAAK69C,MAAM0C,UAAU55C,IAAI,SAACgiD,GAAyB,GAAnB7mD,GAAmBi1B,UAAAp4B,OAAA,OAAA2F,KAAAyyB,UAAA,GAAAA,UAAA,GAAX,CAAWA,WAAA,EACjD,OACE93B,GAAAlC,QAAAqD,cAAA,OAAKa,UAAU,uBAAuBpC,IAAKiD,GACzC7C,EAAAlC,QAAAqD,cAAA,WACEnB,EAAAlC,QAAAqD,cAAA,OAAKa,UAAU,gCAAgC2nD,IAAKD,EAAKE,WAAYC,IAAI,KACzE7pD,EAAAlC,QAAAqD,cAAA,QAAMa,UAAU,wBAAwB0nD,EAAKI,YAE/C9pD,EAAAlC,QAAAqD,cAAA,KAAGa,UAAU,cAAc+6B,KAAM2sB,EAAKyJ,WAAY5P,QAASkJ,EAAKsI,qBAM1E/0D,EAAAlC,QAAAqD,cAAC+3C,EAAAuc,YAAD,KACEz1D,EAAAlC,QAAAqD,cAAC+3C,EAAAqQ,QAAOC,MAAM,YAAYjG,QAASxiD,KAAKvB,MAAMkiD,0BAC3C,EAAAtI,EAAA+I,SAAQ,gBdy8iB00L8R,GcjkjB/zLzyD,UAAMC,UA+HtCwyD,GAAkB5zD,UAAYA,Edk8iBs5L5C,EAAQK,Qch8iB76Lm2D,Gdo8iBTyB,KACA,SAAUl4D,EAAQC,KAMlBk4D,KACA,SAAUn4D,EAAQC,EAASC,GAEjC,YAC69B,SAASC,GAAuBC,GAAK,MAAOA,IAAKA,EAAIC,WAAWD,GAAKE,QAAQF,GAAM,QAASg4D,GAAmBC,GAAK,GAAGnyD,MAAM0c,QAAQy1C,GAAK,CAAC,IAAI,GAAIp2D,GAAE,EAAEq2D,EAAKpyD,MAAMmyD,EAAIn2D,QAAQD,EAAEo2D,EAAIn2D,OAAOD,IAAKq2D,EAAKr2D,GAAGo2D,EAAIp2D,EAAI,OAAOq2D,GAAW,MAAOpyD,OAAMqyD,KAAKF,GAAO,QAAS93D,GAAgBC,EAASC,GAAa,KAAKD,YAAoBC,IAAc,KAAM,IAAIC,WAAU,qCAAuC,QAASC,GAA2BC,EAAKC,GAAM,IAAID,EAAM,KAAM,IAAIE,gBAAe,4DAA8D,QAAOD,GAAqB,iBAAPA,IAA+B,mBAAPA,GAAwBD,EAALC,EAAW,QAASE,GAAUC,EAASC,GAAY,GAAuB,mBAAbA,IAAsC,OAAbA,EAAmB,KAAM,IAAIP,WAAU,iEAAkEO,GAAaD,GAASE,UAAUC,OAAOC,OAAOH,GAAYA,EAAWC,WAAWG,aAAaC,MAAMN,EAASO,YAAW,EAAMC,UAAS,EAAKC,cAAa,KAAWR,IAAWE,OAAOO,eAAeP,OAAOO,eAAeV,EAASC,GAAYD,EAASW,UAAUV,GAA1/DE,OAAOS,eAAe3B,EAAQ,cAAcqB,OAAM,GAAO,IAAIO,GAAa,WAAW,QAASC,GAAiBC,EAAOC,GAAO,IAAI,GAAIC,GAAE,EAAEA,EAAED,EAAME,OAAOD,IAAI,CAAC,GAAIE,GAAWH,EAAMC,EAAGE,GAAWZ,WAAWY,EAAWZ,aAAY,EAAMY,EAAWV,cAAa,EAAQ,SAAUU,KAAWA,EAAWX,UAAS,GAAKL,OAAOS,eAAeG,EAAOI,EAAWC,IAAID,IAAc,MAAO,UAAS1B,EAAY4B,EAAWC,GAAuI,MAAvHD,IAAWP,EAAiBrB,EAAYS,UAAUmB,GAAeC,GAAYR,EAAiBrB,EAAY6B,GAAoB7B,Me9ljBriB8B,EAAArC,EAAA,Gf8ljB6lBsC,EAAQrC,EAAuBoC,Ge7ljB5nBu5C,EAAA57C,EAAA,KACAi8C,Gf4ljBorBh8C,EAAuB27C,Ge5ljB3sB57C,EAAA,Kf4ljB4vBk8C,EAAUj8C,EAAuBg8C,Ge3ljB7xBkZ,EAAAn1D,EAAA,Gf2ljB80Bo1D,EAASn1D,EAAuBk1D,Ge1ljB92BxZ,EAAA37C,EAAA,GACA07C,EAAA17C,EAAA,EAEAA,GAAA,KAEAs4D,UAAOC,OAAOrd,OAAOsd,IAAIC,OAAOC,KfqljB0jE,IenljBplEC,GfmljBomE,SAASv1D,GejljBjnE,QAAAu1D,GAAY72D,GAAOzB,EAAAgD,KAAAs1D,EAAA,IAAAr1D,GAAA7C,EAAA4C,MAAAs1D,EAAAl3D,WAAAR,OAAAsC,eAAAo1D,IAAAh4D,KAAA0C,KACXvB,GADW,OAAAwB,GASnBuiD,QAAU,SAACkI,EAAO7rD,EAAKg+C,EAASD,GAC9B,GAAI/9C,IAAQoB,EAAK49C,MAAMnC,WAAY,OAAO,CAC1Cz7C,GAAKxB,MAAMk+C,mBAAmBC,EAAaC,EAASh+C,IAXnCoB,EAcnBs1D,SAAW,SAAC7K,GACV,GAAMa,GAAeb,EAAMlsD,OAAO+sD,aAC5BiK,EAAe9K,EAAMlsD,OAAOg3D,YAGlC,IADkBjK,EADGb,EAAMlsD,OAAO8gD,UACW,GAAKkW,GAE5Cv1D,EAAKxB,MAAM88C,oBAAsBt7C,EAAKw1D,QAAUx1D,EAAK49C,MAAM6X,YAAa,CAC1E,GAAIA,GAAcz1D,EAAK49C,MAAM6X,YAAc,CAC3Cz1D,GAAKi6C,UACHwb,YAAaA,EACb/B,SAAU,IAEZrZ,aAAWe,uBAAuBsa,oBAAmBlb,gBAAeib,EAAaz1D,EAAKw1D,SAAS/a,KAAK,SAACC,GACnG,GAAIib,GAAqBh4D,OAAO41C,UAAWvzC,EAAKxB,MAAM68C,YACtDr7C,GAAKxB,MAAMu+C,uBAAXre,OAAAk2B,EAAmCe,GAAnCf,EAA0Dla,EAAIr0C,KAAKA,QACnErG,EAAKi6C,UACHyZ,SAAU,QA5BlB1zD,EAAKw1D,QAAU,GACfx1D,EAAK49C,OACH6X,YAAa,EACb/B,SAAS,GALM1zD,EfiljBosI,MAAplEzC,GAAU83D,EAAYv1D,GAAmqCzB,EAAag3D,IAAcz2D,IAAI,SAASd,MAAM,We5ijBj2G,GAAA2tD,GAAA1rD,IACP,OACEf,GAAAlC,QAAAqD,cAAA,OAAKa,UAAU,gBACbhC,EAAAlC,QAAAqD,cAAA,MAAIm1D,SAAUv1D,KAAKu1D,SAAUt0D,UAAW,0BAEpCjB,KAAKvB,MAAM68C,YACTt7C,KAAKvB,MAAM68C,YAAY30C,IAAI,SAACgiD,GAAyB,GAAnB7mD,GAAmBi1B,UAAAp4B,OAAA,OAAA2F,KAAAyyB,UAAA,GAAAA,UAAA,GAAX,EAAG+9B,EAAQ/9B,UAAA,GAC/C8+B,EAAe/zD,EAAQ,CAI3B,OAHI+zD,KAAiBf,EAAIn2D,SACvBk3D,EAAe/zD,GAGf7C,EAAAlC,QAAAqD,cAAC01D,GACCtT,QAASkJ,EAAKlJ,QACduT,MAAOpN,EAAKoN,MACZ90D,UAAWyqD,EAAKjtD,MAAMi9C,aAAe55C,EAAQ,cAAe,GAC5Dk6B,KAAM2sB,EAAKqN,aACXl0D,MAAOA,EACPjD,IAAKiD,EACL+6C,QAASiY,EAAIe,GACbjZ,YAAa+L,MAGd1pD,EAAAlC,QAAAqD,cAACy4C,EAAA97C,QAAD,MAGPiD,KAAK69C,MAAM8V,SACX10D,EAAAlC,QAAAqD,cAAA,MAAIa,UAAW,uBAAuBhC,EAAAlC,QAAAqD,cAACy4C,EAAA97C,QAAD,afihjB8qIu4D,GenljBtsI70D,UAAMC,WA0E1Bo1D,EfygjBmxI,SAASpN,GAA4D,QAASoN,KAAgD,MAAlC94D,GAAgBgD,KAAK81D,GAAoB14D,EAA2B4C,MAAM81D,EAAY13D,WAAWR,OAAOsC,eAAe41D,IAAcz0D,MAAMrB,KAAK+2B,YAAwsB,MAAx5Bv5B,GAAUs4D,EAAYpN,GAAuMpqD,EAAaw3D,IAAcj3D,IAAI,SAASd,MAAM,WexgjBrjJ,GAAAk4D,GAAAj2D,KACH0jC,EAAOuxB,UAAOiB,UAAUl2D,KAAKvB,MAAMs3D,OAAO5D,OAAO,mBACrD,OACElzD,GAAAlC,QAAAqD,cAAA,MAAIoiD,QAAS,SAACkI,GAAD,MAAWuL,GAAKx3D,MAAM+jD,QAAQkI,EAAOuL,EAAKx3D,MAAMqD,MAAOm0D,EAAKx3D,MAAMo+C,QAASoZ,EAAKx3D,MAAMm+C,cAAc37C,UAAW,qBAAuBjB,KAAKvB,MAAMwC,WAC5JhC,EAAAlC,QAAAqD,cAAA,OAAKa,UAAU,gBACbhC,EAAAlC,QAAAqD,cAAA,OAAKa,UAAU,QAAQyiC,GACvBzkC,EAAAlC,QAAAqD,cAAA,OAAKa,UAAU,SAAQhC,EAAAlC,QAAAqD,cAAA,KAAGa,UAAU,gBAAehC,EAAAlC,QAAAqD,cAAA,YAAOJ,KAAKvB,MAAMu9B,afkgjBqoK85B,GezgjB1rKr1D,UAAMC,UfygjB6tKhE,GAAQK,Qe1/iBtvKu4D,Gf8/iBTa,KACA,SAAU15D,EAAQC,KAMlB05D,EACA,SAAU35D,EAAQC,EAASC,GAEjC,YACAiB,QAAOS,eAAe3B,EAAQ,cAAcqB,OAAM,GgB9mjBrCs4D,WAAU,IACVjV,UAAUvJ,OAAOuJ,QAEjB7E,WAAW1E,OAAOsd,IAAIC,OAAO7Y,SAC7B+Z,WAAWze,OAAOsd,IAAIC,OAAOkB,SAC7BC,aAAa1e,OAAOsd,IAAIC,OAAOmB,WAC/BC,WAAY3e,OAAOsd,IAAIC,OAAOoB,SAC9BC,WAAW5e,OAAOsd,IAAIC,OAAOqB,SAC7BC,YAAY7e,OAAOsd,IAAIC,OAAOsB,UAC9BC,WAAW9e,OAAOsd,IAAIC,OAAOuB,SAC7BC,YAAY/e,OAAOsd,IAAIC,OAAOwB,UAC9BC,aAAahf,OAAOsd,IAAIC,OAAOyB,WAC/BC,QAAoC,SAA5Bjf,OAAOsd,IAAIC,OAAO0B,MAC1BC,SAAsC,SAA7Blf,OAAOsd,IAAIC,OAAO2B,OAC3B1B,OAAOxd,OAAOsd,IAAIC,OAAOC,KACzB2B,iBAAiBnf,OAAOsd,IAAIC,OAAO4B,eACnCC,iBAAiBpf,OAAOsd,IAAIC,OAAO6B,eACnCC,aAAarf,OAAOsd,IAAIC,OAAO8B,WAG/BC,sBAAsBtf,OAAOsd,IAAIiC,YAAYD,oBAC7Cn7B,OAAO6b,OAAOsd,IAAIiC,YAAYp7B,KAC9Bq7B,eAAexf,OAAOsd,IAAIiC,YAAYC,aACtCzK,WAAW/U,OAAOsd,IAAIiC,YAAYxK,SAClC0K,aAAazf,OAAOsd,IAAIiC,YAAYE,WACpCC,uBAAuB1f,OAAOsd,IAAIiC,YAAYG,qBAC9CC,0BAAwB3f,OAAOsd,IAAIiC,YAAYI,sBAC/CC,aAAmD,SAAtC5f,OAAOsd,IAAIiC,YAAYK,WACpCC,qBAAmB7f,OAAOsd,IAAIiC,YAAYM,iBAC1CC,sBAAoB9f,OAAOsd,IAAIiC,YAAYO,kBAC3CC,oBAAiE,SAA7C/f,OAAOsd,IAAIiC,YAAYQ,kBAC3CC,mCAA+F,SAA5DhgB,OAAOsd,IAAIiC,YAAYS,iCAC1DC,oBAAiE,SAA7CjgB,OAAOsd,IAAIiC,YAAYU,kBAC3CC,qBAAmE,SAA9ClgB,OAAOsd,IAAIiC,YAAYW,mBAC5CC,4BAAiF,SAArDngB,OAAOsd,IAAIiC,YAAYY,0BACnDC,WAAWpgB,OAAOsd,IAAIiC,YAAYa,SAClCC,0BAA0BrgB,OAAOsd,IAAIiC,YAAYc,wBACjDC,yBAAyBtgB,OAAOsd,IAAIiC,YAAYe,uBAChDC,yBAAyBvgB,OAAOsd,IAAIiC,YAAYgB,uBAChDC,cAAcxgB,OAAOsd,IAAIiC,YAAYiB,YACrCC,aAAazgB,OAAOsd,IAAIiC,YAAYkB,WACpCC,yBAAyB1gB,OAAOsd,IAAIiC,YAAYmB,uBAChDC,2BAA2B3gB,OAAOsd,IAAIiC,YAAYoB,yBAClDC,gBAAgB5gB,OAAOsd,IAAIiC,YAAYqB,cACvCC,2BAA2B7gB,OAAOsd,IAAIiC,YAAYsB,yBAClDC,wBAAwB9gB,OAAOsd,IAAIiC,YAAYuB,sBAE/CC,aAAa/gB,OAAOsd,IAAIiC,YAAYwB,WACpCC,YAAYhhB,OAAOsd,IAAIiC,YAAYyB,UAGnCC,OAAOjhB,OAAOkhB,KAAOlhB,OAAOkhB,KAAK3D,OAAO0D,KAAO,GAC/CE,SAASnhB,OAAOkhB,KAAOlhB,OAAOkhB,KAAK3D,OAAO6D,OAAS,GACnDC,cAAcrhB,OAAOkhB,KAAOlhB,OAAOkhB,KAAK3D,OAAO+D,aAAe,GAC9DC,aAAavhB,OAAOkhB,KAAyC,SAAlClhB,OAAOkhB,KAAK3D,OAAOgE,WAAwB,GACtEC,QAAQxhB,OAAOkhB,KAAOlhB,OAAOkhB,KAAK3D,OAAOiE,MAAQ,GACjDC,aAAazhB,OAAOkhB,KAAOlhB,OAAOkhB,KAAK3D,OAAOkE,WAAa,GAC3DC,eAAe1hB,OAAOkhB,KAA2C,SAApClhB,OAAOkhB,KAAK3D,OAAOmE,aAAyB,GAGzEC,WAAW,GACXC,gBAAgB5hB,OAAO6hB,YAAc7hB,OAAO6hB,YAAYtC,YAAY4B,OAAS,GAC7EW,WAAW9hB,OAAO6hB,YAAc7hB,OAAO6hB,YAAYtC,YAAYuC,SAAW,GAC1EtJ,WAAWxY,OAAO6hB,YAAc7hB,OAAO6hB,YAAYtC,YAAY/G,SAAW,GAC1EuJ,WAAW/hB,OAAO6hB,YAAc7hB,OAAO6hB,YAAYtC,YAAYwC,SAAW,GAG1Enf,gBAAgB5C,OAAOgiB,MAAQhiB,OAAOgiB,MAAMzE,OAAO3a,cAAe,GAClE0B,sBAAsBtE,OAAOgiB,MAAQhiB,OAAOgiB,MAAMzE,OAAOjZ,oBAAqB,GAC9EsL,gBAAgB5P,OAAOgiB,MAAQhiB,OAAOgiB,MAAMzE,OAAO3N,cAAe,GAClEnH,UAAUzI,OAAOgiB,MAAQhiB,OAAOgiB,MAAMzE,OAAO9U,QAAU,GACvD9F,cAAc3C,OAAOgiB,MAAQhiB,OAAOgiB,MAAMzE,OAAO5a,YAAc,GAC/D2O,SAAStR,OAAOgiB,MAAQhiB,OAAOgiB,MAAMzE,OAAOjM,OAAS,GACrDD,eAAerR,OAAOgiB,MAAQhiB,OAAOgiB,MAAMzE,OAAOlM,aAAe,GACjE7O,mBAAmBxC,OAAOgiB,MAAQhiB,OAAOgiB,MAAMzE,OAAO/a,iBAAmB,GACzEJ,kBAAkBpC,OAAOgiB,MAAQhiB,OAAOgiB,MAAMzE,OAAOnb,gBAAkB,GACvED,cAAcnC,OAAOgiB,MAAQhiB,OAAOgiB,MAAMzE,OAAOpb,YAAc,GAC/DwC,sBAAsB3E,OAAOgiB,MAAQhiB,OAAOgiB,MAAMzE,OAAO5Y,oBAAsB,GAC/EE,oBAAoB7E,OAAOgiB,MAAQhiB,OAAOgiB,MAAMzE,OAAO1Y,kBAAoB,GAG3Eod,QAAQjiB,OAAOkiB,IAAMliB,OAAOkiB,IAAI3C,YAAY0C,MAAQ,GACpDE,iBAAiBniB,OAAOkiB,IAAMliB,OAAOkiB,IAAI3C,YAAY4C,eAAiB,GACtEC,wBAAwBpiB,OAAOkiB,IAAMliB,OAAOkiB,IAAI3C,YAAY6C,sBAAwB,GAGpFC,mBAAmBriB,OAAOsiB,SAAWtiB,OAAOsiB,SAAS/C,YAAYgD,kBAAoB,GACrFC,eAAexiB,OAAOsiB,SAAWtiB,OAAOsiB,SAAS/C,YAAYkD,cAAgB,GAC7EC,mBAAmB1iB,OAAOsiB,SAAWtiB,OAAOsiB,SAAS/C,YAAYoD,kBAAoB,GACrFC,uBAAuB5iB,OAAOsiB,SAAWtiB,OAAOsiB,SAAS/C,YAAYsD,uBAAyB,GAC9FC,wBAAwB9iB,OAAOsiB,SAAWtiB,OAAOsiB,SAAS/C,YAAYwD,wBAA0B,GAChGC,2BAA2BhjB,OAAOsiB,SAAWtiB,OAAOsiB,SAAS/C,YAAY0D,4BAA8B,GACvGC,iBAAiBljB,OAAOsiB,SAAWtiB,OAAOsiB,SAAS/C,YAAY4D,iBAAmB,GAClFC,iBAAiBpjB,OAAOsiB,SAAWtiB,OAAOsiB,SAAS/C,YAAY8D,iBAAmB,GAClFC,oBAAoBtjB,OAAOsiB,SAAWtiB,OAAOsiB,SAAS/C,YAAYgE,kBAAkBC,qBAAuB,GAC3GC,mBAAmBzjB,OAAOsiB,SAAWtiB,OAAOsiB,SAAS/C,YAAYgE,kBAAkBG,mBAAqB,GACxGC,kBAAkB3jB,OAAOsiB,SAAWtiB,OAAOsiB,SAAS/C,YAAYgE,kBAAkBK,kBAAoB,GACtGC,mBAAmB7jB,OAAOsiB,SAAWtiB,OAAOsiB,SAAS/C,YAAYgE,kBAAkBO,mBAAqB,GACxGC,gBAAgB/jB,OAAOsiB,SAAWtiB,OAAOsiB,SAAS/C,YAAYgE,kBAAkBS,gBAAkB,GAClGC,iBAAiBjkB,OAAOsiB,SAAWtiB,OAAOsiB,SAAS/C,YAAYgE,kBAAkBW,iBAAmB,GACpGC,iBAAiBnkB,OAAOsiB,SAAWtiB,OAAOsiB,SAAS/C,YAAYgE,kBAAkBa,kBAAoB,GACrGC,kBAAkBrkB,OAAOsiB,SAAWtiB,OAAOsiB,SAAS/C,YAAYgE,kBAAkBe,mBAAqB,IhBohjB9GC,IACA,SAAU3/D,EAAQC,KAMlB2/D,GACA,SAAU5/D,EAAQC,EAASC,GAEjC,YACwlC,SAASC,GAAuBC,GAAK,MAAOA,IAAKA,EAAIC,WAAWD,GAAKE,QAAQF,GAAM,QAASG,GAAgBC,EAASC,GAAa,KAAKD,YAAoBC,IAAc,KAAM,IAAIC,WAAU,qCAAuC,QAASC,GAA2BC,EAAKC,GAAM,IAAID,EAAM,KAAM,IAAIE,gBAAe,4DAA8D,QAAOD,GAAqB,iBAAPA,IAA+B,mBAAPA,GAAwBD,EAALC,EAAW,QAASE,GAAUC,EAASC,GAAY,GAAuB,mBAAbA,IAAsC,OAAbA,EAAmB,KAAM,IAAIP,WAAU,iEAAkEO,GAAaD,GAASE,UAAUC,OAAOC,OAAOH,GAAYA,EAAWC,WAAWG,aAAaC,MAAMN,EAASO,YAAW,EAAMC,UAAS,EAAKC,cAAa,KAAWR,IAAWE,OAAOO,eAAeP,OAAOO,eAAeV,EAASC,GAAYD,EAASW,UAAUV,GAA78DE,OAAOS,eAAe3B,EAAQ,cAAcqB,OAAM,GAAO,IAAIO,GAAa,WAAW,QAASC,GAAiBC,EAAOC,GAAO,IAAI,GAAIC,GAAE,EAAEA,EAAED,EAAME,OAAOD,IAAI,CAAC,GAAIE,GAAWH,EAAMC,EAAGE,GAAWZ,WAAWY,EAAWZ,aAAY,EAAMY,EAAWV,cAAa,EAAQ,SAAUU,KAAWA,EAAWX,UAAS,GAAKL,OAAOS,eAAeG,EAAOI,EAAWC,IAAID,IAAc,MAAO,UAAS1B,EAAY4B,EAAWC,GAAuI,MAAvHD,IAAWP,EAAiBrB,EAAYS,UAAUmB,GAAeC,GAAYR,EAAiBrB,EAAY6B,GAAoB7B,MAAsBo/D,EAAS1+D,OAAO41C,QAAQ,SAASh1C,GAAQ,IAAI,GAAIE,GAAE,EAAEA,EAAEq4B,UAAUp4B,OAAOD,IAAI,CAAC,GAAI8N,GAAOuqB,UAAUr4B,EAAG,KAAI,GAAIG,KAAO2N,GAAW5O,OAAOD,UAAU6hB,eAAeliB,KAAKkP,EAAO3N,KAAML,EAAOK,GAAK2N,EAAO3N,IAAQ,MAAOL,IiBpojB9wBQ,EAAArC,EAAA,GjBoojB6zBsC,EAAQrC,EAAuBoC,GiBnojB51BI,EAAAzC,EAAA,GjBmojB84B0C,EAAYzC,EAAuBwC,GiBlojBj7Bm9D,EAAA5/D,EAAA,IjBkojBo+B6/D,EAAQ5/D,EAAuB2/D,GiBjojBngCjkB,EAAA37C,EAAA,GACA07C,EAAA17C,EAAA,GAEM2C,GACJoG,YAAalG,UAAU4D,OAAO1D,WAC9B60D,eAAgB/0D,UAAU8B,KAAK5B,WAC/B80D,QAASh1D,UAAU0qD,KAAKxqD,WACxBuB,UAAWzB,UAAU4D,QAGjBq5D,EAAmB,SAACh+D,GACxB,MACEQ,GAAAlC,QAAAqD,cAAA,MAAAk8D,KAAS79D,EAAMi+D,YAAYld,OAAQmd,OAAQ,WAAYC,UAAW,SAAUnU,MAAO,oBAAmB,EAAApQ,EAAA+I,SAAQ,oBAI5Gyb,EjBinjBw5E,SAAS98D,GiB/mjBr6E,QAAA88D,GAAYp+D,GAAOzB,EAAAgD,KAAA68D,EAAA,IAAA58D,GAAA7C,EAAA4C,MAAA68D,EAAAz+D,WAAAR,OAAAsC,eAAA28D,IAAAv/D,KAAA0C,KACXvB,GADW,OAAAwB,GAKnBkzD,mBAAqB,SAACC,GACpBnzD,EAAKujC,WACLvjC,EAAKxB,MAAM81D,eAAenB,IAPTnzD,EAUnB68D,YAAc,SAAC1/B,EAAO9F,GACpB,GAAMv5B,GAAQq/B,EAAM0O,MAChB/tC,GAAMY,OAAS,GACjB27C,aAAWyiB,YAAYh/D,GAAO28C,KAAK,SAACC,GAClC16C,EAAKujC,UACL,KAAK,GAAI9kC,GAAI,EAAIA,EAAIi8C,EAAIr0C,KAAK02D,MAAMr+D,OAAQD,IAAK,CAC/C,GAAMiqD,GAAOhO,EAAIr0C,KAAK02D,MAAMt+D,GACxB7B,IACJA,GAAIkB,MAAQ4qD,EAAK3sB,KACjBn/B,EAAI62D,MAAQ/K,EAAK+K,MACjB72D,EAAIogE,MACFh+D,EAAAlC,QAAAqD,cAACnB,EAAAlC,QAAMyqD,SAAP,KACEvoD,EAAAlC,QAAAqD,cAAA,OAAKwoD,IAAKD,EAAKE,WAAY5nD,UAAU,0CAA0C6nD,IAAI,KACnF7pD,EAAAlC,QAAAqD,cAAA,QAAMa,UAAU,oCAAoC0nD,EAAK3sB,OAE7D/7B,EAAKujC,QAAQ/8B,KAAK5J,GAEpBy6B,EAASr3B,EAAKujC,YA3BDvjC,EAgCnBwzD,YAAc,WACZxzD,EAAKk+C,KAAK+e,WAAWC,OAAOpc,aAAeluB,OAAQ,WA/BnD5yB,EAAKujC,WAFYvjC,EjB+mjBg1H,MAA56CzC,GAAUq/D,EAAW98D,GAA2gCzB,EAAau+D,IAAah+D,IAAI,SAASd,MAAM,WiB1kjBlgH,MACEkB,GAAAlC,QAAAqD,cAACo8D,EAAAz/D,SACCqgE,aAAA,EACAC,iBAAA,EACAC,YAAcb,oBACdjI,QAASx0D,KAAKvB,MAAM+1D,QACpBsI,YAAa98D,KAAK88D,YAClB/b,SAAU/gD,KAAKmzD,mBACfztD,YAAa1F,KAAKvB,MAAMiH,YACxBzE,UAAA,eAA0BjB,KAAKvB,MAAMwC,UACrCi/C,IAAI,mBjBgkjBg2H2c,GiBjnjBn1Hp8D,UAAMC,UAuD/Bm8D,GAAWv9D,UAAYA,EjB0jjB45H5C,EAAQK,QiBxjjB56H8/D,GjB4jjBTU,IACA,SAAU9gE,EAAQC,EAASC,GkBzojBjCA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KAEAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,MlB+ojBM6gE,IACA,SAAU/gE,EAAQC,GmB7pjBxB+gE,MAAAC,UAAAC,EAAAF,MAAAC,UAAApnB,OAAA,SAAkDsnB,QAAA,sUAAAhkC,SAAA,uDAAAxT,OAAA,kEAAqdq3C,MAAAC,UAAAG,aAAA,cAA6CC,OAAOvxB,QAAA,qDAAAwxB,YAAA,EAAAC,MAAA,WAAAC,QAAoG76D,QAAQmpC,QAAA,8CAAAwxB,YAAA,GAAoEG,WAAY3xB,QAAA,4GAAAwxB,YAAA,EAAAC,MAAA,aAAoJtxB,SAAA,qIAAuI+wB,OAAAC,UAAAC,EAAA,oBAAAF,OAAAC,UAAAC,EAAA,SnBmqjB5gCQ,IACA,SAAU1hE,EAAQC,GoBpqjBxB+gE,MAAAC,UAAAU,IAAAX,MAAAC,UAAApnB,OAAA,KAAgDsnB,QAAA,8lBAAAS,QAAA,qBAAAzkC,SAAA,iJAA6xB6jC,MAAAC,UAAAG,aAAA,iBAAgDS,cAAc/xB,QAAA,iBAAAwxB,YAAA,KAAwCN,MAAAC,UAAAG,aAAA,gBAA+CU,cAAchyB,QAAA,oCAA0ByxB,MAAA,SAAAQ,QAAA,MpB0qjBpgCC,IACA,SAAUhiE,EAAQC,GqB3qjBxB+gE,MAAAC,UAAAgB,OAAAjB,MAAAC,UAAApnB,OAAA,SAAuDsnB,QAAA,6oBAAAx6D,SAA8pBmpC,QAAA,yCAAAiyB,QAAA,IAA6DjyB,QAAA,mCAAAiyB,QAAA,IAAqDF,eAAiB/xB,QAAA,mCAAA0xB,QAAmDU,YAAA,QAAoBpyB,QAAA,2BAAAwxB,YAAA,EAAAE,QAAyDU,YAAA,QAAoBpyB,QAAA,0EAAAwxB,YAAA,EAAAE,QAAwGU,YAAA,QAAoBpyB,QAAA,wEAAAwxB,YAAA,EAAAE,QAAsGU,YAAA,QAAkBv4C,OAAA,8CAAqDq3C,MAAAC,UAAAG,aAAA,uBAAsDe,kBAAkBryB,QAAA,8BAAA0xB,QAA8CY,SAAA,OAAAP,cAAgC/xB,QAAA,yBAAA0xB,QAAyCU,YAAA,OAAkBf,QAAAH,MAAAC,UAAAgB,OAAAd,QAAAe,YAAA,cAAiEG,cAAevyB,QAAA,aAAAwxB,YAAA,EAAAC,MAAA,WAAAC,QAA4DC,WAAW3xB,QAAA,2FAAAwxB,YAAA,EAAAC,MAAA,eAAoIP,MAAAC,UAAAqB,OAAAtB,MAAAC,UAAAgB,QrBirjB3vDM,IACA,SAAUviE,EAAQC,GsBlrjBxB+gE,MAAAC,UAAAuB,KAAAxB,MAAAC,UAAApnB,OAAA,SAAqDsnB,QAAA,6VAAAx3C,OAAA,sFAAAwT,UAA4c2S,QAAA,4FAAAwxB,YAAA,KAAmHN,MAAAC,UAAAG,aAAA,mBAAkDqB,YAAYlB,MAAA,cAAAzxB,QAAA,eAAAwxB,YAAA,KAA0DN,MAAAC,UAAAG,aAAA,qBAAoDsB,UAAU5yB,QAAA,+CAAAyxB,MAAA,WAAAC,QAAgFL,QAAAH,MAAAC,UAAAuB,KAAArB,QAAAe,YAAA,iBtBwrjBp3BS,IACA,SAAU3iE,EAAQC,GuBzrjBxB+gE,MAAAC,UAAA2B,QAAwB1U,SAASpe,QAAA,eAAAwxB,YAAA,GAAqCuB,wBAAyB/yB,QAAA,sBAAAiyB,QAAA,EAAAR,MAAA,UAAuD56D,QAASmpC,QAAA,kCAAAiyB,QAAA,GAAoDK,UAAatyB,QAAA,4CAAAwxB,YAAA,GAAkEO,cAAe/xB,QAAA,mBAAAwxB,YAAA,GAAyCH,QAAA,wLAAA2B,QAAA,shBAAAlB,QAAA,0BAAAj4C,OAAA,6FAAAwT,SAAA,uEAAA+kC,YAAA,kBvB+rjBpVa,IACA,SAAU/iE,EAAQC,GwBhsjBxB+gE,MAAAC,UAAA+B,KAAqB9U,SAASpe,QAAA,gDAAAwxB,YAAA,GAAsE36D,QAASmpC,QAAA,6CAAAiyB,QAAA,EAAAT,YAAA,GAA6EtyB,SAAA,+CAAAozB,SAAA,4FAAAjB,QAAA,+8EAAAS,QAAA,2BAAAj4C,OAAA,wCAAAwT,SAAA,yHAAA+kC,YAAA,gBxBssjBpLe,IACA,SAAUjjE,EAAQC,GyBvsjBxB+gE,MAAAC,UAAAiC,MAAAlC,MAAAC,UAAApnB,OAAA,SAAsDlzC,QAAQmpC,QAAA,uEAAAiyB,QAAA,EAAAP,QAAiG2B,eAAerzB,QAAA,6BAAA0xB,QAA6C4B,WAAWtzB,QAAA,YAAAyxB,MAAA,gBAAyCJ,QAAA,giBAAAx3C,OAAA,kFAAAsmB,SAAA,0CAA+pBozB,OAAA,iJAAAP,QAAA,siBAA0tB9B,MAAAC,UAAAiC,MAAAv8D,OAAA66D,OAAA2B,cAAA3B,OAAA14B,KAAAk4B,MAAAC,UAAAiC,OzB6sjBloDI,IACA,SAAUtjE,EAAQC,KAMlBsjE,IACA,SAAUvjE,EAAQC,KAMlBujE,IACA,SAAUxjE,EAAQC,I0B5tjBxB,WAAY,sBAAAW,YAAAogE,OAAApgE,KAAAuC,SAAA,CAAwD,GAAAsgE,MAAAliD,KAAalZ,EAAA,YAAgB24D,OAAA7O,QAAAuR,UAAyB,IAAAC,GAAA3C,MAAA7O,QAAAuR,QAAAE,eAAA,SAAAv7D,EAAAs7D,GAAyD,GAAAE,EAAMA,GAAA,kBAAAF,KAAA,SAAAF,GAAqC,GAAAliD,EAAM,yBAAAoiD,GAAA5d,SAAAxkC,EAAApe,SAAAQ,cAAA,UAAA4d,EAAA0D,KAAA,SAAA1D,EAAAopC,iBAAA,mBAA6HgZ,EAAA5d,QAAAllD,KAAA0C,KAAAkgE,MAAuB,gBAAAE,GAAAtjB,KAAA9+B,EAAApe,SAAAQ,cAAA,KAAA4d,EAAA2jC,KAAAye,EAAAtjB,KAAA9+B,EAAApe,SAAAQ,cAAA,QAAA4d,EAAAuiD,YAAAH,EAAAtgB,KAAA9hC,GAA+HkiD,EAAAz5D,KAAAuX,EAAAlZ,GAAAw7D,IAAgBA,EAAA7C,MAAA7O,QAAAuR,QAAAK,KAAA,SAAAJ,GAA0C,GAAAE,GAAAF,EAAAxhB,QAAAG,UAA2B,IAAAuhB,GAAA,OAAAr6D,KAAAq6D,EAAAG,YAAAH,EAAAvhB,WAAA2hB,UAAAC,SAAA,iBAAiF,GAAAC,GAAAhhE,SAAAQ,cAAA,MAAoCwgE,GAAAF,UAAA/8C,IAAA,gBAAA28C,EAAAvhB,WAAA8e,aAAA+C,EAAAN,GAAAM,EAAAvgE,YAAAigE,EAAgF,IAAA5hE,GAAAkB,SAAAQ,cAAA,MAAoC1B,GAAAgiE,UAAA/8C,IAAA,WAAA/jB,SAAAs/C,KAAA2hB,aAAA,wBAAAX,EAAAtgE,SAAAs/C,KAAA+D,aAAA,sBAAA5/C,MAAA,KAAAsD,IAAA,SAAAu5D,GAA4J,MAAAliD,GAAAkiD,IAAAp7D,KAAeo7D,EAAAr5D,QAAA,SAAAq5D,GAAyB,GAAAliD,GAAAkiD,EAAAE,EAAW,IAAApiD,EAAA,CAAM,GAAAlZ,GAAAlF,SAAAQ,cAAA,MAAoC0E,GAAA47D,UAAA/8C,IAAA,gBAAA7e,EAAAzE,YAAA2d,GAAAtf,EAAA2B,YAAAyE,MAAmE87D,EAAAvgE,YAAA3B,IAAqB0hE,GAAA,iBAAAF,GAAsB,GAAAliD,GAAAkiD,EAAAthB,QAAAG,UAA2B,IAAA/gC,GAAA,OAAA/X,KAAA+X,EAAAyiD,WAAAziD,EAAA6iD,aAAA,eAA6D,GAAA/7D,GAAAs7D,EAAAE,EAAAtiD,EAAAilC,aAAA,aAAuC,KAAImd,EAAAxgE,SAAAi/C,cAAA,YAAAyhB,GAAwC,MAAAM,IAAU,MAAAR,GAAAt7D,EAAAs7D,EAAAve,SAAA7jC,EAAA6iD,aAAA,aAAA/7D,EAAAlF,SAAAQ,cAAA,KAAA0E,EAAA68C,KAAA3jC,EAAAilC,aAAA,aAAAn+C,EAAAlF,SAAAQ,cAAA,QAAA0E,EAAAy7D,YAAAD,GAAAx7D,KAAwK24D,MAAAqD,MAAAn9C,IAAA,WAAA28C,Q1BkujBn/CS,IACA,SAAUtkE,EAAQC,I2BnujBxB,WAAY,sBAAAW,YAAAogE,OAAApgE,KAAAuC,SAAA,CAAwD,IAAA69D,MAAA7O,QAAAuR,QAAA,WAAAa,SAAApQ,KAAA,sDAA4G,IAAA5yC,IAAOijD,KAAA,OAAAC,IAAA,MAAAC,IAAA,MAAAC,OAAA,SAAAC,IAAA,MAAAC,MAAA,SAAAC,WAAA,aAAAC,KAAA,OAAAC,aAAA,eAAAC,WAAA,uBAAAC,IAAA,MAAAC,YAAA,cAAAC,KAAA,OAAAC,SAAA,WAAAC,QAAA,gBAAAC,OAAA,eAAAC,WAAA,aAAAC,OAAA,SAAAC,MAAA,QAAAzD,OAAA,KAAAN,IAAA,MAAAgE,aAAA,eAAAC,IAAA,0BAAAC,aAAA,aAAAC,OAAA,gBAAAC,IAAA,MAAAC,OAAA,KAAAC,OAAA,SAAAC,KAAA,OAAAC,QAAA,UAAAC,KAAA,OAAAC,KAAA,uBAAAC,KAAA,iCAAAC,UAAA,YAAAC,QAAA,WAAAC,KAAA,OAAAC,MAAA,QAAAC,WAAA,aAAAC,QAAA,UAAAC,oBAAA,oBAAAC,OAAA,SAAAC,IAAA,MAAAC,KAAA,OAAAC,KAAA,OAAAC,MAAA,QAAAC,KAAA,OAAAC,WAAA,cAAAC,MAAA,QAAAC,OAAA,SAAAC,OAAA,UAAAC,aAAA,gBAAAC,IAAA,MAAAC,aAAA,aAAAC,MAAA,SAAAC,WAAA,aAAAt8B,WAAA,cAAAu8B,SAAA,mBAAAC,EAAA,oBAAAC,IAAA,YAAAC,IAAA,YAAAC,MAAA,SAAAn/B,KAAA,0BAAAo/B,IAAA,MAAAC,KAAA,cAAAC,KAAA,cAAApF,IAAA,MAAAqF,IAAA,yBAAAvjC,IAAA,MAAAwjC,IAAA,qBAAAC,WAAA,aAAAC,MAAA,SAAAC,KAAA,OAAAC,IAAA,MAAAC,eAAA,eAAAC,KAAA,cAAAtM,KAAA,cAAAuM,KAAA,mBAAAC,OAAA,SAAAC,KAAA,OAAg8C/H,OAAA7O,QAAAuR,QAAAE,eAAA,yBAAAD,GAAiE,GAAAF,GAAAE,EAAAxhB,QAAAG,UAA2B,IAAAmhB,GAAA,OAAAj6D,KAAAi6D,EAAAO,UAAA,CAA+B,GAAAgF,GAAAvF,EAAAjd,aAAA,kBAAAjlC,EAAAoiD,EAAAsF,WAAAtF,EAAAsF,UAAAtF,EAAAsF,SAAAt5B,UAAA,KAAAP,cAAAu0B,EAAAsF,SAAAt5B,UAAA,EAAkI,IAAAq5B,EAAA,CAAM,GAAA/mE,GAAAkB,SAAAQ,cAAA,OAAqC,OAAA1B,GAAA6hE,YAAAkF,EAAA/mE,W3ByujBz5DinE,EACA,SAAUlpE,EAAQC,EAASC,GAEjC,YACAiB,QAAOS,eAAe3B,EAAQ,cAAcqB,OAAM,IAAOrB,EAAQ49C,eAAWh2C,E4B7ujB5E,IAAAshE,GAAAjpE,EAAA,I5B6ujBoIkpE,EAAkI,SAAgChpE,GAAK,MAAOA,IAAKA,EAAIC,WAAWD,GAAKE,QAAQF,IAAzK+oE,G4B5ujB1KE,EAAAnpE,EAAA,IACA07C,EAAA17C,EAAA,GAEI29C,EAAa,GAAIyrB,cACjBC,EAAeC,UAAOC,KAAK,cAC/B5rB,GAAW6rB,oBAAqB5pB,oBAAUypB,iB5BuujB8etpE,E4BrujB/gB49C,c5ByujBH8rB,IACA,SAAU3pE,EAAQC,I6BlvjBxB,WAAY,sBAAAW,YAAAogE,OAAApgE,KAAAuC,SAAA,CAAwD,GAAAoe,GAAA,eAAAkiD,EAAA,WAAAp7D,EAAA,SAAAkZ,GAAgD,GAAAlZ,GAAA87D,EAAA5iD,GAAAynD,EAAA3gE,EAAA,cAA8B,iBAAA2gE,GAAA,aAAAA,EAAA,CAAmC,GAAAY,GAAAroD,EAAA6gC,cAAA,QAAAngD,EAAAsf,EAAA6gC,cAAA,sBAAAuhB,EAAApiD,EAAA6gC,cAAA,uBAAAyhB,EAAA+F,EAAA9F,YAAAl9D,MAAA68D,EAAwIE,OAAAxgE,SAAAQ,cAAA,QAAAggE,EAAAn/D,UAAA,qBAAAolE,EAAAhmE,YAAA+/D,MAAA5gB,MAAA8mB,QAAA,QAAAhG,EAAAz5D,QAAA,SAAAmX,EAAAkiD,GAAwIE,EAAAG,YAAAviD,GAAA,IAAsB,IAAAlZ,GAAAs7D,EAAAzc,wBAAAK,MAAuCtlD,GAAAa,SAAA2gE,GAAA1gB,MAAAwE,OAAAl/C,EAAA,OAAkCs7D,EAAAG,YAAA,GAAAH,EAAA5gB,MAAA8mB,QAAA,SAA2C1F,EAAA,SAAA5iD,GAAe,MAAAA,GAAA65B,OAAA4H,kCAAAzhC,KAAAuoD,cAAA,UAAgF1uB,QAAAuP,iBAAA,oBAA4CzkD,MAAAhF,UAAAkJ,QAAAvJ,KAAAsC,SAAA4mE,iBAAA,OAAAxoD,GAAAlZ,KAAoE24D,MAAAqD,MAAAn9C,IAAA,oBAAA3F,GAAyC,GAAAA,EAAAyoD,KAAA,CAAW,GAAA7F,GAAA5iD,EAAA4gC,QAAAG,WAAA0mB,EAAA,wBAAsD,IAAA7E,GAAA,OAAA36D,KAAA26D,EAAAH,YAAAgF,EAAAx/D,KAAA26D,EAAA3/D,YAAAwkE,EAAAx/D,KAAA+X,EAAA4gC,QAAA39C,cAAA+c,EAAA4gC,QAAAC,cAAA,uBAAmI4mB,EAAAx/D,KAAA+X,EAAA4gC,QAAA39C,aAAA+c,EAAA4gC,QAAA39C,UAAA+c,EAAA4gC,QAAA39C,UAAAw2B,QAAAguC,EAAA,MAAAA,EAAAx/D,KAAA26D,EAAA3/D,aAAA2/D,EAAA3/D,WAAA,gBAA0I,IAAAolE,GAAA3nE,EAAAsf,EAAAyoD,KAAAljE,MAAA28D,GAAAE,EAAA1hE,IAAAC,OAAA,IAAA2hE,EAAA,GAAA39D,OAAAy9D,EAAA,EAA0DE,KAAAnxD,KAAA,iBAAAk3D,EAAAzmE,SAAAQ,cAAA,QAAAimE,EAAAK,aAAA,sBAAAL,EAAAplE,UAAA,oBAAAolE,EAAAM,UAAArG,EAAAM,EAAAC,aAAA,gBAAAD,EAAAphB,MAAAonB,aAAA,eAAA3pD,SAAA2jD,EAAA3d,aAAA,sBAAAjlC,EAAA4gC,QAAAv+C,YAAAgmE,GAAAvhE,EAAA87D,GAAAnD,MAAAqD,MAAArT,IAAA,eAAAzvC,OAAiUy/C,MAAAqD,MAAAn9C,IAAA,wBAAA3F,GAA6CA,EAAA4wC,QAAA5wC,EAAA4wC,YAAuB5wC,EAAA4wC,QAAAiY,aAAA,IAA0BpJ,MAAA7O,QAAAiY,aAA6BC,QAAA,SAAA5G,EAAAp7D,GAAsB,WAAAo7D,EAAAphB,SAAAohB,EAAAQ,UAAAC,SAAA3iD,GAAA,CAA+C,GAAA4iD,GAAAV,EAAArhB,cAAA,sBAAA4mB,EAAAxoD,SAAAijD,EAAAjd,aAAA,qBAAAojB,EAAAZ,GAAA7E,EAAArhE,SAAAZ,OAAA,EAAqH8mE,GAAA3gE,MAAA2gE,GAAA3gE,EAAAuhE,IAAAvhE,EAAAuhE,EAAsB,IAAA3nE,GAAAoG,EAAA2gE,CAAU,OAAA7E,GAAArhE,SAAAb,W7BwvjB/1DqoE,IACA,SAAUtqE,EAAQuqE,EAAqBrqE,GAE7C,Y8BzvjBA,SAAAK,GAAAC,EAAAC,GAAiD,KAAAD,YAAAC,IAA0C,SAAAC,WAAA,qCAE3F,QAAAC,GAAAC,EAAAC,GAAiD,IAAAD,EAAa,SAAAE,gBAAA,4DAAyF,QAAAD,GAAA,iBAAAA,IAAA,mBAAAA,GAAAD,EAAAC,EAEvJ,QAAAE,GAAAC,EAAAC,GAA0C,sBAAAA,IAAA,OAAAA,EAA+D,SAAAP,WAAA,iEAAAO,GAAuGD,GAAAE,UAAAC,OAAAC,OAAAH,KAAAC,WAAyEG,aAAeC,MAAAN,EAAAO,YAAA,EAAAC,UAAA,EAAAC,cAAA,KAA6ER,IAAAE,OAAAO,eAAAP,OAAAO,eAAAV,EAAAC,GAAAD,EAAAW,UAAAV,G9BsvjBrXE,OAAOS,eAAe2oE,EAAqB,cAAgBjpE,OAAO,GAC7C,IAAIkpE,GAAsCtqE,EAAoB,GAC1DuqE,EAA8CvqE,EAAoBmI,EAAEmiE,GACpEE,EAAsCxqE,EAAoB,IAC1DyqE,EAAqDzqE,EAAoB,IACzE0qE,EAA4C1qE,EAAoB,KAChE2qE,EAAuD3qE,EAAoB,K8BlwjBpG4qE,EAAA5qE,EAAA,KAAA2B,GAAA3B,EAAAmI,EAAAyiE,GAAA,WAAgC,QAAAhpE,GAAAC,EAAAC,GAA2C,OAAAC,GAAA,EAAgBA,EAAAD,EAAAE,OAAkBD,IAAA,CAAO,GAAAE,GAAAH,EAAAC,EAA2BE,GAAAZ,WAAAY,EAAAZ,aAAA,EAAwDY,EAAAV,cAAA,EAAgC,SAAAU,OAAAX,UAAA,GAAuDL,OAAAS,eAAAG,EAAAI,EAAAC,IAAAD,IAA+D,gBAAA1B,EAAA4B,EAAAC,GAA2L,MAAlID,IAAAP,EAAArB,EAAAS,UAAAmB,GAAqEC,GAAAR,EAAArB,EAAA6B,GAA6D7B,OAexhBsqE,EAAA,SAAAC,GAGA,QAAAD,GAAA/oE,GACAzB,EAAAgD,KAAAwnE,EAEA,IAAAvnE,GAAA7C,EAAA4C,MAAAwnE,EAAAppE,WAAAR,OAAAsC,eAAAsnE,IAAAlqE,KAAA0C,KAAAvB,GAMA,OAJAipE,GAAApqE,KAAA2C,GAEAA,EAAAlC,MAAAopE,EAAA,MAAAtpE,SACAoC,EAAA0nE,UAAA,GAAAN,GAAA,EACApnE,EAoBA,MA/BAzC,GAAAgqE,EAAAC,GAcAnpE,EAAAkpE,IACA3oE,IAAA,SACAd,MAAA,WACA,GAAAiiD,GAAAhgD,KAAAvB,MAAAuhD,mBACA4nB,EAAA5nE,KAAAvB,MAAAwhD,mBACA4nB,EAAA7nE,KAAA2nE,UAAAG,gBAAA9nB,EAAA4nB,EAEA,OADA5nE,MAAAjC,MAAAopE,EAAA,MAAAtpE,QAAiC+B,SAAAioE,IACjCX,EAAA9G,EAAAhgE,cAAAgnE,EAAA,QACA5nB,OAAgBsI,MAAA,QAChBigB,WAAA/nE,KAAAgoE,eACAC,WAAAX,EAAA,EACAvpE,MAAAiC,KAAAjC,MACAmqE,UAAA,QAKAV,GACCN,EAAA9G,EAAA+H,eAEDT,EAAA,WACA1nE,KAAAgoE,eAAA,SAAAvpE,GACA,GAAA6/C,GAAA7/C,EAAA6/C,KACApzB,EAAAzsB,EAAAysB,OAEAk9C,EAAA9pB,EAAAh4C,KAAAid,IAAA,cACA8kD,EAAAn9C,EAAA5kB,KAAAid,IAAA,aACA,sBAAA6kD,EACAC,EACA,eAAA/pB,EAAA58B,MAAA,eAAA48B,EAAA58B,KACAwlD,EAAA9G,EAAAhgE,cACA,OACaa,UAAA,wBACbrD,OAAA0pE,EAAA,GAAA7oE,IAGAb,OAAA0pE,EAAA,GAAA7oE,GAEAyoE,EAAA9G,EAAAhgE,cACA,OACWa,UAAA,cACXrD,OAAA0pE,EAAA,GAAA7oE,IAGK,iBAAA2pE,EACLC,EACA,eAAA/pB,EAAA58B,MAAA,eAAA48B,EAAA58B,KACAwlD,EAAA9G,EAAAhgE,cACA,OACaa,UAAA,0BACbrD,OAAA0pE,EAAA,GAAA7oE,IAGAb,OAAA0pE,EAAA,GAAA7oE,GAEAyoE,EAAA9G,EAAAhgE,cACA,OACWa,UAAA,gBACXrD,OAAA0pE,EAAA,GAAA7oE,IAGK,kBAAA2pE,EACLC,EACAzqE,OAAA0pE,EAAA,GAAA7oE,GAEAyoE,EAAA9G,EAAAhgE,cACA,OACWa,UAAA,iBACXrD,OAAA0pE,EAAA,GAAA7oE,IAIAb,OAAA0pE,EAAA,GAAA7oE,IAKAuoE,GAAA,W9BywjBMsB,IACA,SAAU7rE,EAAQuqE,EAAqBrqE,GAE7C,YACqB,IAAI4rE,GAAsC5rE,EAAoB,IAKlDA,GAAoB6rE,EAAExB,EAAqB,IAAK,WAAa,MAAOuB,GAAuC,KAOtIE,IACA,SAAUhsE,EAAQuqE,EAAqBrqE,GAE7C,Y+Br4jBA,SAAAk4D,GAAAC,GAAkC,GAAAnyD,MAAA0c,QAAAy1C,GAAA,CAA0B,OAAAp2D,GAAA,EAAAq2D,EAAApyD,MAAAmyD,EAAAn2D,QAA0CD,EAAAo2D,EAAAn2D,OAAgBD,IAAOq2D,EAAAr2D,GAAAo2D,EAAAp2D,EAAoB,OAAAq2D,GAAsB,MAAApyD,OAAAqyD,KAAAF,GAEvK,QAAA93D,GAAAC,EAAAC,GAAiD,KAAAD,YAAAC,IAA0C,SAAAC,WAAA,qCAQ3F,QAAAurE,GAAAtI,EAAAuI,GACA,MAAAvI,GAAA3gE,SAAAkpE,EAAAlpE,SAGA2gE,EAAA1+C,OAAAinD,EAAAjnD,OAGA0+C,EAAAwI,SAAAD,EAAAC,WAIAC,EAAAzI,EAAA/5B,QAAA+5B,EAAAuI,KAIAvI,EAAA3gE,SAAAkpE,EAAAlpE,QAAA,SAAA2gE,EAAA3gE,OAEA7B,OAAAkrE,EAAA,GAAAC,EAAA,KAAAlrE,OAAAuiE,GAAAtgB,KAAAipB,EAAA,KAAAlrE,OAAA8qE,GAAA7oB,OAAA,IACA,UAMAsgB,EAAA3gE,SAAAkpE,EAAAlpE,QAAA,SAAA2gE,EAAA3gE,UAEA7B,OAAAkrE,EAAA,GAAAC,EAAA,KAAAlrE,OAAAuiE,GAAAtgB,KAAAipB,EAAA,KAAAlrE,OAAA8qE,GAAA7oB,OAAA,IAAA+oB,EAAAzI,EAAA/5B,QAAA+5B,EAAA4I,MAAAL,EAAAK,SACA,UAMA5I,EAAA1+C,OAAAinD,EAAAjnD,OAAA0+C,EAAA1+C,KAAAyG,SAAA,iBAAAi4C,EAAA1+C,KAAAyG,SAAA,oBACAvqB,OAAAkrE,EAAA,GAAAC,EAAA,MAAAlrE,OAAAuiE,GAAAtgB,KAAAipB,EAAA,MAAAlrE,OAAA8qE,GAAA7oB,OAAA,GACA,UAIAsgB,EAAA1+C,OAAAinD,EAAAjnD,OAAA0+C,EAAAliB,MAAAv/C,OAAA,GAAAgqE,EAAAzqB,MAAAv/C,OAAA,kBAAAyhE,EAAA1+C,MACA9jB,OAAAkrE,EAAA,GAAAC,EAAA,MAAAlrE,OAAAuiE,GAAAtgB,KAAAipB,EAAA,MAAAlrE,OAAA8qE,GAAA7oB,OAAA,GACA,UAIAsgB,EAAA1+C,OAAAinD,EAAAjnD,MAAA,cAAA0+C,EAAA1+C,MACA9jB,OAAAkrE,EAAA,GAAAC,EAAA,MAAAlrE,OAAAuiE,GAAAtgB,KAAAipB,EAAA,MAAAlrE,OAAA8qE,GAAA7oB,OAAA,GACA,UAIAsgB,EAAA1+C,OAAAinD,EAAAjnD,MAAA,UAAA0+C,EAAA1+C,MACA9jB,OAAAkrE,EAAA,GAAAC,EAAA,MAAAlrE,OAAAuiE,GAAAtgB,KAAAipB,EAAA,MAAAlrE,OAAA8qE,GAAA7oB,OAAA,GACA,UAUAsgB,EAAA1+C,OAAAinD,EAAAjnD,MAAA,cAAA0+C,EAAA1+C,KACA,UAGA0+C,EAAA1+C,OAAAinD,EAAAjnD,MAAA,eAAA0+C,EAAA1+C,MACA,cAMA,QAAAunD,GAAA7I,EAAAuI,GACA,MAAAvI,KAAAuI,EAgiBA,QAAAO,GAAAC,EAAAC,EAAAC,EAAA5qC,GAIA,GAAA6qC,GAAAH,EAAA31C,MAAAiL,EAAA8qC,OAAA9qC,EAAA+qC,KAAA,GACAC,EAAAL,EAAA51C,MAAAiL,EAAAirC,OAAAjrC,EAAAkrC,KAAA,GACAC,EAAAP,EAAA71C,MAAAiL,EAAAorC,OAAAprC,EAAAqrC,KAAA,EACA9I,SAAA+I,IAAA,iBAAAtrC,EAAAurC,SAAA,KAAAV,EAAA,MAAAG,EAAA,MAAAG,EAAA,K/B6wiB+BjtE,EAAoB6rE,EAAExB,EAAqB,IAAK,WAAa,MAAOiD,IAC9E,IAAIC,GAAuCvtE,EAAoB,KAC3DksE,EAA+ClsE,EAAoBmI,EAAEolE,GACrEpB,EAAiDnsE,EAAoB,KACrEosE,EAAsCpsE,EAAoB,IAC1DwtE,EAAgDxtE,EAAoB,K+Bh5jB7FytE,EAAAztE,EAAA,IAAA2B,GAAA3B,EAAAmI,EAAAslE,GAAA,WAAgC,QAAA7rE,GAAAC,EAAAC,GAA2C,OAAAC,GAAA,EAAgBA,EAAAD,EAAAE,OAAkBD,IAAA,CAAO,GAAAE,GAAAH,EAAAC,EAA2BE,GAAAZ,WAAAY,EAAAZ,aAAA,EAAwDY,EAAAV,cAAA,EAAgC,SAAAU,OAAAX,UAAA,GAAuDL,OAAAS,eAAAG,EAAAI,EAAAC,IAAAD,IAA+D,gBAAA1B,EAAA4B,EAAAC,GAA2L,MAAlID,IAAAP,EAAArB,EAAAS,UAAAmB,GAAqEC,GAAAR,EAAArB,EAAA6B,GAA6D7B,OA0FxhB+sE,EAAA,WACA,QAAAA,KACA,GAAAhqE,GAAAD,IAEAhD,GAAAgD,KAAAiqE,GAEAjqE,KAAAqqE,SAAA,SAAApkB,EAAAD,GACA,GAAAskB,MACAC,EAAA,GAAAC,IAA2B/+C,UAAAi9C,GAC3B6B,GAAAE,UAAAxkB,EAAAD,EACA,QAAAtnD,GAAA,EAAqBA,EAAA6rE,OAAA5rE,OAAsBD,IAAA,CAC3C,GAAAgsE,GAAAH,OAAA7rE,GACAisE,EAAAD,EAAAC,UACA,eAAAA,EACAD,EAAA/hB,KAAAriD,OACAokE,EAAA/hB,KAAAriD,KAAAskE,WAAA,cACAF,EAAA/hB,KAAAriD,KAAAukE,UAAAH,EAAA9qB,SACA8qB,EAAA/hB,KAAAriD,KAAAwkE,WAAA,OAES,cAAAH,EACTD,EAAA/hB,KAAAriD,MACAokE,EAAA/hB,KAAAriD,KAAAskE,WAAA,aACAF,EAAA/hB,KAAAriD,KAAAukE,UAAAH,EAAA9qB,SACA8qB,EAAA/hB,KAAAriD,KAAAwkE,WAAA,GAGAJ,EAAA/hB,KAAAoiB,OAAAlkE,QAAA,SAAAmkE,GACAA,EAAAhC,MAAAviE,KAAAsiE,EAAA,KAAAlrE,OAAA,cAGS,gBAAA8sE,EACTD,EAAA/hB,KAAAriD,MACAokE,EAAA/hB,KAAAriD,KAAAskE,WAAA,eACAF,EAAA/hB,KAAAriD,KAAAukE,WAAA,EACAH,EAAA/hB,KAAAriD,KAAAwkE,UAAAJ,EAAA7qB,UAGA6qB,EAAA/hB,KAAAoiB,OAAAlkE,QAAA,SAAAmkE,GACAA,EAAAhC,MAAAviE,KAAAsiE,EAAA,KAAAlrE,OAAA,iBAGS,iBAAA8sE,EAAA,CACT,GAAAM,OAAA,GACAC,EAAAR,EAAA/hB,KAAAjnC,MAAAgpD,EAAA/hB,KAAAlpD,MACA,UAAAyrE,EAEAD,EAAAhrE,EAAAkrE,kBAAAT,EAAAU,QAAAL,OAAAL,EAAAW,QAAAN,QACWG,EAAA/iD,SAAA,iBAAA+iD,EAAA/iD,SAAA,mBAAA+iD,EAAA/iD,SAAA,aACX8iD,EAAAhrE,EAAAoqE,SAAAK,EAAAU,QAAAltB,MAAAwsB,EAAAW,QAAAntB,OACW,UAAAgtB,GAAA,cAAAA,GAAA,eAAAA,EACXD,EAAAhrE,EAAAoqE,SAAAK,EAAAU,QAAAltB,MAAAwsB,EAAAW,QAAAntB,MAAAwqB,GACW,cAAAwC,IAEXD,EAAAhrE,EAAAoqE,SAAAK,EAAAU,QAAAltB,MAAAwsB,EAAAW,QAAAntB,QAEAwsB,EAAA/hB,KAAAriD,MACAokE,EAAA/hB,KAAAriD,KAAAskE,WAAA,gBACAF,EAAA/hB,KAAAriD,KAAAukE,UAAAH,EAAA9qB,SACA8qB,EAAA/hB,KAAAriD,KAAAwkE,WAAA,EACAJ,EAAA/hB,KAAAzK,MAAA+sB,GAGA,SAAAP,EAAA/hB,KAAAlpD,SACAirE,EAAA/hB,KAAAoiB,OAAAE,GAIAX,EAAA7jE,KAAAikE,EAAA/hB,MAEA,MAAA2hB,IAGAtqE,KAAA8nE,gBAAA,SAAA9nB,EAAAC,GACA,GAAAgG,GAAAroD,OAAAusE,EAAA,aAAAnqB,GAAAtI,SAAA93C,SAAAs+C,MACA8H,EAAApoD,OAAAusE,EAAA,aAAAlqB,GAAAvI,SAAA93C,SAAAs+C,MACAotB,EAAArrE,EAAAoqE,SAAApkB,EAAAD,EAAA0iB,EAGA,OADA4C,GAAArrE,EAAAsrE,kBAAAD,GACAvC,EAAA,SAAAyC,UACAttB,MAAAotB,KA+NA,MA1NAhtE,GAAA2rE,IACAprE,IAAA,oBACAd,MAAA,SAAA0tE,EAAAC,GACA,GAAAnB,GAAA,GAAAC,IAA2B/+C,UAAAi9C,IAC3BiD,IACApB,GAAAE,UAAAgB,EAAAC,EAEA,QAAAhtE,GAAA,EAAqBA,EAAA6rE,OAAA5rE,OAAsBD,IAAA,CAC3C,GAAAktE,GAAArB,OAAA7rE,EACA,eAAAktE,EAAAjB,WACAgB,EAAAllE,KAAAmlE,EAAAjjB,UACS,cAAAijB,EAAAjB,WACTgB,EAAAllE,KAAAsiE,EAAA,KAAAlrE,QACAiiD,KAAA8rB,EAAAjjB,KAAA7I,KACAkpB,SAAArqC,OAAAk2B,EAAA+W,EAAAjjB,KAAAqgB,QAAAD,EAAA,KAAAlrE,QACA6jB,KAAA,MACApb,mBAGS,gBAAAslE,EAAAjB,WACTgB,EAAAllE,KAAAsiE,EAAA,KAAAlrE,QACAiiD,KAAA8rB,EAAAjjB,KAAA7I,KACAkpB,SAAArqC,OAAAk2B,EAAA+W,EAAAjjB,KAAAqgB,QAAAD,EAAA,KAAAlrE,QACA6jB,KAAA,SACApb,mBAGS,iBAAAslE,EAAAjB,WAAA,CAET,GAAAI,GAAA/qE,KAAA6rE,SAAAD,EAAAR,QAAAtrB,KAAA8rB,EAAAP,QAAAvrB,KAAA8rB,EAAAjjB,KAAAqgB,MACA2C,KAAAhtC,OAAAosC,IAGA,MAAAY,MAGA9sE,IAAA,WACAd,MAAA,SAAA+tE,EAAAC,EAAA/C,GACA,GAAAgD,MACAzB,EAAA,GAAAC,IAA2B/+C,UAAAw9C,GAC3BsB,GAAA0B,WAAAH,EAAAC,EAEA,IAAAG,GAAA3B,OACA4B,EAAA,GACA9tB,EAAA6tB,EAAA,GAAAvB,UA0CA,OAzCAuB,GAAArlE,QAAA,SAAAulE,EAAAtqE,EAAAoqE,GACA,GAAAG,GAAA,EACA,aAAAhuB,EACAguB,EAAA,SACS,UAAAhuB,IACTguB,EAAA,OAEAhuB,IAAA+tB,EAAAzB,YACAwB,GAAAC,EAAAzjB,KACA7mD,IAAAoqE,EAAAvtE,OAAA,GACAqtE,EAAAvlE,KAAAsiE,EAAA,KAAAlrE,QACAiiD,KAAAqsB,EACAnD,SAAArqC,OAAAk2B,EAAAmU,IAAAD,EAAA,KAAAlrE,QACA6jB,KAAA2qD,UAISD,EAAAzB,aAAAtsB,IACT2tB,EAAAvlE,KAAAsiE,EAAA,KAAAlrE,QACAiiD,KAAAqsB,EACAnD,SAAArqC,OAAAk2B,EAAAmU,IAAAD,EAAA,KAAAlrE,QACA6jB,KAAA2qD,SAGAhuB,EAAA+tB,EAAAzB,WACAwB,EAAAC,EAAAzjB,KACA7mD,IAAAoqE,EAAAvtE,OAAA,IACA,YAAA0/C,EACAguB,EAAA,SACa,UAAAhuB,IACbguB,EAAA,OAEAL,EAAAvlE,KAAAsiE,EAAA,KAAAlrE,QACAiiD,KAAAqsB,EACAnD,SAAArqC,OAAAk2B,EAAAmU,IAAAD,EAAA,KAAAlrE,QACA6jB,KAAA2qD,aAMAL,KAGAntE,IAAA,qBACAd,MAAA,SAAAuuE,GACA,GAAA5gB,GAAA1rD,KAGAusE,EAAA1D,EAAAzI,EAAAr6B,UAAAumC,GACAE,EAAA3D,EAAAzI,EAAAr6B,UAAAumC,GAGAG,KACAC,KAGAC,KACAC,IAqDA,OAnDAN,GAAApuB,MAAAr3C,QAAA,SAAAy3C,EAAAuuB,EAAA3uB,GACA,WAAAI,EAAA7+C,OAGA,eAAA6+C,EAAAh4C,KAAAskE,WAEA6B,EAAAhmE,KAAA63C,GACW,iBAAAA,EAAAh4C,KAAAskE,WAEX8B,EAAAjmE,KAAA63C,IAGAmuB,EAAAhmE,KAAA63C,GACAouB,EAAAjmE,KAAA63C,KAKAA,EAAAysB,OAAAlkE,QAAA,SAAAimE,GAEA,GAAAC,GAAArhB,EAAAshB,gBAAAF,EAEA,SAAAC,EACAJ,EAAAlmE,KAAAqmE,GACa,WAAAC,EAEbH,EAAAnmE,KAAAqmE,IAGAH,EAAAlmE,KAAAqmE,GACAF,EAAAnmE,KAAAqmE,MAGAL,EAAAhmE,MACAhH,OAAA,OACAsrE,OAAA4B,IAEAD,EAAAjmE,MACAhH,OAAA,OACAsrE,OAAA6B,IAEAA,KACAD,QAKAJ,EAAAruB,MAAAuuB,EACAD,EAAAlmE,KAAA2mE,gBAAA,gBACAV,EAAAjmE,KAAA2mE,gBAAA,gBACAT,EAAAtuB,MAAAwuB,GACAF,EAAAD,MAGA1tE,IAAA,oBACAd,MAAA,SAAAusE,GACA,GAAAte,GAAAhsD,KAGAktE,IAcA,OAZA5C,GAAAzjE,QAAA,SAAAy3C,GACA,qBAAAA,EAAAh4C,KAAAskE,YAAA,cAAAtsB,EAAA58B,KAAA,CACA,GAAAyrD,GAAAnhB,EAAAohB,mBAAA9uB,EAEA4uB,GAAAzmE,KAAA0mE,EAAA,GAAAA,EAAA,QACS,kBAAA7uB,EAAAh4C,KAAAskE,YAAA,UAAAtsB,EAAA58B,MACTsqC,EAAAqhB,wBAAA/uB,GACA4uB,EAAAzmE,KAAA63C,IAEA4uB,EAAAzmE,KAAA63C,KAGA4uB,KAGAruE,IAAA,0BACAd,MAAA,SAAAugD,GACA,GAAA2X,GAAAj2D,IAcA,OAZAs+C,GAAAJ,MAAAr3C,QAAA,SAAAymE,EAAAC,EAAAC,GACA,kBAAAF,EAAAhnE,KAAAskE,YACA0C,EAAApvB,MAAAr3C,QAAA,SAAA4mE,GACA,qBAAAA,EAAAnnE,KAAAskE,YACA,kBAAA6C,EAAAvvB,MAAA,GAAA53C,KAAAskE,WAAA,CACA,GAAA8C,GAAAzX,EAAAmX,mBAAAK,EAAAvvB,MAAA,GACAuvB,GAAAvvB,MAAAwvB,OAMApvB,KAMAz/C,IAAA,kBACAd,MAAA,SAAA+uE,GACA,GAAA9D,GAAAprE,OAAAwsE,EAAA,KAAA0C,EAAA9D,MASA,OAPAA,GAAA5jE,IAAA2jE,EAAA,KAAAlrE,QAAiC6jB,KAAA,SACjC,MACOsnD,EAAA5jE,IAAA2jE,EAAA,KAAAlrE,QAAiC6jB,KAAA,YACxC,SAEA,aAMAuoD,KAGA0D,EAAA,WACA,QAAAA,GAAAhlB,EAAA/I,EAAAC,GACA7iD,EAAAgD,KAAA2tE,GAEA3tE,KAAA2oD,OACA3oD,KAAA4/C,WACA5/C,KAAA6/C,WAoBA,MAjBAvhD,GAAAqvE,IACA9uE,IAAA,QACAd,MAAA,WACA,WAAAuG,KAAAtE,KAAA6/C,YAGAhhD,IAAA,UACAd,MAAA,WACA,WAAAuG,KAAAtE,KAAA4/C,YAGA/gD,IAAA,SACAd,MAAA,WACA,WAAAuG,KAAAtE,KAAA6/C,cAAAv7C,KAAAtE,KAAA4/C,aAIA+tB,KAGAnD,EAAA,WACA,QAAAA,GAAAoD,GACA5wE,EAAAgD,KAAAwqE,GAEAxqE,KAAAyrB,UAAAmiD,EAAAniD,UAAAmiD,EAAAniD,UAAAw9C,MACA3kE,IAAAspE,EAAAC,mBAAA7tE,KAAA6tE,mBAAAD,EAAAC,mBAAgG7tE,KAAA6tE,oBAAA,EAChG7tE,KAAA8tE,eAAAF,EAAAE,eAsMA,MA5LAxvE,GAAAksE,IACA3rE,IAAA,WACAd,MAAA,SAAA4qD,EAAA/I,GACA,GAAAhB,GAAA,GAAA+uB,GAAAhlB,EAAA/I,MAAAt7C,GACAs6C,GAAA+rB,WAAA,QACA3qE,KAAA+tE,MAAAtnE,KAAAm4C,GACA5+C,KAAAuqE,KAAA9jE,KAAAm4C,MAUA//C,IAAA,aACAd,MAAA,SAAA4qD,EAAA9I,GACA,GAAAjB,GAAA,GAAA+uB,GAAAhlB,MAAArkD,GAAAu7C,EACA7/C,MAAAguE,QAAAvnE,KAAAm4C,GACAA,EAAA+rB,WAAA,UACA3qE,KAAAuqE,KAAA9jE,KAAAm4C,MAGA//C,IAAA,cACAd,MAAA,SAAAstE,EAAAD,EAAAvrB,EAAAD,GACA,GAAAhB,GAAA,GAAA+uB,GAAAtC,EAAAzrB,EAAAC,EACAjB,GAAAwsB,UACAxsB,EAAAysB,UACAzsB,EAAA+rB,WAAA,WACA3qE,KAAAiuE,SAAAxnE,KAAAm4C,GACA5+C,KAAAuqE,KAAA9jE,KAAAm4C,MAUA//C,IAAA,YACAd,MAAA,SAAAstE,EAAAD,EAAAvrB,EAAAD,GACA,GAAAhB,GAAA,GAAA+uB,GAAAtC,EAAAzrB,EAAAC,EACAjB,GAAAwsB,UACAxsB,EAAA+rB,WAAA,SACA/rB,EAAAysB,UACArrE,KAAAkuE,OAAAznE,KAAAm4C,GACA5+C,KAAAuqE,KAAA9jE,KAAAm4C,MAGA//C,IAAA,aACAd,MAAA,SAAAowE,EAAAC,GACA,GAAAC,GAAAF,EAAAxvE,OACA2vE,EAAAF,EAAAzvE,OACAmG,EAAA,EACAw7D,EAAA,EACAiO,IAEA,KADAA,EAAAF,MACA/N,EAAAgO,EAAyBhO,GAAA,EAAQiO,EAAAF,GAAA/N,KAAA,GACjC,IAAAx7D,EAAAupE,EAAA,EAA6BvpE,GAAA,EAAQA,IAGrC,IAFAypE,EAAAzpE,MACAypE,EAAAzpE,GAAAwpE,GAAA,EACAhO,EAAAgO,EAAA,EAA+BhO,GAAA,EAAQA,IACvCtgE,KAAAyrB,UAAA0iD,EAAArpE,GAAAspE,EAAA9N,IACAiO,EAAAzpE,GAAAw7D,GAAAiO,EAAAzpE,EAAA,GAAAw7D,EAAA,KAEAiO,EAAAzpE,GAAAw7D,GAAArlC,KAAA+S,IAAAugC,EAAAzpE,EAAA,GAAAw7D,GAAAiO,EAAAzpE,GAAAw7D,EAAA,GAaA,KAPAtgE,KAAAkuE,UACAluE,KAAA+tE,SACA/tE,KAAAguE,WACAhuE,KAAAiuE,YACAjuE,KAAAuqE,QAEAzlE,EAAAw7D,EAAA,EACAx7D,EAAAupE,GAAA/N,EAAAgO,GAAA,CAEA,GADAtuE,KAAAyrB,UAAA0iD,EAAArpE,GAAAspE,EAAA9N,IACA,CAEA,GAAA8K,GAAA+C,EAAArpE,GACAumE,EAAA+C,EAAA9N,EACAtgE,MAAAwuE,UAAAnD,EAAAD,EAAA9K,EAAAx7D,GACAA,IACAw7D,QACSiO,GAAAzpE,EAAA,GAAAw7D,IAAAiO,EAAAzpE,GAAAw7D,EAAA,IACTtgE,KAAAyuE,SAAAN,EAAArpE,MACAA,MAEA9E,KAAA0uE,WAAAN,EAAA9N,MACAA,KAIA,KAAYx7D,EAAAupE,EAAevpE,IAC3B9E,KAAAyuE,SAAAN,EAAArpE,KAGA,MAAYw7D,EAAAgO,EAAehO,IAC3BtgE,KAAA0uE,WAAAN,EAAA9N,SAIAzhE,IAAA,YACAd,MAAA,SAAA4wE,EAAA7wC,EAAAxG,GAGA,GAAA+2C,GAAAM,EAAAhwE,OACA2vE,EAAAxwC,EAAAn/B,OACAmG,EAAA,EACAw7D,EAAA,EACAiO,IAIA,KADAA,EAAAF,MACA/N,EAAAgO,EAAyBhO,GAAA,EAAQiO,EAAAF,GAAA/N,KAAA,GACjC,IAAAx7D,EAAAupE,EAAA,EAA6BvpE,GAAA,EAAQA,IAGrC,IAFAypE,EAAAzpE,MACAypE,EAAAzpE,GAAAwpE,GAAA,EACAhO,EAAAgO,EAAA,EAA+BhO,GAAA,EAAQA,IACvCtgE,KAAAyrB,UAAAkjD,EAAA7pE,GAAAg5B,EAAAwiC,IACAiO,EAAAzpE,GAAAw7D,GAAAiO,EAAAzpE,EAAA,GAAAw7D,EAAA,KAEAiO,EAAAzpE,GAAAw7D,GAAArlC,KAAA+S,IAAAugC,EAAAzpE,EAAA,GAAAw7D,GAAAiO,EAAAzpE,GAAAw7D,EAAA,GAaA,KAPAtgE,KAAAkuE,UACAluE,KAAA+tE,SACA/tE,KAAAguE,WACAhuE,KAAAiuE,YACAjuE,KAAAuqE,QAEAzlE,EAAAw7D,EAAA,EACAx7D,EAAAupE,GAAA/N,EAAAgO,GAAA,CACA,GAAAlG,GAAApoE,KAAAyrB,UAAAkjD,EAAA7pE,GAAAg5B,EAAAwiC,GACA,IAAA8H,EAAA,CACA,GAAAgD,GAAAuD,EAAA7pE,GACAumE,EAAAvtC,EAAAwiC,EACA,aAAA8H,EACApoE,KAAA4uE,YAAAvD,EAAAD,EAAA9K,EAAAx7D,GAGA9E,KAAAwuE,UAAAnD,EAAAD,EAAA9K,EAAAx7D,GAGAwyB,GACAA,EAAA,IAAAgpC,EAAAx7D,GAEAA,IACAw7D,QACSiO,GAAAzpE,EAAA,GAAAw7D,IAAAiO,EAAAzpE,GAAAw7D,EAAA,IACTtgE,KAAAyuE,SAAAE,EAAA7pE,MACAwyB,GACAA,EAAA,MAAAxyB,GAEAA,MAEA9E,KAAA0uE,WAAA5wC,EAAAwiC,MACAhpC,GACAA,EAAA,IAAAgpC,EAAA,GAEAA,KAIA,KAAYx7D,EAAAupE,EAAevpE,IAC3B9E,KAAAyuE,SAAAE,EAAA7pE,MACAwyB,GACAA,EAAA,MAAAxyB,EAIA,MAAYw7D,EAAAgO,EAAehO,IAC3BtgE,KAAA0uE,WAAA5wC,EAAAwiC,MACAhpC,GACAA,EAAA,IAAAgpC,EAAA,OAMAkK,MAaA,WACA,QAAAqE,GAAAjB,GACA5wE,EAAAgD,KAAA6uE,GAEAjB,QACA5tE,KAAAyrB,UAAAmiD,EAAAniD,UAAAmiD,EAAAniD,UAAAw9C,MACA3kE,IAAAspE,EAAAC,mBAAA7tE,KAAA6tE,mBAAAD,EAAAC,mBAAgG7tE,KAAA6tE,oBAAA,EAChG7tE,KAAA8tE,eAAAF,EAAAE,eAEA9tE,KAAA8uE,UACA9uE,KAAAkuE,UACAluE,KAAA+tE,SACA/tE,KAAAguE,WACAhuE,KAAA+uE,eAGAzwE,EAAAuwE,IACAhwE,IAAA,cACAd,MAAA,WACA,GAAAixE,IAAA,EACAC,GAAA,EACAC,MAAA5qE,EAEA,KACA,OAAA6qE,GAAAC,EAAApvE,KAAA8uE,OAAA7/B,OAAA5oC,cAAmE2oE,GAAAG,EAAAC,EAAA7oE,QAAAC,MAAgEwoE,GAAA,GACnI,GAAAvwC,GAAA0wC,EAAApxE,KAEAmrE,GAAAlpE,KAAAmpE,OAAAnpE,KAAAopE,OAAAppE,KAAAqpE,OAAA5qC,IAEO,MAAA+uB,GACPyhB,GAAA,EACAC,EAAA1hB,EACO,QACP,KACAwhB,GAAAI,EAAAC,QACAD,EAAAC,SAES,QACT,GAAAJ,EACA,KAAAC,QAMArwE,IAAA,QACAd,MAAA,SAAAorE,EAAAC,EAAAC,GACArpE,KAAAmpE,SACAnpE,KAAAopE,SACAppE,KAAAqpE,QAEA,IAAAiG,GAAA,GAAA9E,IACA/+C,UAAAzrB,KAAAyrB,UACAoiD,mBAAA7tE,KAAA6tE,mBACAC,eAAA9tE,KAAA8tE,gBAEAwB,GAAA7E,UAAArB,EAAAD,EACA,IAAAoG,GAAA,GAAA/E,IACA/+C,UAAAzrB,KAAAyrB,UACAoiD,mBAAA7tE,KAAA6tE,mBACAC,eAAA9tE,KAAA8tE,gBAEAyB,GAAA9E,UAAApB,EAAAF,EAGA,QADAqG,MACA9wE,EAAA,EAAqBA,EAAAyqE,EAAAxqE,OAAmBD,IAAA,CACxC8wE,EAAA9wE,KACA,QAAA+wE,GAAA,EAAuBA,EAAArG,EAAAzqE,OAAmB8wE,IAC1CD,EAAA9wE,GAAA+wE,GAAA,EAGA,GAAAC,IAAA,EACAC,GAAA,EACAC,MAAAtrE,EAEA,KACA,OAAAurE,GAAAC,EAAAR,EAAApB,OAAAj/B,OAAA5oC,cAAuEqpE,GAAAG,EAAAC,EAAAvpE,QAAAC,MAAmEkpE,GAAA,GAC1I,GAAA/mB,GAAAknB,EAAA9xE,KAEAyxE,GAAA7mB,EAAA9I,UAAA8I,EAAA/I,UAAA,GAEO,MAAA4N,GACPmiB,GAAA,EACAC,EAAApiB,EACO,QACP,KACAkiB,GAAAI,EAAAT,QACAS,EAAAT,SAES,QACT,GAAAM,EACA,KAAAC,IAKA5vE,KAAAwvE,MAGA,QADAO,MACAC,EAAA,EAAsBA,EAAA7G,EAAAxqE,OAAoBqxE,IAAA,CAC1CD,EAAAC,KACA,QAAAC,GAAA,EAAwBA,EAAA5G,EAAA1qE,OAAoBsxE,IAC5CF,EAAAC,GAAAC,GAAA,EAGA,GAAAC,IAAA,EACAC,GAAA,EACAC,MAAA9rE,EAEA,KACA,OAAA+rE,GAAAC,EAAAf,EAAArB,OAAAj/B,OAAA5oC,cAAuE6pE,GAAAG,EAAAC,EAAA/pE,QAAAC,MAAmE0pE,GAAA,GAC1I,GAAAK,GAAAF,EAAAtyE,KAEAgyE,GAAAQ,EAAA1wB,UAAA0wB,EAAA3wB,UAAA,GAEO,MAAA4N,GACP2iB,GAAA,EACAC,EAAA5iB,EACO,QACP,KACA0iB,GAAAI,EAAAjB,QACAiB,EAAAjB,SAES,QACT,GAAAc,EACA,KAAAC,IAKApwE,KAAA+vE,MAoGA,IA5FA,EA4FA5G,EAAAxqE,QA3FA,EA2FAyqE,EAAAzqE,QA1FA,EA0FA0qE,EAAA1qE,OAAA,CAEA,GAAA8/B,KACAA,GAAA8qC,OA/FA,EAgGA9qC,EAAA+qC,KAAAL,EAAAxqE,OAAA,EACA8/B,EAAAirC,OAhGA,EAiGAjrC,EAAAkrC,KAAAP,EAAAzqE,OAAA,EACA8/B,EAAAorC,OAjGA,EAkGAprC,EAAAqrC,KAAAT,EAAA1qE,OAAA,EACA8/B,EAAAurC,aAlGA1lE,GAmGAtE,KAAA8uE,OAAAroE,KAAAg4B,OAKA5/B,IAAA,gBACAd,MAAA,SAAA0gC,GACA,OAAA//B,GAAA+/B,EAAAirC,OAAgChrE,GAAA+/B,EAAAkrC,OAAiBjrE,EAAA,CAGjD,OADA8xE,IAAA,EACAf,EAAAhxC,EAAA8qC,OAAkCkG,GAAAhxC,EAAA+qC,OAAiBiG,EACnD,MAAAzvE,KAAAwvE,KAAAC,GAAA/wE,GAAA,CAGA8xE,GAAA,CACA,OAGA,GAAAA,GAIAxwE,KAAA+uE,YAAAtoE,KAAAzG,KAAAopE,OAAA1qE,IAIA,OAAA+xE,GAAAhyC,EAAAorC,OAAkC4G,GAAAhyC,EAAAqrC,OAAmB2G,EAAA,CAGrD,OADAD,IAAA,EACAE,EAAAjyC,EAAA8qC,OAAoCmH,GAAAjyC,EAAA+qC,OAAmBkH,EACvD,MAAA1wE,KAAA+vE,KAAAW,GAAAD,GAAA,CAIAD,GAAA,CACA,OAGAA,GAIAxwE,KAAA+uE,YAAAtoE,KAAAzG,KAAAqpE,OAAAoH,QAIA5xE,IAAA,WACAd,MAAA,WACA,GAAA4yE,IAAA,EACAC,GAAA,EACAC,MAAAvsE,EAEA,KACA,OAAAwsE,GAAAC,EAAA/wE,KAAA8uE,OAAA7/B,OAAA5oC,cAAqEsqE,GAAAG,EAAAC,EAAAxqE,QAAAC,MAAmEmqE,GAAA,GACxI,GAAAlyC,GAAAqyC,EAAA/yE,KAEA,IAAA0gC,EAAAurC,SACA,OAAAtrE,GAAA,EAA2BA,EAAA+/B,EAAAirC,QAAAjrC,EAAAkrC,OAAgCjrE,EAAA,CAC3D,GAAAi/D,KACAA,GAAAqT,OAAAtyE,EAAA+/B,EAAAirC,OACA/L,EAAAsT,OAAAvyE,EAAA+/B,EAAA8qC,OACA5L,EAAAuT,OAAAxyE,EAAA+/B,EAAAorC,OAEA7pE,KAAA+uE,YAAAtoE,KAAAzG,KAAAopE,OAAAzL,EAAAqT,SAGAvyC,EAAAurC,UACAhqE,KAAAmxE,cAAA1yC,IAGO,MAAA+uB,GACPojB,GAAA,EACAC,EAAArjB,EACO,QACP,KACAmjB,GAAAI,EAAA1B,QACA0B,EAAA1B,SAES,QACT,GAAAuB,EACA,KAAAC,a/Bi6jBMO,IACA,SAAU30E,EAAQuqE,EAAqBrqE,GAE7C,YgCr2lBA,SAAA00E,GAAAC,EAAAC,GACA,IAAAD,EAAA3yE,SAAA4yE,EAAA5yE,OAAA,QACA,KAAA2yE,EAAA3yE,SAAA4yE,EAAA5yE,OAAA,QACA,IAAA2yE,EAAAzlC,gBAAA0lC,EAAA1lC,cAAA,QACA,QAAAylC,EAAA3yE,QAAA,IAAA4yE,EAAA5yE,OAAA,QAEA,IAAA6yE,GAAAC,EAAAH,GACAI,EAAAD,EAAAF,GACA7/B,EAAA8/B,EAAA7yE,OAAA+yE,EAAA/yE,OACAyyC,EAAA,CASA,OARAogC,GAAA3qE,QAAA,SAAA8qE,GACA,OAAAC,GAAAlzE,EAAA,EAA0BkzE,EAAAF,EAAAhzE,GAAmBA,IAC7C,GAAAizE,IAAAC,EAAA,CACAxgC,IACAsgC,EAAA9uD,OAAAlkB,EAAA,EACA,UAGA,EAAA0yC,EAAAM,EAcA,QAAAvS,GAAA21B,GACA,MAAAnyD,OAAA0c,QAAAy1C,KAAAnyB,OAAA,SAAAy9B,EAAAuI,GACA,MAAAvI,GAAAzhC,OAAAQ,EAAAwpC,UACG7T,GAaH,QAAA+c,GAAAC,GAEA,OADA1tD,MACA1lB,EAAA,EAAAsvC,EAAA8jC,EAAAnzE,OAAA,EAAuCD,EAAAsvC,EAAStvC,IAChD0lB,EAAA1lB,GAAAozE,EAAA1lC,UAAA1tC,IAAA,EACG,OAAA0lB,GAGH,QAAAqtD,GAAAK,GAEA,MAAA3yC,GADA2yC,EAAAjmC,cAAAxoC,MAAA,KAAAsD,IAAAkrE,IAxDAl1E,EAAA6rE,EAAAxB,EAAA,qBAAAqK,MhCu6lBMU,IACA,SAAUt1E,EAAQC,KAMlBs1E,EACA,SAAUv1E,EAAQC,EAASC,GAEjC,YACAiB,QAAOS,eAAe3B,EAAQ,cAAcqB,OAAM,IAAOrB,EAAQ8kD,UAAMl9C,EiCl7lBvE,IAAA+zC,GAAA17C,EAAA,GACAs1E,EAAAt1E,EAAA,IAEa6kD,WAEX0wB,UACEC,IAAO,GACPC,MAAO,GACPlwB,IAAO,EACPmwB,GAAO,GACPC,KAAO,IAGTC,YAAa,SAASC,GACpB,GAAqB,mBAAVA,GAAuB,MAAO,GAEzC,IAAGA,EAAQ,EAAG,MAAO,IACrB,IAAMC,IAAS,QAAS,KAAM,KAAM,KAAM,KAAM,KAEhD,IAAc,IAAVD,EAAa,MAAOA,GAAQ,IAAMC,EAAM,EAE5C,IAAM/zE,GAAIue,SAASge,KAAKyU,MAAMzU,KAAK8uC,IAAIyI,GAASv3C,KAAK8uC,IAAI,MAAQ,GACjE,OAAU,KAANrrE,EAAgB8zE,EAAQ,IAAMC,EAAM/zE,IAChC8zE,WAAS,IAAQ9zE,IAAIg0E,QAAQ,GAAK,IAAMD,EAAM/zE,IAGxDi0E,QAAS,WAEP,OADiB96B,OAAO+6B,iBAAmB/6B,OAAO+6B,iBAAmB,GACpD,GAOnBC,kBAGEC,GAAM,UACNC,IAAO,UAGPC,IAAQ,UAGRjkB,IAAQ,WACRkkB,KAAS,WACTC,IAAQ,WACRC,KAAS,WAETC,IAAQ,UACRC,KAAS,UACTC,IAAQ,UACRC,KAAS,UAETC,IAAQ,YACRC,KAAS,YACTC,IAAQ,YACRC,KAAS,YAGTC,IAAO,YACPC,IAAO,YACPC,KAAQ,YACRC,IAAO,YACPC,IAAO,YACPC,IAAO,YACPC,KAAQ,YAGRC,IAAQ,YACRC,IAAQ,YACRC,IAAQ,YACRC,KAAS,YACTC,IAAQ,YACRC,IAAQ,YACRC,IAAQ,YAGRC,IAAQ,UACRC,KAAS,UACTC,IAAQ,UACRzT,IAAQ,UACR0T,IAAQ,UACRC,IAAQ,UACRC,IAAQ,UAGRh4E,QAAY,YAIdi4E,WAAY,SAAUC,GAEpB,OAAkC,GAA9BA,EAASv1C,YAAY,OAKY,IADnB,MAAO,OAAQ,MAAO,MAAO,MAAO,OACvC5P,QAFAmlD,EAASC,OAAOD,EAASv1C,YAAY,KAAO,GAAGgK,gBAUhEyrC,WAAY,SAAUF,GAEpB,OAAkC,GAA9BA,EAASv1C,YAAY,OAKM,IADnB,MAAO,MAAO,OAAQ,OACzB5P,QAFMmlD,EAASC,OAAOD,EAASv1C,YAAY,KAAO,GAAGgK,gBAShE+X,WAAY,SAASh4B,GAOnB,IAAKA,EACH,MAAO,EAIT,KAAK,GAFD2rD,GAAW3rD,EAAKpmB,MAAM,KACtBgyE,KACK32E,EAAI,EAAG42E,EAAMF,EAASz2E,OAAQD,EAAI42E,EAAK52E,IAC9C22E,EAAU5uE,KAAK8uE,mBAAmBH,EAAS12E,IAE7C,OAAO22E,GAAUlmE,KAAK,MAGxBqmE,WAAY,SAASvU,GACnB,MAAOrhE,UAASQ,cAAc,OAC3BC,YAAYT,SAAS61E,eAAexU,IACpCliB,WACA4nB,WAGL+O,oBAAqB,SAAShuB,EAAOiuB,GAInC,GAAMC,GAAY51E,KAAKw1E,WAAWG,GAC5B7D,+DAAmE8D,EAAnE,IAAgFA,EAAhF,SACN,OAAOluB,GAAMjwB,QAAQ,gBAAiBq6C,IAGxC+D,YAAa,SAASxlB,GACpB,GAAIxoD,GAAYwoD,EAAS3wB,YAAY,IACrC,OAAO2wB,GAAS78B,MAAM3rB,EAAU,IAOlCiuE,SAAU,SAASrsD,GAGjB,IAFA,GAAIvD,GAAQuD,EAAKpmB,MAAM,KAAKmwB,MAAM,GAC9BnxB,KACE6jB,EAAMvnB,QACV0D,EAAOoE,KAAK,IAAMyf,EAAM/W,KAAK,MAC7B+W,EAAMvD,KAER,OAAOtgB,GAAOm2B,WAahBu9C,cAAe,SAAStsD,GACtB,MAAa,MAATA,EACKA,GAETA,EAAiC,MAA1BA,EAAKA,EAAK9qB,OAAS,GAAa8qB,EAAOA,EAAK+J,MAAM,EAAG/J,EAAK9qB,OAAQ,GAClE8qB,EAAK+J,MAAM/J,EAAKiW,YAAY,KAAO,KAO5Cs2C,WAAY,SAASvsD,GACnB,GAAI9I,GAAM8I,EAAK+J,MAAM,EAAG/J,EAAKiW,YAAY,KACzC,OAAY,KAAR/e,EACK,IAEAA,GAIXs1D,YAAa,SAASC,EAAOhrD,GAE3B,MADQlrB,MAAKg2E,WAAWE,KACXhrD,GAGfirD,eAAgB,SAASC,EAAU3sD,GACjC,MAAOA,GAAKqG,QAAQsmD,IAAa,GAGnCC,mBAAoB,SAAS5sD,EAAM2sD,EAAUE,GAC3C,MAAO7sD,GAAKgO,QAAQ2+C,EAAUE,IAGhCC,SAAU,SAASC,EAAOC,GACxB,MAA8B,MAA1BD,EAAMA,EAAM73E,OAAO,GACd63E,EAAQC,EAERD,EAAQ,IAAMC,GAIzBC,sBAAuB,WACrB,OAAgD,GAAzC9yB,UAAUC,UAAU/zB,QAAQ,YACjC8zB,UAAUC,UAAU/zB,QAAQ,WAAa,GAG7C6mD,qBAAsB,SAASC,GAC7B,GAAIhwE,GAAO46C,EAAMmxB,UAAY,GAAK,EAClC/rE,GAAOgwE,EAAQ,IAAMhwE,CAErB,OAAO6vD,YAAW,WAAa7vD,EAAO,YAGxCiwE,cAAe,SAASC,EAAMF,GAC5B,GAAIxd,GAAa0d,EAAK1d,YAAc0d,EAAKC,iBACrCnwE,EAAO46C,EAAMmxB,UAAY,GAAK,EAClC/rE,GAAOgwE,EAAQ,IAAMhwE,CACrB,IAAIowE,GAAY,SAQhB,OAPIF,GAAKG,YACPD,EAAY,qBAEK,MAAf5d,GAAqC,YAAfA,IACxB4d,EAAY,oBAGPvgB,WAAW,WAAa7vD,EAAO,IAAMowE,GAG9CE,cAAe,SAAUC,EAAQP,GAC/B,GAAIhwE,GAAO5G,KAAK2yE,UAAY,GAAK,EAEjC,IADA/rE,EAAOgwE,EAAQ,IAAMhwE,EACjBuwE,EAAO9d,QAAS,CAClB,GAAI+d,IAAW,CAIf,QAHID,EAAO/d,YAAqC,MAAtB+d,EAAO/d,YAA4C,YAAtB+d,EAAO/d,aAC5Dge,GAAW,GAENp3E,KAAKq3E,iBAAiBD,EAAUxwE,GAEvC,MAAO5G,MAAKs3E,eAAeH,EAAOn7C,KAAMp1B,IAI5CywE,iBAAkB,WAAiC,GAAxBD,GAAwBrgD,UAAAp4B,OAAA,OAAA2F,KAAAyyB,UAAA,IAAAA,UAAA,GAANnwB,EAAMmwB,UAAA,EAKjD,OAJKnwB,KACHA,EAAO46C,EAAMmxB,UAAY,GAAK,IAEhC/rE,EAAOA,EAAO,GAAK,IAAM,GACf6vD,WAAV,cAA+B2gB,EAAW,cAAgB,KAAMxwE,EAAhE,QAGF0wE,eAAgB,SAASrC,EAAUruE,GAC5BA,IACHA,EAAO46C,EAAMmxB,UAAY,GAAK,IAEhC/rE,EAAOA,EAAO,GAAK,IAAM,EACzB,IAAI2wE,GAAW,EACf,QAAkC,GAA9BtC,EAASv1C,YAAY,KAChB+2B,WAAW,YAAc7vD,EAAO,IAAM5G,KAAK6yE,iBAAL,SAE7C0E,EAAWtC,EAASC,OAAOD,EAASv1C,YAAY,KAAO,GAAGgK,cAGxD1pC,KAAK6yE,iBAAiB0E,GACjB9gB,WAAW,YAAc7vD,EAAO,IAAM5G,KAAK6yE,iBAAiB0E,GAE5D9gB,WAAW,YAAc7vD,EAAO,IAAM5G,KAAK6yE,iBAAL,UAIjD2E,gBAAiB,SAASV,GACxB,GAAIpvB,GACA0R,EAAa0d,EAAK1d,YAAc0d,EAAKC,gBACzC,IAAID,EAAKG,UACPvvB,GAAQ,EAAArP,EAAA+I,SAAQ,yBACX,IAAI01B,EAAKW,SACd/vB,GAAQ,EAAArP,EAAA+I,SAAQ,oBAEhB,QAAOgY,GACL,IAAK,KACH1R,GAAQ,EAAArP,EAAA+I,SAAQ,qBAChB,MACF,KAAK,IACHsG,GAAQ,EAAArP,EAAA+I,SAAQ,oBAChB,MACF,KAAK,aACHsG,GAAQ,EAAArP,EAAA+I,SAAQ,gCAChB,MACF,KAAK,UACHsG,GAAQ,EAAArP,EAAA+I,SAAQ,4BAItB,MAAOsG,IAGTgwB,mBAAoB,SAASl0C,GAC3B,GAAIkkB,EACJ,QAAOlkB,EAAQ41B,YACb,IAAK,KACH1R,GAAQ,EAAArP,EAAA+I,SAAQ,oBAChB,MACF,KAAK,IACHsG,GAAQ,EAAArP,EAAA+I,SAAQ,mBAChB,MACF,KAAK,aACHsG,GAAQ,EAAArP,EAAA+I,SAAQ,+BAChB,MACF,KAAK,UACHsG,GAAQ,EAAArP,EAAA+I,SAAQ,2BAGpB,MAAOsG,IAGTiwB,WAAY,SAASve,GACnB,GAAI1R,EACJ,QAAO0R,GACL,IAAK,KACH1R,GAAQ,EAAArP,EAAA+I,SAAQ,aAChB,MACF,KAAK,IACHsG,GAAQ,EAAArP,EAAA+I,SAAQ,YAChB,MACF,KAAK,QACHsG,GAAQ,EAAArP,EAAA+I,SAAQ,QAChB,MACF,KAAK,aACHsG,GAAQ,EAAArP,EAAA+I,SAAQ,wBAChB,MACF,KAAK,UACHsG,GAAQ,EAAArP,EAAA+I,SAAQ,oBAGpB,MAAOsG,IAGTkwB,sBAAuB,SAASxe,GAC9B,GAAI1R,EACJ,QAAO0R,GACL,IAAK,KACH1R,GAAQ,EAAArP,EAAA+I,SAAQ,yDAChB,MACF,KAAK,IACHsG,GAAQ,EAAArP,EAAA+I,SAAQ,0CAChB,MACF,KAAK,QACHsG,GAAQ,EAAArP,EAAA+I,SAAQ,6DAChB,MACF,KAAK,aACHsG,GAAQ,EAAArP,EAAA+I,SAAQ,6EAChB,MACF,KAAK,UACHsG,GAAQ,EAAArP,EAAA+I,SAAQ,2EAGpB,MAAOsG,IAGTmwB,WAAY,SAASr0C,GAInB,GAAIgvC,GAAQhvC,EAAQgvC,MAChBt3C,EAAYsI,EAAQtI,WAAa,CAOrC,OAAKs3C,IAAS,GAAOA,EALN,IAMNA,EAAQ,KAELA,GARG,KAQoBA,EAPpBsF,KAQLtF,EATK,KASaE,QAAQx3C,GAAa,MAErCs3C,GAVGsF,KAUoBtF,EATpBuF,KAULvF,EAXKsF,KAWapF,QAAQx3C,GAAa,MAErCs3C,GAZGuF,KAYoBvF,EAXpBwF,MAYLxF,EAbKuF,KAaarF,QAAQx3C,GAAa,MAEtCs3C,GAdIwF,MAeLxF,EAfKwF,MAeatF,QAAQx3C,GAAa,MAGxCs3C,EAAQ,MAInByF,cAAe,SAASC,GACtB,GAAIC,EACJ,OAAoB,iBAATD,GACF,IAETC,EAAKD,EAAO,EACRC,GAAM,KACAA,EAAK,KAAYzF,QAAQ,GAAK,QAEpCyF,GAAM,KACAA,EAAK,KAASzF,QAAQ,GAAK,QAEjCyF,GAAM,KACAA,EAAK,KAAMzF,QAAQ,GAAK,QAE3ByF,EAAGzF,QAAQ,GAAK,SAGzB0F,eAAgB,SAAS/nB,GACvB,GAAIvuD,GAAQuuD,EAAS3wB,YAAY,IACjC,KAAe,IAAX59B,EACF,OAAO,CAEP,IAAI4f,GAAO2uC,EAASjkB,UAAUtqC,GAAO4nC,aACrC,OAAa,QAAThoB,GAA2B,cAATA,GAQ1B22D,uBAAwB,SAASv7B,EAAKkc,GAEpC,MADS,IAAIzsD,QAAO2qD,aAAa,QAAU8B,EAAS,UAC1C/yD,KAAK62C,IAGjBw7B,kBAAmB,SAASx7B,EAAKkc,GAE/B,MADS,IAAIzsD,QAAO2qD,aAAa,YAAc8B,EAAS,MAC9C/yD,KAAK62C,IAGjBy7B,gCAAiC,SAASz7B,EAAKkc,GAC7C,GAAIwf,GAAK,GAAIjsE,QAAO2qD,aAAa,QAAU8B,EAAS,gBAChDt3D,EAAQ82E,EAAGpkD,KAAK0oB,EAEpB,OADW27B,oBAAmB/2E,EAAM,KAItCg3E,2BAA4B,SAAS57B,EAAKkc,GACxC,GAAIwf,GAAK,GAAIjsE,QAAO2qD,aAAa,YAAc8B,EAAS,SACpDt3D,EAAQ82E,EAAGpkD,KAAK0oB,GAChBrzB,EAAOgvD,mBAAmB/2E,EAAM,GAGpC,OAFA+nB,GAAOA,EAAK+J,MAAM,GAClB/J,EAAOA,EAAK+J,MAAM/J,EAAKqG,QAAQ,OAIjC6oD,2BAA4B,SAAS77B,EAAKgc,GAGxC,MAFAA,GAAOyc,mBAAmBzc,GACjB,GAAIvsD,QAAO2qD,aAAa,UAAY4B,EAAO,UAC1C7yD,KAAK62C,IAGjB87B,sBAAuB,SAAS97B,EAAKgc,GAGnC,MAFAA,GAAOyc,mBAAmBzc,GACjB,GAAIvsD,QAAO2qD,aAAa,UAAY4B,EAAO,MAC1C7yD,KAAK62C,IAGjB+7B,oCAAqC,SAAS/7B,EAAKgc,GACjDA,EAAOyc,mBAAmBzc,EAC1B,IAAI0f,GAAK,GAAIjsE,QAAO2qD,aAAa,UAAY4B,EAAO,WAChDp3D,EAAQ82E,EAAGpkD,KAAK0oB,GAChBrzB,EAAO/nB,EAAM,EACjB,KACE+nB,EAAOgvD,mBAAmBhvD,GAC1B,MAAM+jC,GACN/jC,EAAOA,EAAKgO,QAAQ,KAAM,OAC1BhO,EAAOgvD,mBAAmBhvD,GAE5B,MAAOA,IAGTqvD,+BAAgC,SAASh8B,EAAKgc,GAC5CA,EAAOyc,mBAAmBzc,EAC1B,IAAI0f,GAAK,GAAIjsE,QAAO2qD,aAAa,UAAY4B,EAAO,SAChDp3D,EAAQ82E,EAAGpkD,KAAK0oB,GAChBrzB,EAAO/nB,EAAM,EACjB,KACE+nB,EAAOgvD,mBAAmBhvD,GAC1B,MAAM+jC,GACN/jC,EAAOA,EAAKgO,QAAQ,KAAM,OAC1BhO,EAAOgvD,mBAAmBhvD,GAE5B,MAAOA,IAGTsvD,eAAgB,SAASC,EAAOC,GAK9B,GAAIC,GAAOC,EACTC,EAAQJ,EAAMloC,WAAW,GACzBuoC,EAAQJ,EAAMnoC,WAAW,EAE3B,OAAK,OAAQsoC,GAASA,EAAQ,OAAW,MAAQC,GAASA,EAAQ,OAEhEH,EAAQlhC,oBAAkB7gB,OAAOiiD,EAAQ,OAAO1vC,cAChDyvC,EAAQnhC,oBAAkB7gB,OAAOkiD,EAAQ,OAAO3vC,cAc3CwvC,GAASC,EAAQ,GAAK,GAbjB,MAAQC,GAASA,EAAQ,SAAY,MAAQC,GAASA,EAAQ,OAEjE,IACI,MAAQD,GAASA,EAAQ,QAAW,MAAQC,GAASA,EAAQ,OAEhE,GAGRH,EAAQF,EAAMtvC,cACdyvC,EAAQF,EAAMvvC,cACP1pC,KAAKs5E,wBAAwBJ,EAAOC,KAQ/CG,wBAAyB,SAASlZ,EAAGuI,GACnC,GAII4Q,GAEAC,EAAOC,EANPC,EAAU,WACVC,EAAU,KACVC,EAASxZ,EAAE78D,MAAMm2E,GACjBG,EAASlR,EAAEplE,MAAMm2E,GAEjBpE,EAAMr6C,KAAKmT,IAAIwrC,EAAOj7E,OAAQk7E,EAAOl7E,OAGzC,IAAIi7E,GAAUC,IACXN,EAAcI,EAAQ1zE,KAAK2zE,EAAO,MAAQD,EAAQ1zE,KAAK4zE,EAAO,IAE/D,IAAK,GAAIn7E,GAAI,EAAGA,EAAI42E,EAAK52E,IAAK,CAS5B,GARA86E,EAAQI,EAAOl7E,GACf+6E,EAAQI,EAAOn7E,GAEX66E,IACFC,EAAQv8D,SAASu8D,EAAO,IACxBC,EAAQx8D,SAASw8D,EAAO,KAGtBD,GAASC,EACX,MAAOD,GAAQC,GAAS,EAAI,CAI9BF,IAAeA,EAKnB,OAAQnZ,GAAKuI,IAAMvI,GAAKuI,IAG1BmR,UAAW,SAASC,EAAOpnC,EAAQqnC,GACjC,GAAM/5E,GAAQD,KACVyC,QAEJ,QAAWkwC,EAAX,IAAqBqnC,GACnB,IAAK,WACHv3E,EAAa,SAAS29D,EAAGuI,GACvB,MAAKvI,GAAEniB,UAGF0qB,EAAE1qB,UAGMh+C,EAAM84E,eAAe3Y,EAAEniB,UAAW0qB,EAAE1qB,YAFvC,EAHD,EAQX,MACF,KAAK,YACHx7C,EAAa,SAAS29D,EAAGuI,GACvB,MAAKvI,GAAEniB,UAGF0qB,EAAE1qB,WAGMh+C,EAAM84E,eAAe3Y,EAAEniB,UAAW0qB,EAAE1qB,WAFxC,GAHC,EAQZ,MACF,KAAK,WACHx7C,EAAa,SAAS29D,EAAGuI,GACvB,MAAOvI,GAAE6Z,cAAgBtR,EAAEsR,eAAiB,EAAI,EAElD,MACF,KAAK,YACHx3E,EAAa,SAAS29D,EAAGuI,GACvB,MAAOvI,GAAE6Z,cAAgBtR,EAAEsR,cAAgB,GAAK,GAMtD,MADAF,GAAMp1E,KAAKlC,GACJs3E,GAGTG,YAAa,SAASC,EAAOxnC,EAAQqnC,GACnC,GAAM/5E,GAAQD,KACVyC,QAEJ,QAAWkwC,EAAX,IAAqBqnC,GACnB,IAAK,WACHv3E,EAAa,SAAS29D,EAAGuI,GAEvB,MADa1oE,GAAM84E,eAAe3Y,EAAEpkC,KAAM2sC,EAAE3sC,MAG9C,MACF,KAAK,YACHv5B,EAAa,SAAS29D,EAAGuI,GAEvB,OADa1oE,EAAM84E,eAAe3Y,EAAEpkC,KAAM2sC,EAAE3sC,MAG9C,MACF,KAAK,WACHv5B,EAAa,SAAS29D,EAAGuI,GACvB,MAAOvI,GAAEga,MAAQzR,EAAEyR,OAAS,EAAI,EAElC,MACF,KAAK,YACH33E,EAAa,SAAS29D,EAAGuI,GACvB,MAAOvI,GAAEga,MAAQzR,EAAEyR,MAAQ,GAAK,GActC,MATAD,GAAMx1E,KAAK,SAACy7D,EAAGuI,GACb,MAAc,OAAVvI,EAAE1+C,MAA2B,QAAVinD,EAAEjnD,MACf,EACW,QAAV0+C,EAAE1+C,MAA4B,OAAVinD,EAAEjnD,KACxB,EAEAjf,EAAW29D,EAAGuI,KAGlBwR,GAGTE,oBAAqB,SAASn8B,EAAO9kB,GAQnC,MAPA8kB,GAAMv3C,IAAI,SAACgiD,GACTvvB,EAAGuvB,GACCA,EAAKzK,OAASyK,EAAKzK,MAAMv/C,OAAS,GACpC6iD,EAAM64B,oBAAoB1xB,EAAKzK,MAAO9kB,KAInC8kB,GAGTo8B,eAAgB,SAASC,GACvB,GAAIC,SACJ,QAAOD,GACL,IAAK,KACHC,EAAO,QACP,MACF,KAAK,KACHA,EAAO,YACP,MACF,KAAK,IACHA,EAAO,aACP,MACF,KAAK,MACHA,EAAO,eACP,MACF,KAAK,OACHA,EAAO,aACP,MACF,KAAK,KACHA,EAAO,eACP,MACF,KAAK,MACHA,EAAO,YACP,MACF,KAAK,OACHA,EAAO,WACP,MACF,SACEA,EAAOD,EAEX,MAAOC,IAGTC,gBAEEC,IAAO,UACPC,OAAU,UACVC,OAAU,UACVC,MAAS,UACTC,KAAQ,UACRC,KAAQ,UACRC,OAAU,UACVC,OAAU,UACVC,KAAQ,UACRC,MAAS,UACTC,KAAQ,UACRC,KAAQ,UACRC,KAAQ,UAGRC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,UAAW,WAGbC,aAAc,SAAS3zB,GAGrB,MADYzoD,MAAKy6E,eAAehyB,MjCowkB9B4zB,IACA,SAAU5/E,EAAQC,KAMlB4/E,IACA,SAAU7/E,EAAQC,EAASC,GAEjC,YkCv+lBA,SAASixD,GAAUwH,GAqBjB,QAASmnB,GAASnvB,GAEhB,GAAIovB,GAAOC,EAASrvB,EAAMsvB,EAC1B,OAAOC,GAAOH,EAAM/xC,GAvBtB,GAAIA,GAAWmyC,EAAMxnB,EAAQp1D,KAAKsG,KAAK,aACnCo2E,EAASG,EAAUC,GACrBC,YACE3/C,OACE,QAEF4/C,IACE,aAEFvW,MACE,cAGJwW,UACE,QACA,SAGJj9E,MAAK2vD,SAAW4sB,ElCq9lBlB3+E,OAAOS,eAAe3B,EAAQ,cAAcqB,OAAM,GkCr/lBlD,IAAI8vD,GAAUlxD,EAAQ,MAClBugF,EAAWvgF,EAAQ,KACnBm8D,EAAOn8D,EAAQ,KACfwgF,EAASxgF,EAAQ,KACjBygF,EAAgBzgF,EAAQ,KACxBw1D,EAASx1D,EAAQ,KACjB0gF,EAAM1gF,EAAQ,KACdigF,EAAQjgF,EAAQ,IAChBggF,EAAShgF,EAAQ,KACjB8/E,EAAW9/E,EAAQ,KACnBmgF,EAAKngF,EAAQ,KACbkgF,EAAYlgF,EAAQ,KAAaI,QA+BjCqvD,EAAYyB,IACbG,IAAIkvB,GAAWI,YAAY,IAC3BtvB,IAAImvB,GACJnvB,IAAI8K,GACJ9K,IAAIovB,GAAgBG,oBAAoB,IACxCvvB,IAAIqvB,GACJrvB,IAAImE,GACJnE,IAAIJ,GAEH4vB,EAAkB3vB,IACnBG,IAAIkvB,GAAWI,YAAY,IAC3BtvB,IAAI8K,ElCk8lBgOp8D,GkCh8lB9N0vD,YlCg8lB0P1vD,EkCh8lB/O8gF,mBlCo8lBdC,GACA,SAAUhhF,EAAQC,OAMrB","file":"js/draft.js","sourcesContent":["webpackJsonp([10],{\n\n/***/ 10:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);var _reactDom=__webpack_require__(7);var _reactDom2=_interopRequireDefault(_reactDom);var _propTypes=__webpack_require__(1);var _propTypes2=_interopRequireDefault(_propTypes);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var propTypes={children:_propTypes2.default.object.isRequired};var modalRoot=document.getElementById('modal-wrapper');var ModalPortal=function(_React$Component){_inherits(ModalPortal,_React$Component);function ModalPortal(props){_classCallCheck(this,ModalPortal);var _this=_possibleConstructorReturn(this,(ModalPortal.__proto__||Object.getPrototypeOf(ModalPortal)).call(this,props));_this.el=document.createElement('div');return _this;}_createClass(ModalPortal,[{key:'componentDidMount',value:function componentDidMount(){modalRoot.appendChild(this.el);}},{key:'componentWillUnmount',value:function componentWillUnmount(){modalRoot.removeChild(this.el);}},{key:'render',value:function render(){return _reactDom2.default.createPortal(this.props.children,this.el);}}]);return ModalPortal;}(_react2.default.Component);ModalPortal.propTypes=propTypes;exports.default=ModalPortal;\n\n/***/ }),\n\n/***/ 104:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 105:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 106:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 107:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 11:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function Loading(){return _react2.default.createElement(\"span\",{className:\"loading-icon loading-tip\"});}exports.default=Loading;\n\n/***/ }),\n\n/***/ 111:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global, module) {var __WEBPACK_AMD_DEFINE_RESULT__;/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.11';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n\n        return result;\n      }\n\n      if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n\n        return result;\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || isFunction(objValue)) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array == null ? 0 : array.length,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Gets the value at `key`, unless `key` is \"__proto__\".\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to get.\n     * @returns {*} Returns the property value.\n     */\n    function safeGet(object, key) {\n      if (key == '__proto__') {\n        return;\n      }\n\n      return object[key];\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (true) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n      return _;\n    }.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(20), __webpack_require__(125)(module)))\n\n/***/ }),\n\n/***/ 12:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  __webpack_require__(33).enable();\n  window.Promise = __webpack_require__(34);\n}\n\n// fetch() polyfill for making API calls.\n__webpack_require__(32);\n\n// Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\nObject.assign = __webpack_require__(21);\n\n// In tests, polyfill requestAnimationFrame since jsdom doesn't provide it yet.\n// We don't polyfill it in the browser--this is user's responsibility.\nif (false) {\n  require('raf').polyfill(global);\n}\n\n\n/***/ }),\n\n/***/ 128:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 13:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});var strChineseFirstPY=exports.strChineseFirstPY=\"\";\n\n/***/ }),\n\n/***/ 1306:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(12);\nmodule.exports = __webpack_require__(1307);\n\n\n/***/ }),\n\n/***/ 1307:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);var _reactDom=__webpack_require__(7);var _reactDom2=_interopRequireDefault(_reactDom);var _propTypes=__webpack_require__(1);var _propTypes2=_interopRequireDefault(_propTypes);var _reactstrap=__webpack_require__(5);var _prismjs=__webpack_require__(331);var _prismjs2=_interopRequireDefault(_prismjs);var _constants=__webpack_require__(2);var _seafileApi=__webpack_require__(3);var _axios=__webpack_require__(258);var _axios2=_interopRequireDefault(_axios);var _diffViewer=__webpack_require__(301);var _diffViewer2=_interopRequireDefault(_diffViewer);var _serialize=__webpack_require__(617);var _loading=__webpack_require__(11);var _loading2=_interopRequireDefault(_loading);var _reviewComments=__webpack_require__(1308);var _reviewComments2=_interopRequireDefault(_reviewComments);var _reviewCommentDialog=__webpack_require__(1315);var _reviewCommentDialog2=_interopRequireDefault(_reviewCommentDialog);var _addReviewerDialog=__webpack_require__(1317);var _addReviewerDialog2=_interopRequireDefault(_addReviewerDialog);var _slateReact=__webpack_require__(82);var _classnames=__webpack_require__(233);var _classnames2=_interopRequireDefault(_classnames);var _historyList=__webpack_require__(1319);var _historyList2=_interopRequireDefault(_historyList);var _slate=__webpack_require__(24);var _modalPortal=__webpack_require__(10);var _modalPortal2=_interopRequireDefault(_modalPortal);var _utils=__webpack_require__(4);__webpack_require__(104);__webpack_require__(105);__webpack_require__(106);__webpack_require__(85);__webpack_require__(107);__webpack_require__(128);__webpack_require__(1320);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}/* eslint-disable *//* eslint-enable */__webpack_require__(288);var URL=__webpack_require__(163);var Draft=function(_React$Component){_inherits(Draft,_React$Component);function Draft(props){_classCallCheck(this,Draft);var _this=_possibleConstructorReturn(this,(Draft.__proto__||Object.getPrototypeOf(Draft)).call(this,props));_this.initialContent=function(){switch(_constants.draftStatus){case'open':if(!_constants.draftFileExists){_this.setState({isLoading:false,isShowDiff:false});return;}if(!_constants.originFileExists){_seafileApi.seafileAPI.getFileDownloadLink(_constants.draftRepoID,_constants.draftFilePath).then(function(res){_seafileApi.seafileAPI.getFileContent(res.data).then(function(res){_this.setState({draftContent:res.data,draftOriginContent:res.data,isLoading:false,isShowDiff:false});});});return;}var hash=window.location.hash;if(hash.indexOf('#history-')===0){var currentCommitID=hash.slice(9,49);var preCommitID=hash.slice(50,90);var preItemFilePath=void 0,currentItemFilePath=void 0;_this.setState({isLoading:false,activeTab:'history'});_seafileApi.seafileAPI.listFileHistoryRecords(_constants.draftRepoID,_constants.draftFilePath,1,25).then(function(res){var historyList=res.data.data;_this.setState({historyList:historyList,totalReversionCount:res.data.total_count});for(var i=0,length=historyList.length;i<length;i++){if(preCommitID===historyList[i].commit_id){_this.setState({activeItem:i});preItemFilePath=historyList[i].path;}if(currentCommitID===historyList[i].commit_id){currentItemFilePath=historyList[i].path;}if(preItemFilePath&&currentItemFilePath)break;}_axios2.default.all([_seafileApi.seafileAPI.getFileRevision(_constants.draftRepoID,currentCommitID,currentItemFilePath),_seafileApi.seafileAPI.getFileRevision(_constants.draftRepoID,preCommitID,preItemFilePath)]).then(_axios2.default.spread(function(res1,res2){_axios2.default.all([_seafileApi.seafileAPI.getFileContent(res1.data),_seafileApi.seafileAPI.getFileContent(res2.data)]).then(_axios2.default.spread(function(content1,content2){_this.setDiffViewerContent(content2.data,content1.data);}));}));return;});}else{_axios2.default.all([_seafileApi.seafileAPI.getFileDownloadLink(_constants.draftRepoID,_constants.draftFilePath),_seafileApi.seafileAPI.getFileDownloadLink(_constants.draftRepoID,_constants.draftOriginFilePath)]).then(_axios2.default.spread(function(res1,res2){_axios2.default.all([_seafileApi.seafileAPI.getFileContent(res1.data),_seafileApi.seafileAPI.getFileContent(res2.data)]).then(_axios2.default.spread(function(draftContent,draftOriginContent){_this.setState({draftContent:draftContent.data,draftOriginContent:draftOriginContent.data,isLoading:false});var that=_this;setTimeout(function(){that.getChangedNodes();},100);}));}));}break;case'published':if(!_constants.originFileExists){_this.setState({isLoading:false,isShowDiff:false});return;}var dl0=_constants.siteRoot+'repo/'+_constants.draftRepoID+'/'+_constants.draftPublishVersion+'/download?'+'p='+_constants.draftOriginFilePath;var dl=_constants.siteRoot+'repo/'+_constants.draftRepoID+'/'+_constants.originFileVersion+'/download?'+'p='+_constants.draftOriginFilePath;_axios2.default.all([_seafileApi.seafileAPI.getFileContent(dl0),_seafileApi.seafileAPI.getFileContent(dl)]).then(_axios2.default.spread(function(draftContent,draftOriginContent){_this.setState({draftContent:draftContent.data,draftOriginContent:draftOriginContent.data,isLoading:false});}));break;}};_this.onHistoryItemClick=function(currentItem,preItem,activeItem){var preCommitID=preItem.commit_id;var currentCommitID=currentItem.commit_id;var url='history-'+preCommitID+'-'+currentCommitID;_this.setURL(url);_this.setState({activeItem:activeItem,isLoading:true});_axios2.default.all([_seafileApi.seafileAPI.getFileRevision(_constants.draftRepoID,currentCommitID,currentItem.path),_seafileApi.seafileAPI.getFileRevision(_constants.draftRepoID,preCommitID,preItem.path)]).then(_axios2.default.spread(function(res1,res2){_axios2.default.all([_seafileApi.seafileAPI.getFileContent(res1.data),_seafileApi.seafileAPI.getFileContent(res2.data)]).then(_axios2.default.spread(function(content1,content2){_this.setDiffViewerContent(content1.data,content2.data);}));}));};_this.onHistoryListChange=function(historyList){_this.setState({historyList:historyList});};_this.getCommentsNumber=function(){_seafileApi.seafileAPI.listComments(_constants.draftRepoID,_constants.draftFilePath).then(function(res){var number=res.data.total_count;var comments=res.data.comments;var unresolvedComments=0;for(var i=0;i<res.data.total_count;i++){if(comments[i].resolved===false){unresolvedComments++;}}_this.setState({commentsNumber:number,unresolvedComments:unresolvedComments});});};_this.addComment=function(e){e.stopPropagation();_this.getQuote();if(!_this.quote){return;}_this.setState({isShowCommentDialog:true});};_this.onCommentAdded=function(){_this.getCommentsNumber();_this.toggleCommentDialog();};_this.toggleCommentDialog=function(){_this.setState({isShowCommentDialog:!_this.state.isShowCommentDialog});};_this.getOriginRepoInfo=function(){_seafileApi.seafileAPI.getRepoInfo(_constants.draftRepoID).then(function(res){_this.setState({originRepoName:res.data.repo_name});});};_this.getChangedNodes=function(){var nodes=_this.refs.diffViewer.value.document.nodes;var keys=[];var lastDiffState='';nodes.map(function(node){if(node.data.get('diff_state')==='diff-added'&&lastDiffState!=='diff-added'){keys.push(node.key);}else if(node.data.get('diff_state')==='diff-removed'&&lastDiffState!=='diff-removed'){keys.push(node.key);}else if(node.data.get('diff_state')==='diff-replaced'&&lastDiffState!=='diff-replaced'){keys.push(node.key);}lastDiffState=node.data.get('diff_state');});_this.setState({changedNodes:keys});};_this.scrollToChangedNode=function(scroll){if(_this.state.changedNodes.length==0)return;if(scroll==='up'){_this.changeIndex++;}else{_this.changeIndex--;}if(_this.changeIndex>_this.state.changedNodes.length-1){_this.changeIndex=0;}if(_this.changeIndex<0){_this.changeIndex=_this.state.changedNodes.length-1;}var win=window;var key=_this.state.changedNodes[_this.changeIndex];var element=win.document.querySelector('[data-key=\"'+key+'\"]');// fix code-block or tables\nwhile(element.className.indexOf('diff-')===-1&&element.tagName!=='BODY'){element=element.parentNode;}var scroller=_this.findScrollContainer(element,win);var isWindow=scroller==win.document.body||scroller==win.document.documentElement;if(isWindow){win.scrollTo(0,element.offsetTop);}else{scroller.scrollTop=element.offsetTop;}};_this.findScrollContainer=function(element,window){var parent=element.parentNode;var OVERFLOWS=['auto','overlay','scroll'];var scroller=void 0;while(!scroller){if(!parent.parentNode)break;var style=window.getComputedStyle(parent);var overflowY=style.overflowY;if(OVERFLOWS.includes(overflowY)){scroller=parent;break;}parent=parent.parentNode;}if(!scroller){return window.document.body;}return scroller;};_this.scrollToQuote=function(newIndex,oldIndex,quote){var nodes=_this.refs.diffViewer.value.document.nodes;var key=void 0;nodes.map(function(node){if(node.data.get('old_index')==oldIndex&&node.data.get('new_index')==newIndex){key=node.key;}});if(typeof key!=='string'){nodes.map(function(node){if(node.text.indexOf(quote)>0){key=node.key;}});}if(typeof key==='string'){var win=window;var element=win.document.querySelector('[data-key=\"'+key+'\"]');while(element.tagName==='CODE'){element=element.parentNode;}var scroller=_this.findScrollContainer(element,win);var isWindow=scroller==win.document.body||scroller==win.document.documentElement;if(isWindow){win.scrollTo(0,element.offsetTop);}else{scroller.scrollTop=element.offsetTop;}}};_this.showDiffViewer=function(){return _react2.default.createElement('div',null,_this.state.isShowDiff?_react2.default.createElement(_diffViewer2.default,{newMarkdownContent:_this.state.draftContent,oldMarkdownContent:_this.state.draftOriginContent,ref:'diffViewer'}):_react2.default.createElement(_diffViewer2.default,{newMarkdownContent:_this.state.draftContent,oldMarkdownContent:_this.state.draftContent,ref:'diffViewer'}),_react2.default.createElement('i',{className:'fa fa-plus-square review-comment-btn',ref:'commentbtn',onMouseDown:_this.addComment}));};_this.listReviewers=function(){_seafileApi.seafileAPI.listDraftReviewers(_constants.draftID).then(function(res){_this.setState({reviewers:res.data.reviewers});});};_this.onSwitchShowDiff=function(){if(!_this.state.isShowDiff){var that=_this;setTimeout(function(){that.getChangedNodes();},100);}_this.setState({isShowDiff:!_this.state.isShowDiff});};_this.toggleDiffTip=function(){_this.setState({showDiffTip:!_this.state.showDiffTip});};_this.toggleAddReviewerDialog=function(){if(_this.state.showReviewerDialog){_this.listReviewers();}_this.setState({showReviewerDialog:!_this.state.showReviewerDialog});};_this.showDiffButton=function(){return _react2.default.createElement('div',{className:'seafile-toggle-diff'},_react2.default.createElement('label',{className:'custom-switch',id:'toggle-diff'},_react2.default.createElement('input',{type:'checkbox',checked:_this.state.isShowDiff&&'checked',name:'option',className:'custom-switch-input',onChange:_this.onSwitchShowDiff}),_react2.default.createElement('span',{className:'custom-switch-indicator'})),_react2.default.createElement(_reactstrap.Tooltip,{placement:'bottom',isOpen:_this.state.showDiffTip,target:'toggle-diff',toggle:_this.toggleDiffTip},(0,_constants.gettext)('View diff')));};_this.onPublishDraft=function(){_seafileApi.seafileAPI.publishDraft(_constants.draftID).then(function(res){var OriginFileLink=_constants.siteRoot+'lib/'+_constants.draftRepoID+'/file'+_utils.Utils.encodePath(res.data.published_file_path);window.location.href=OriginFileLink;});};_this.initialDiffViewerContent=function(){_seafileApi.seafileAPI.listFileHistoryRecords(_constants.draftRepoID,_constants.draftFilePath,1,25).then(function(res){_this.setState({historyList:res.data.data,totalReversionCount:res.data.total_count});if(res.data.data.length>1){_axios2.default.all([_seafileApi.seafileAPI.getFileRevision(_constants.draftRepoID,res.data.data[0].commit_id,_constants.draftFilePath),_seafileApi.seafileAPI.getFileRevision(_constants.draftRepoID,res.data.data[1].commit_id,_constants.draftFilePath)]).then(_axios2.default.spread(function(res1,res2){_axios2.default.all([_seafileApi.seafileAPI.getFileContent(res1.data),_seafileApi.seafileAPI.getFileContent(res2.data)]).then(_axios2.default.spread(function(content1,content2){_this.setState({draftContent:content1.data,draftOriginContent:content2.data});}));}));}else{_seafileApi.seafileAPI.getFileRevision(_constants.draftRepoID,res.data.data[0].commit_id,_constants.draftFilePath).then(function(res){_seafileApi.seafileAPI.getFileContent(res.data).then(function(content){_this.setState({draftContent:content.data,draftOriginContent:''});});});}});};_this.setDiffViewerContent=function(newContent,prevContent){_this.setState({draftContent:newContent,draftOriginContent:prevContent,isLoading:false});};_this.setURL=function(newurl){var url=new URL(window.location.href);url.set('hash',newurl);window.location.href=url.toString();};_this.tabItemClick=function(tab){if(_this.state.activeTab!==tab){if(tab!=='history'&&window.location.hash){_this.setURL('#');}if(tab=='reviewInfo'){_this.initialContent();}else if(tab=='history'){_this.initialDiffViewerContent();}_this.setState({activeTab:tab});}};_this.showNavItem=function(showTab){switch(showTab){case'info':return _react2.default.createElement(_reactstrap.NavItem,{className:'nav-item'},_react2.default.createElement(_reactstrap.NavLink,{className:(0,_classnames2.default)({active:_this.state.activeTab==='reviewInfo'}),onClick:function onClick(){_this.tabItemClick('reviewInfo');}},_react2.default.createElement('i',{className:'fas fa-info-circle'})));case'comments':return _react2.default.createElement(_reactstrap.NavItem,{className:'nav-item'},_react2.default.createElement(_reactstrap.NavLink,{className:(0,_classnames2.default)({active:_this.state.activeTab==='comments'}),onClick:function onClick(){_this.tabItemClick('comments');}},_react2.default.createElement('i',{className:'fa fa-comments'}),_this.state.commentsNumber>0&&_react2.default.createElement('div',{className:'comments-number'},_this.state.commentsNumber)));case'history':return _react2.default.createElement(_reactstrap.NavItem,{className:'nav-item'},_react2.default.createElement(_reactstrap.NavLink,{className:(0,_classnames2.default)({active:_this.state.activeTab==='history'}),onClick:function onClick(){_this.tabItemClick('history');}},_react2.default.createElement('i',{className:'fas fa-history'})));}};_this.setBtnPosition=function(e){var nativeSelection=window.getSelection();if(!nativeSelection.rangeCount){_this.range=null;return;}if(nativeSelection.isCollapsed===false){var nativeRange=nativeSelection.getRangeAt(0);var focusNode=nativeSelection.focusNode;if(focusNode.tagName==='I'||focusNode.nodeType!==3&&focusNode.getAttribute('class')==='language-type'){// fix select last paragraph\nvar fragment=nativeRange.cloneContents();var startNode=fragment.firstChild.firstChild;if(!startNode){return;}var newNativeRange=document.createRange();newNativeRange.setStartBefore(startNode);newNativeRange.setEndAfter(startNode);_this.range=(0,_slateReact.findRange)(newNativeRange,_this.refs.diffViewer);}else{_this.range=(0,_slateReact.findRange)(nativeRange,_this.refs.diffViewer);}if(!_this.range){return;}var rect=nativeRange.getBoundingClientRect();// fix Safari bug\nif(navigator.userAgent.indexOf('Chrome')<0&&navigator.userAgent.indexOf('Safari')>0){if(nativeRange.collapsed&&rect.top==0&&rect.height==0){if(nativeRange.startOffset==0){nativeRange.setEnd(nativeRange.endContainer,1);}else{nativeRange.setStart(nativeRange.startContainer,nativeRange.startOffset-1);}rect=nativeRange.getBoundingClientRect();if(rect.top==0&&rect.height==0){if(nativeRange.getClientRects().length){rect=nativeRange.getClientRects()[0];}}}}var style=_this.refs.commentbtn.style;style.top=rect.top-100+_this.refs.viewContent.scrollTop+'px';}else{var _style=_this.refs.commentbtn.style;_style.top='-1000px';}};_this.getQuote=function(){var range=_this.range;if(!range){return;}_this.quote='';var document=_this.refs.diffViewer.value.document;var _range=range,anchor=_range.anchor,focus=_range.focus;var anchorText=document.getNode(anchor.key);var focusText=document.getNode(focus.key);var anchorInline=document.getClosestInline(anchor.key);var focusInline=document.getClosestInline(focus.key);// COMPAT: If the selection is at the end of a non-void inline node, and\n// there is a node after it, put it in the node after instead. This\n// standardizes the behavior, since it's indistinguishable to the user.\nif(anchorInline&&anchor.offset==anchorText.text.length){var block=document.getClosestBlock(anchor.key);var nextText=block.getNextText(anchor.key);if(nextText){range=range.moveAnchorTo(nextText.key,0);}}if(focusInline&&focus.offset==focusText.text.length){var _block=document.getClosestBlock(focus.key);var _nextText=_block.getNextText(focus.key);if(_nextText){range=range.moveFocusTo(_nextText.key,0);}}var fragment=document.getFragmentAtRange(range);var nodes=_this.removeNullNode(fragment.nodes);var newFragment=_slate.Document.create({nodes:nodes});var newValue=_slate.Value.create({document:newFragment});_this.quote=(0,_serialize.serialize)(newValue.toJSON());var blockPath=document.createSelection(range).anchor.path.slice(0,1);var node=document.getNode(blockPath);_this.newIndex=node.data.get('new_index');_this.oldIndex=node.data.get('old_index');};_this.removeNullNode=function(oldNodes){var newNodes=[];oldNodes.map(function(node){var text=node.text.trim();var childNodes=node.nodes;if(!text){return;}if(childNodes&&childNodes.size===1||!childNodes){newNodes.push(node);}else if(childNodes.size>1){var nodes=_this.removeNullNode(childNodes);var newNode=_slate.Block.create({nodes:nodes,data:node.data,key:node.key,type:node.type});newNodes.push(newNode);}});return newNodes;};_this.onResizeMouseUp=function(){if(_this.state.inResizing){_this.setState({inResizing:false});}};_this.onResizeMouseDown=function(){_this.setState({inResizing:true});};_this.onResizeMouseMove=function(e){var rate=100-e.nativeEvent.clientX/_this.refs.main.clientWidth*100;if(rate<20||rate>60){_this.setState({inResizing:false});return null;}_this.setState({rightPartWidth:rate});};_this.renderDiffButton=function(){switch(_constants.draftStatus){case'open':if(!_constants.draftFileExists){return;}if(!_constants.originFileExists){return;}return _this.showDiffButton();case'published':if(!_constants.originFileExists){return;}return _this.showDiffButton();}};_this.renderNavItems=function(){switch(_constants.draftStatus){case'open':if(!_constants.draftFileExists){return _react2.default.createElement(_reactstrap.Nav,{tabs:true,className:'review-side-panel-nav'},_this.showNavItem('info'));}return _react2.default.createElement(_reactstrap.Nav,{tabs:true,className:'review-side-panel-nav'},_this.showNavItem('info'),_this.showNavItem('comments'),_this.showNavItem('history'));case'published':if(!_constants.originFileExists){return _react2.default.createElement(_reactstrap.Nav,{tabs:true,className:'review-side-panel-nav'},_this.showNavItem('info'));}return _react2.default.createElement(_reactstrap.Nav,{tabs:true,className:'review-side-panel-nav'},_this.showNavItem('info'),_this.showNavItem('comments'));}};_this.renderContent=function(){switch(_constants.draftStatus){case'open':if(!_constants.draftFileExists){return _react2.default.createElement('p',{className:'error'},(0,_constants.gettext)('Draft has been deleted.'));}return _this.showDiffViewer();case'published':if(!_constants.originFileExists){return _react2.default.createElement('p',{className:'error'},(0,_constants.gettext)('Original file has been deleted.'));}return _this.showDiffViewer();}};_this.state={draftContent:'',draftOriginContent:'',isLoading:true,isShowDiff:true,showDiffTip:false,activeTab:'reviewInfo',commentsNumber:null,changedNodes:[],originRepoName:'',isShowCommentDialog:false,unresolvedComments:0,activeItem:null,historyList:[],showReviewerDialog:false,reviewers:[],inResizing:false,rightPartWidth:30};_this.quote='';_this.newIndex=null;_this.oldIndex=null;_this.changeIndex=-1;_this.range=null;return _this;}_createClass(Draft,[{key:'componentWillMount',value:function componentWillMount(){this.getCommentsNumber();this.listReviewers();this.getOriginRepoInfo();}},{key:'componentDidMount',value:function componentDidMount(){this.initialContent();document.addEventListener('selectionchange',this.setBtnPosition);}},{key:'componentWillUnmount',value:function componentWillUnmount(){document.removeEventListener('selectionchange',this.setBtnPosition);}},{key:'render',value:function render(){var onResizeMove=this.state.inResizing?this.onResizeMouseMove:null;var draftLink=_constants.siteRoot+'lib/'+_constants.draftRepoID+'/file'+_constants.draftFilePath+'?mode=edit';return _react2.default.createElement('div',{className:'wrapper'},_react2.default.createElement('div',{id:'header',className:'header review'},_react2.default.createElement('div',{className:'cur-file-info'},_react2.default.createElement('div',{className:'info-item file-feature'},_react2.default.createElement('span',{className:'sf2-icon-review'})),_react2.default.createElement('div',{className:'info-item file-info'},_react2.default.createElement(_react2.default.Fragment,null,_react2.default.createElement('span',{className:'file-name'},_constants.draftFileName),_constants.draftFileExists&&_react2.default.createElement('a',{href:draftLink,className:'draft-link'},(0,_constants.gettext)('Edit draft'))))),_react2.default.createElement('div',{className:'button-group'},this.renderDiffButton(),_constants.draftFileExists&&_react2.default.createElement('button',{className:'btn btn-success file-operation-btn',title:(0,_constants.gettext)('Publish draft'),onClick:this.onPublishDraft},(0,_constants.gettext)('Publish')),_constants.draftStatus=='published'&&_react2.default.createElement('button',{className:'btn btn-success file-operation-btn',title:(0,_constants.gettext)('Published'),disabled:true},(0,_constants.gettext)('Published')))),_react2.default.createElement('div',{id:'main',className:'main',ref:'main'},_react2.default.createElement('div',{className:'cur-view-container',onMouseMove:onResizeMove,onMouseUp:this.onResizeMouseUp},_react2.default.createElement('div',{className:'cur-view-content',ref:'viewContent',style:{width:100-this.state.rightPartWidth+'%'}},this.state.isLoading?_react2.default.createElement('div',{className:'markdown-viewer-render-content article'},_react2.default.createElement(_loading2.default,null)):_react2.default.createElement('div',{className:'markdown-viewer-render-content article'},this.renderContent())),_react2.default.createElement('div',{className:'cur-view-right-part',style:{width:this.state.rightPartWidth+'%'}},_react2.default.createElement('div',{className:'seafile-comment-resize',onMouseDown:this.onResizeMouseDown}),_react2.default.createElement('div',{className:'review-side-panel'},this.renderNavItems(),_react2.default.createElement(_reactstrap.TabContent,{activeTab:this.state.activeTab},_react2.default.createElement(_reactstrap.TabPane,{tabId:'reviewInfo'},_react2.default.createElement('div',{className:'review-side-panel-body'},_react2.default.createElement(SidePanelReviewers,{reviewers:this.state.reviewers,toggleAddReviewerDialog:this.toggleAddReviewerDialog}),_react2.default.createElement(SidePanelAuthor,null),_constants.draftFileExists&&_react2.default.createElement(UnresolvedComments,{number:this.state.unresolvedComments}),this.state.isShowDiff===true&&this.state.changedNodes.length>0&&_react2.default.createElement(SidePanelChanges,{changedNumber:this.state.changedNodes.length,scrollToChangedNode:this.scrollToChangedNode}),_react2.default.createElement(SidePanelOrigin,{originRepoName:this.state.originRepoName}),_constants.draftFileExists&&_react2.default.createElement('a',{href:draftLink},_react2.default.createElement(_reactstrap.Button,{color:'secondary'},(0,_constants.gettext)('Edit Draft'))))),_react2.default.createElement(_reactstrap.TabPane,{tabId:'comments',className:'comments'},_react2.default.createElement(_reviewComments2.default,{scrollToQuote:this.scrollToQuote,getCommentsNumber:this.getCommentsNumber,commentsNumber:this.state.commentsNumber,inResizing:false})),_react2.default.createElement(_reactstrap.TabPane,{tabId:'history',className:'history'},_react2.default.createElement(_historyList2.default,{activeItem:this.state.activeItem,historyList:this.state.historyList,totalReversionCount:this.state.totalReversionCount,onHistoryItemClick:this.onHistoryItemClick,onHistoryListChange:this.onHistoryListChange}))))))),this.state.showReviewerDialog&&_react2.default.createElement(_modalPortal2.default,null,_react2.default.createElement(_addReviewerDialog2.default,{showReviewerDialog:this.state.showReviewerDialog,toggleAddReviewerDialog:this.toggleAddReviewerDialog,draftID:_constants.draftID,reviewers:this.state.reviewers})),this.state.isShowCommentDialog&&_react2.default.createElement(_modalPortal2.default,null,_react2.default.createElement(_reviewCommentDialog2.default,{toggleCommentDialog:this.toggleCommentDialog,onCommentAdded:this.onCommentAdded,quote:this.quote,draftID:_constants.draftID,newIndex:this.newIndex,oldIndex:this.oldIndex})));}}]);return Draft;}(_react2.default.Component);var SidePanelReviewers=function(_React$Component2){_inherits(SidePanelReviewers,_React$Component2);function SidePanelReviewers(props){_classCallCheck(this,SidePanelReviewers);return _possibleConstructorReturn(this,(SidePanelReviewers.__proto__||Object.getPrototypeOf(SidePanelReviewers)).call(this,props));}_createClass(SidePanelReviewers,[{key:'render',value:function render(){return _react2.default.createElement('div',{className:'review-side-panel-item'},_react2.default.createElement('div',{className:'review-side-panel-header'},(0,_constants.gettext)('Reviewers'),_react2.default.createElement('i',{className:'fa fa-cog',onClick:this.props.toggleAddReviewerDialog})),this.props.reviewers.length>0?this.props.reviewers.map(function(item){var index=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var arr=arguments[2];return _react2.default.createElement('div',{className:'reviewer-info',key:index},_react2.default.createElement('img',{className:'avatar review-side-panel-avatar',src:item.avatar_url,alt:''}),_react2.default.createElement('span',{className:'reviewer-name'},item.user_name));}):_react2.default.createElement('span',null,(0,_constants.gettext)('No reviewer yet.')));}}]);return SidePanelReviewers;}(_react2.default.Component);var sidePanelReviewersPropTypes={reviewers:_propTypes2.default.array.isRequired,toggleAddReviewerDialog:_propTypes2.default.func.isRequired};SidePanelReviewers.propTypes=sidePanelReviewersPropTypes;var SidePanelAuthor=function(_React$Component3){_inherits(SidePanelAuthor,_React$Component3);function SidePanelAuthor(){_classCallCheck(this,SidePanelAuthor);return _possibleConstructorReturn(this,(SidePanelAuthor.__proto__||Object.getPrototypeOf(SidePanelAuthor)).apply(this,arguments));}_createClass(SidePanelAuthor,[{key:'render',value:function render(){return _react2.default.createElement('div',{className:'review-side-panel-item'},_react2.default.createElement('div',{className:'review-side-panel-header'},(0,_constants.gettext)('Author')),_react2.default.createElement('div',{className:'author-info'},_react2.default.createElement('img',{className:'avatar review-side-panel-avatar',src:_constants.authorAvatar,alt:''}),_react2.default.createElement('span',{className:'author-name'},_constants.author)));}}]);return SidePanelAuthor;}(_react2.default.Component);var SidePanelOrigin=function(_React$Component4){_inherits(SidePanelOrigin,_React$Component4);function SidePanelOrigin(props){_classCallCheck(this,SidePanelOrigin);return _possibleConstructorReturn(this,(SidePanelOrigin.__proto__||Object.getPrototypeOf(SidePanelOrigin)).call(this,props));}_createClass(SidePanelOrigin,[{key:'render',value:function render(){return _react2.default.createElement('div',{className:'dirent-table-container'},_react2.default.createElement('table',{className:'table-thead-hidden'},_react2.default.createElement('thead',null,_react2.default.createElement('tr',null,_react2.default.createElement('th',{width:'25%'}),_react2.default.createElement('th',{width:'75%'}))),_react2.default.createElement('tbody',null,_react2.default.createElement('tr',null,_react2.default.createElement('th',null,(0,_constants.gettext)('Location')),_react2.default.createElement('td',null,this.props.originRepoName,_constants.draftFilePath)))));}}]);return SidePanelOrigin;}(_react2.default.Component);var SidePanelOriginPropTypes={originRepoName:_propTypes2.default.string.isRequired};SidePanelOrigin.propTypes=SidePanelOriginPropTypes;var UnresolvedComments=function(_React$Component5){_inherits(UnresolvedComments,_React$Component5);function UnresolvedComments(props){_classCallCheck(this,UnresolvedComments);return _possibleConstructorReturn(this,(UnresolvedComments.__proto__||Object.getPrototypeOf(UnresolvedComments)).call(this,props));}_createClass(UnresolvedComments,[{key:'render',value:function render(){return _react2.default.createElement('div',{className:'review-side-panel-item'},_react2.default.createElement('div',{className:'review-side-panel-header'},(0,_constants.gettext)('Comments')),_react2.default.createElement('div',{className:'changes-info'},_react2.default.createElement('span',null,(0,_constants.gettext)('Unresolved comments:'),' ',this.props.number)));}}]);return UnresolvedComments;}(_react2.default.Component);var UnresolvedCommentsPropTypes={number:_propTypes2.default.number.isRequired};UnresolvedComments.propTypes=UnresolvedCommentsPropTypes;var SidePanelChanges=function(_React$Component6){_inherits(SidePanelChanges,_React$Component6);function SidePanelChanges(props){_classCallCheck(this,SidePanelChanges);return _possibleConstructorReturn(this,(SidePanelChanges.__proto__||Object.getPrototypeOf(SidePanelChanges)).call(this,props));}_createClass(SidePanelChanges,[{key:'render',value:function render(){var _this7=this;return _react2.default.createElement('div',{className:'review-side-panel-item'},_react2.default.createElement('div',{className:'review-side-panel-header'},(0,_constants.gettext)('Changes')),_react2.default.createElement('div',{className:'changes-info'},_react2.default.createElement('span',null,(0,_constants.gettext)('Number of changes:'),' ',this.props.changedNumber),this.props.changedNumber>0&&_react2.default.createElement('div',null,_react2.default.createElement('i',{className:'fa fa-arrow-circle-up',onClick:function onClick(){_this7.props.scrollToChangedNode('down');}}),_react2.default.createElement('i',{className:'fa fa-arrow-circle-down',onClick:function onClick(){_this7.props.scrollToChangedNode('up');}}))));}}]);return SidePanelChanges;}(_react2.default.Component);var sidePanelChangesPropTypes={changedNumber:_propTypes2.default.number.isRequired,scrollToChangedNode:_propTypes2.default.func.isRequired};SidePanelChanges.propTypes=sidePanelChangesPropTypes;_reactDom2.default.render(_react2.default.createElement(Draft,null),document.getElementById('wrapper'));\n\n/***/ }),\n\n/***/ 1308:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);var _propTypes=__webpack_require__(1);var _propTypes2=_interopRequireDefault(_propTypes);var _seafileMarkdown2html=__webpack_require__(646);var _reactstrap=__webpack_require__(5);var _seafileApi=__webpack_require__(3);var _constants=__webpack_require__(2);var _loading=__webpack_require__(11);var _loading2=_interopRequireDefault(_loading);var _reviewComment=__webpack_require__(1313);var _reviewComment2=_interopRequireDefault(_reviewComment);var _constants2=__webpack_require__(2);__webpack_require__(1314);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var commentPropTypes={getCommentsNumber:_propTypes2.default.func.isRequired,inResizing:_propTypes2.default.bool.isRequired,commentsNumber:_propTypes2.default.number,scrollToQuote:_propTypes2.default.func.isRequired};var ReviewComments=function(_React$Component){_inherits(ReviewComments,_React$Component);function ReviewComments(props){_classCallCheck(this,ReviewComments);var _this=_possibleConstructorReturn(this,(ReviewComments.__proto__||Object.getPrototypeOf(ReviewComments)).call(this,props));_this.listComments=function(scroll){_seafileApi.seafileAPI.listComments(_constants.draftRepoID,_constants.draftFilePath).then(function(response){var commentList=[];response.data.comments.forEach(function(item){var commentItem=new _reviewComment2.default(item);commentList.push(commentItem);});_this.setState({commentsList:commentList});if(scroll){var that=_this;setTimeout(function(){that.refs.commentsList.scrollTo(0,10000);},100);}});};_this.handleCommentChange=function(event){_this.setState({comment:event.target.value});};_this.submitComment=function(){var comment=_this.state.comment.trim();if(comment.length>0){_seafileApi.seafileAPI.postComment(_constants.draftRepoID,_constants.draftFilePath,comment).then(function(response){_this.listComments(true);_this.props.getCommentsNumber();});_this.setState({comment:''});}};_this.resolveComment=function(event){_seafileApi.seafileAPI.updateComment(_constants.draftRepoID,event.target.id,'true').then(function(res){_this.props.getCommentsNumber();_this.listComments();});};_this.editComment=function(commentID,newComment){_seafileApi.seafileAPI.updateComment(_constants.draftRepoID,commentID,null,null,newComment).then(function(res){_this.props.getCommentsNumber();_this.listComments();});};_this.toggleResolvedComment=function(){_this.setState({showResolvedComment:!_this.state.showResolvedComment});};_this.deleteComment=function(event){_seafileApi.seafileAPI.deleteComment(_constants.draftRepoID,event.target.id).then(function(res){_this.props.getCommentsNumber();_this.listComments();});};_this.onResizeMouseUp=function(){if(_this.state.inResizing){_this.setState({inResizing:false});}};_this.onResizeMouseDown=function(){_this.setState({inResizing:true});};_this.onResizeMouseMove=function(event){var rate=100-(event.nativeEvent.clientY-120)/_this.refs.comment.clientHeight*100;if(rate<20||rate>70){if(rate<20){_this.setState({commentFooterHeight:25});}if(rate>70){_this.setState({commentFooterHeight:65});}_this.setState({inResizing:false});return null;}_this.setState({commentFooterHeight:rate});};_this.scrollToQuote=function(newIndex,oldIndex,quote){_this.props.scrollToQuote(newIndex,oldIndex,quote);_this.setState({comment:''});};_this.state={commentsList:[],inResizing:false,commentFooterHeight:25,showResolvedComment:true,comment:''};return _this;}_createClass(ReviewComments,[{key:'componentWillMount',value:function componentWillMount(){this.listComments();}},{key:'componentWillReceiveProps',value:function componentWillReceiveProps(nextProps){if(this.props.commentsNumber!==nextProps.commentsNumber){this.listComments();}}},{key:'render',value:function render(){var _this2=this;var onResizeMove=this.state.inResizing?this.onResizeMouseMove:null;return _react2.default.createElement('div',{className:this.state.inResizing||this.props.inResizing?'seafile-comment seafile-comment-resizing':'seafile-comment',onMouseMove:onResizeMove,onMouseUp:this.onResizeMouseUp,ref:'comment'},_react2.default.createElement('div',{className:'seafile-comment-title'},_react2.default.createElement('div',{className:'seafile-comment-title-text'},(0,_constants.gettext)('Show resolved comments')),_react2.default.createElement('div',{className:'seafile-comment-title-toggle'},_react2.default.createElement('label',{className:'custom-switch',id:'toggle-resolved-comments'},_react2.default.createElement('input',{type:'checkbox',name:'option',className:'custom-switch-input',onChange:this.toggleResolvedComment,checked:this.state.showResolvedComment&&'checked'}),_react2.default.createElement('span',{className:'custom-switch-indicator'})))),_react2.default.createElement('div',{style:{height:100-this.state.commentFooterHeight+'%'}},this.props.commentsNumber==0&&_react2.default.createElement('div',{className:'seafile-comment-list'},_react2.default.createElement('div',{className:'comment-vacant'},(0,_constants.gettext)('No comment yet.'))),this.state.commentsList.length===0&&this.props.commentsNumber>0&&_react2.default.createElement('div',{className:'seafile-comment-list'},_react2.default.createElement(_loading2.default,null)),this.state.commentsList.length>0&&_react2.default.createElement('ul',{className:'seafile-comment-list',ref:'commentsList'},this.state.commentsList.length>0&&this.props.commentsNumber>0&&this.state.commentsList.map(function(item,index){return _react2.default.createElement(CommentItem,{item:item,showResolvedComment:_this2.state.showResolvedComment,resolveComment:_this2.resolveComment,key:index,editComment:_this2.editComment,scrollToQuote:_this2.scrollToQuote,deleteComment:_this2.deleteComment});}))),_react2.default.createElement('div',{className:'seafile-comment-footer',style:{height:this.state.commentFooterHeight+'%'}},_react2.default.createElement('div',{className:'seafile-comment-row-resize',onMouseDown:this.onResizeMouseDown}),_react2.default.createElement('div',{className:'seafile-add-comment'},_react2.default.createElement('textarea',{className:'add-comment-input',value:this.state.comment,placeholder:(0,_constants.gettext)('Add a comment.'),onChange:this.handleCommentChange,clos:'100',rows:'3',warp:'virtual'}),_react2.default.createElement(_reactstrap.Button,{className:'comment-btn',color:'success',size:'sm',onClick:this.submitComment},(0,_constants.gettext)('Submit')))));}}]);return ReviewComments;}(_react2.default.Component);ReviewComments.propTypes=commentPropTypes;var commentItemPropTypes={item:_propTypes2.default.object.isRequired,deleteComment:_propTypes2.default.func.isRequired,resolveComment:_propTypes2.default.func.isRequired,editComment:_propTypes2.default.func.isRequired,showResolvedComment:_propTypes2.default.bool.isRequired,scrollToQuote:_propTypes2.default.func.isRequired};var CommentItem=function(_React$Component2){_inherits(CommentItem,_React$Component2);function CommentItem(props){_classCallCheck(this,CommentItem);var _this3=_possibleConstructorReturn(this,(CommentItem.__proto__||Object.getPrototypeOf(CommentItem)).call(this,props));_this3.toggleDropDownMenu=function(){_this3.setState({dropdownOpen:!_this3.state.dropdownOpen});};_this3.convertComment=function(item){_seafileMarkdown2html.processor.process(item.comment).then(function(result){var comment=String(result);_this3.setState({comment:comment});});_seafileMarkdown2html.processor.process(item.quote).then(function(result){var quote=String(result);_this3.setState({quote:quote});});};_this3.scrollToQuote=function(){var item=_this3.props.item;_this3.props.scrollToQuote(item.newIndex,item.oldIndex,item.quote);};_this3.toggleEditComment=function(){_this3.setState({editable:!_this3.state.editable});};_this3.updateComment=function(event){var newComment=_this3.state.newComment;if(_this3.props.item.comment!==newComment){_this3.props.editComment(event.target.id,newComment);}_this3.toggleEditComment();};_this3.handleCommentChange=function(event){_this3.setState({newComment:event.target.value});};_this3.state={dropdownOpen:false,comment:'',quote:'',newComment:_this3.props.item.comment,editable:false};return _this3;}_createClass(CommentItem,[{key:'componentWillMount',value:function componentWillMount(){this.convertComment(this.props.item);}},{key:'componentWillReceiveProps',value:function componentWillReceiveProps(nextProps){this.convertComment(nextProps.item);}},{key:'render',value:function render(){var item=this.props.item;if(item.resolved&&!this.props.showResolvedComment){return null;}if(this.state.editable){return _react2.default.createElement('li',{className:'seafile-comment-item',id:item.id},_react2.default.createElement('div',{className:'seafile-comment-info'},_react2.default.createElement('img',{className:'avatar',src:item.avatarUrl,alt:''}),_react2.default.createElement('div',{className:'reviewer-info'},_react2.default.createElement('div',{className:'reviewer-name'},item.name),_react2.default.createElement('div',{className:'review-time'},item.time))),_react2.default.createElement('div',{className:'seafile-edit-comment'},_react2.default.createElement('textarea',{className:'edit-comment-input',value:this.state.newComment,onChange:this.handleCommentChange,clos:'100',rows:'3',warp:'virtual'}),_react2.default.createElement(_reactstrap.Button,{className:'comment-btn',color:'success',size:'sm',onClick:this.updateComment,id:item.id},(0,_constants.gettext)('Update')),' ',_react2.default.createElement(_reactstrap.Button,{className:'comment-btn',color:'secondary',size:'sm',onClick:this.toggleEditComment},' ',(0,_constants.gettext)('Cancel'))));}return _react2.default.createElement('li',{className:item.resolved?'seafile-comment-item seafile-comment-item-resolved':'seafile-comment-item',id:item.id},_react2.default.createElement('div',{className:'seafile-comment-info'},_react2.default.createElement('img',{className:'avatar',src:item.avatarUrl,alt:''}),_react2.default.createElement('div',{className:'reviewer-info'},_react2.default.createElement('div',{className:'reviewer-name'},item.name),_react2.default.createElement('div',{className:'review-time'},item.time)),!item.resolved&&_react2.default.createElement(_reactstrap.Dropdown,{isOpen:this.state.dropdownOpen,size:'sm',className:'seafile-comment-dropdown',toggle:this.toggleDropDownMenu},_react2.default.createElement(_reactstrap.DropdownToggle,{className:'seafile-comment-dropdown-btn'},_react2.default.createElement('i',{className:'fas fa-ellipsis-v'})),_react2.default.createElement(_reactstrap.DropdownMenu,null,item.userEmail===_constants2.username&&_react2.default.createElement(_reactstrap.DropdownItem,{onClick:this.props.deleteComment,className:'delete-comment',id:item.id},(0,_constants.gettext)('Delete')),item.userEmail===_constants2.username&&_react2.default.createElement(_reactstrap.DropdownItem,{onClick:this.toggleEditComment,className:'edit-comment',id:item.id},(0,_constants.gettext)('Edit')),_react2.default.createElement(_reactstrap.DropdownItem,{onClick:this.props.resolveComment,className:'seafile-comment-resolved',id:item.id},(0,_constants.gettext)('Mark as resolved'))))),item.newIndex>=-1&&item.oldIndex>=-1&&_react2.default.createElement('blockquote',{className:'seafile-comment-content'},_react2.default.createElement('div',{onClick:this.scrollToQuote,dangerouslySetInnerHTML:{__html:this.state.quote}})),_react2.default.createElement('div',{className:'seafile-comment-content',dangerouslySetInnerHTML:{__html:this.state.comment}}));}}]);return CommentItem;}(_react2.default.Component);CommentItem.propTypes=commentItemPropTypes;exports.default=ReviewComments;\n\n/***/ }),\n\n/***/ 1309:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/* Dependencies. */\nvar extend = __webpack_require__(564)\nvar bail = __webpack_require__(565)\nvar vfile = __webpack_require__(1310)\nvar trough = __webpack_require__(569)\nvar string = __webpack_require__(570)\nvar plain = __webpack_require__(571)\n\n/* Expose a frozen processor. */\nmodule.exports = unified().freeze()\n\nvar slice = [].slice\nvar own = {}.hasOwnProperty\n\n/* Process pipeline. */\nvar pipeline = trough()\n  .use(pipelineParse)\n  .use(pipelineRun)\n  .use(pipelineStringify)\n\nfunction pipelineParse(p, ctx) {\n  ctx.tree = p.parse(ctx.file)\n}\n\nfunction pipelineRun(p, ctx, next) {\n  p.run(ctx.tree, ctx.file, done)\n\n  function done(err, tree, file) {\n    if (err) {\n      next(err)\n    } else {\n      ctx.tree = tree\n      ctx.file = file\n      next()\n    }\n  }\n}\n\nfunction pipelineStringify(p, ctx) {\n  ctx.file.contents = p.stringify(ctx.tree, ctx.file)\n}\n\n/* Function to create the first processor. */\nfunction unified() {\n  var attachers = []\n  var transformers = trough()\n  var namespace = {}\n  var frozen = false\n  var freezeIndex = -1\n\n  /* Data management. */\n  processor.data = data\n\n  /* Lock. */\n  processor.freeze = freeze\n\n  /* Plug-ins. */\n  processor.attachers = attachers\n  processor.use = use\n\n  /* API. */\n  processor.parse = parse\n  processor.stringify = stringify\n  processor.run = run\n  processor.runSync = runSync\n  processor.process = process\n  processor.processSync = processSync\n\n  /* Expose. */\n  return processor\n\n  /* Create a new processor based on the processor\n   * in the current scope. */\n  function processor() {\n    var destination = unified()\n    var length = attachers.length\n    var index = -1\n\n    while (++index < length) {\n      destination.use.apply(null, attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /* Freeze: used to signal a processor that has finished\n   * configuration.\n   *\n   * For example, take unified itself.  It’s frozen.\n   * Plug-ins should not be added to it.  Rather, it should\n   * be extended, by invoking it, before modifying it.\n   *\n   * In essence, always invoke this when exporting a\n   * processor. */\n  function freeze() {\n    var values\n    var plugin\n    var options\n    var transformer\n\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      values = attachers[freezeIndex]\n      plugin = values[0]\n      options = values[1]\n      transformer = null\n\n      if (options === false) {\n        continue\n      }\n\n      if (options === true) {\n        values[1] = undefined\n      }\n\n      transformer = plugin.apply(processor, values.slice(1))\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Infinity\n\n    return processor\n  }\n\n  /* Data management.\n   * Getter / setter for processor-specific informtion. */\n  function data(key, value) {\n    if (string(key)) {\n      /* Set `key`. */\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n\n        namespace[key] = value\n\n        return processor\n      }\n\n      /* Get `key`. */\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    /* Set space. */\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    /* Get space. */\n    return namespace\n  }\n\n  /* Plug-in management.\n   *\n   * Pass it:\n   * *   an attacher and options,\n   * *   a preset,\n   * *   a list of presets, attachers, and arguments (list\n   *     of attachers and options). */\n  function use(value) {\n    var settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      /* Empty */\n    } else if (typeof value === 'function') {\n      addPlugin.apply(null, arguments)\n    } else if (typeof value === 'object') {\n      if ('length' in value) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new Error('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = extend(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = extend(settings || {}, result.settings)\n      }\n    }\n\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if ('length' in value) {\n          addPlugin.apply(null, value)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new Error('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    function addList(plugins) {\n      var length\n      var index\n\n      if (plugins === null || plugins === undefined) {\n        /* Empty */\n      } else if (typeof plugins === 'object' && 'length' in plugins) {\n        length = plugins.length\n        index = -1\n\n        while (++index < length) {\n          add(plugins[index])\n        }\n      } else {\n        throw new Error('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    function addPlugin(plugin, value) {\n      var entry = find(plugin)\n\n      if (entry) {\n        if (plain(entry[1]) && plain(value)) {\n          value = extend(entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        attachers.push(slice.call(arguments))\n      }\n    }\n  }\n\n  function find(plugin) {\n    var length = attachers.length\n    var index = -1\n    var entry\n\n    while (++index < length) {\n      entry = attachers[index]\n\n      if (entry[0] === plugin) {\n        return entry\n      }\n    }\n  }\n\n  /* Parse a file (in string or VFile representation)\n   * into a Unist node using the `Parser` on the\n   * processor. */\n  function parse(doc) {\n    var file = vfile(doc)\n    var Parser\n\n    freeze()\n    Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser)) {\n      return new Parser(String(file), file).parse()\n    }\n\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /* Run transforms on a Unist node representation of a file\n   * (in string or VFile representation), async. */\n  function run(node, file, cb) {\n    assertNode(node)\n    freeze()\n\n    if (!cb && typeof file === 'function') {\n      cb = file\n      file = null\n    }\n\n    if (!cb) {\n      return new Promise(executor)\n    }\n\n    executor(null, cb)\n\n    function executor(resolve, reject) {\n      transformers.run(node, vfile(file), done)\n\n      function done(err, tree, file) {\n        tree = tree || node\n        if (err) {\n          reject(err)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          cb(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /* Run transforms on a Unist node representation of a file\n   * (in string or VFile representation), sync. */\n  function runSync(node, file) {\n    var complete = false\n    var result\n\n    run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    return result\n\n    function done(err, tree) {\n      complete = true\n      bail(err)\n      result = tree\n    }\n  }\n\n  /* Stringify a Unist node representation of a file\n   * (in string or VFile representation) into a string\n   * using the `Compiler` on the processor. */\n  function stringify(node, doc) {\n    var file = vfile(doc)\n    var Compiler\n\n    freeze()\n    Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler)) {\n      return new Compiler(node, file).compile()\n    }\n\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /* Parse a file (in string or VFile representation)\n   * into a Unist node using the `Parser` on the processor,\n   * then run transforms on that node, and compile the\n   * resulting node using the `Compiler` on the processor,\n   * and store that result on the VFile. */\n  function process(doc, cb) {\n    freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!cb) {\n      return new Promise(executor)\n    }\n\n    executor(null, cb)\n\n    function executor(resolve, reject) {\n      var file = vfile(doc)\n\n      pipeline.run(processor, {file: file}, done)\n\n      function done(err) {\n        if (err) {\n          reject(err)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          cb(null, file)\n        }\n      }\n    }\n  }\n\n  /* Process the given document (in string or VFile\n   * representation), sync. */\n  function processSync(doc) {\n    var complete = false\n    var file\n\n    freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n    file = vfile(doc)\n\n    process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    function done(err) {\n      complete = true\n      bail(err)\n    }\n  }\n}\n\n/* Check if `func` is a constructor. */\nfunction newable(value) {\n  return typeof value === 'function' && keys(value.prototype)\n}\n\n/* Check if `value` is an object with keys. */\nfunction keys(value) {\n  var key\n  for (key in value) {\n    return true\n  }\n  return false\n}\n\n/* Assert a parser is available. */\nfunction assertParser(name, Parser) {\n  if (typeof Parser !== 'function') {\n    throw new Error('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/* Assert a compiler is available. */\nfunction assertCompiler(name, Compiler) {\n  if (typeof Compiler !== 'function') {\n    throw new Error('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/* Assert the processor is not frozen. */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      [\n        'Cannot invoke `' + name + '` on a frozen processor.\\nCreate a new ',\n        'processor first, by invoking it: use `processor()` instead of ',\n        '`processor`.'\n      ].join('')\n    )\n  }\n}\n\n/* Assert `node` is a Unist node. */\nfunction assertNode(node) {\n  if (!node || !string(node.type)) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n}\n\n/* Assert that `complete` is `true`. */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n\n/***/ }),\n\n/***/ 1310:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar VMessage = __webpack_require__(566)\nvar VFile = __webpack_require__(1311)\n\nmodule.exports = VFile\n\nvar proto = VFile.prototype\n\nproto.message = message\nproto.info = info\nproto.fail = fail\n\n/* Slight backwards compatibility.  Remove in the future. */\nproto.warn = message\n\n/* Create a message with `reason` at `position`.\n * When an error is passed in as `reason`, copies the stack. */\nfunction message(reason, position, origin) {\n  var filePath = this.path\n  var message = new VMessage(reason, position, origin)\n\n  if (filePath) {\n    message.name = filePath + ':' + message.name\n    message.file = filePath\n  }\n\n  message.fatal = false\n\n  this.messages.push(message)\n\n  return message\n}\n\n/* Fail. Creates a vmessage, associates it with the file,\n * and throws it. */\nfunction fail() {\n  var message = this.message.apply(this, arguments)\n\n  message.fatal = true\n\n  throw message\n}\n\n/* Info. Creates a vmessage, associates it with the file,\n * and marks the fatality as null. */\nfunction info() {\n  var message = this.message.apply(this, arguments)\n\n  message.fatal = null\n\n  return message\n}\n\n\n/***/ }),\n\n/***/ 1311:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {\n\nvar path = __webpack_require__(253)\nvar replace = __webpack_require__(567)\nvar buffer = __webpack_require__(1312)\n\nmodule.exports = VFile\n\nvar own = {}.hasOwnProperty\nvar proto = VFile.prototype\n\nproto.toString = toString\n\n/* Order of setting (least specific to most), we need this because\n * otherwise `{stem: 'a', path: '~/b.js'}` would throw, as a path\n * is needed before a stem can be set. */\nvar order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\n/* Construct a new file. */\nfunction VFile(options) {\n  var prop\n  var index\n  var length\n\n  if (!options) {\n    options = {}\n  } else if (typeof options === 'string' || buffer(options)) {\n    options = {contents: options}\n  } else if ('message' in options && 'messages' in options) {\n    return options\n  }\n\n  if (!(this instanceof VFile)) {\n    return new VFile(options)\n  }\n\n  this.data = {}\n  this.messages = []\n  this.history = []\n  this.cwd = process.cwd()\n\n  /* Set path related properties in the correct order. */\n  index = -1\n  length = order.length\n\n  while (++index < length) {\n    prop = order[index]\n\n    if (own.call(options, prop)) {\n      this[prop] = options[prop]\n    }\n  }\n\n  /* Set non-path related properties. */\n  for (prop in options) {\n    if (order.indexOf(prop) === -1) {\n      this[prop] = options[prop]\n    }\n  }\n}\n\n/* Access full path (`~/index.min.js`). */\nObject.defineProperty(proto, 'path', {\n  get: function() {\n    return this.history[this.history.length - 1]\n  },\n  set: function(path) {\n    assertNonEmpty(path, 'path')\n\n    if (path !== this.path) {\n      this.history.push(path)\n    }\n  }\n})\n\n/* Access parent path (`~`). */\nObject.defineProperty(proto, 'dirname', {\n  get: function() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  },\n  set: function(dirname) {\n    assertPath(this.path, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n})\n\n/* Access basename (`index.min.js`). */\nObject.defineProperty(proto, 'basename', {\n  get: function() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  },\n  set: function(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n})\n\n/* Access extname (`.js`). */\nObject.defineProperty(proto, 'extname', {\n  get: function() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  },\n  set: function(extname) {\n    var ext = extname || ''\n\n    assertPart(ext, 'extname')\n    assertPath(this.path, 'extname')\n\n    if (ext) {\n      if (ext.charAt(0) !== '.') {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (ext.indexOf('.', 1) !== -1) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = replace(this.path, ext)\n  }\n})\n\n/* Access stem (`index.min`). */\nObject.defineProperty(proto, 'stem', {\n  get: function() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  },\n  set: function(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n})\n\n/* Get the value of the file. */\nfunction toString(encoding) {\n  var value = this.contents || ''\n  return buffer(value) ? value.toString(encoding) : String(value)\n}\n\n/* Assert that `part` is not a path (i.e., does\n * not contain `path.sep`). */\nfunction assertPart(part, name) {\n  if (part.indexOf(path.sep) !== -1) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/* Assert that `part` is not empty. */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/* Assert `path` exists. */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(67)))\n\n/***/ }),\n\n/***/ 1312:\n/***/ (function(module, exports) {\n\n/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n\n/***/ }),\n\n/***/ 1313:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});var _moment=__webpack_require__(6);var _moment2=_interopRequireDefault(_moment);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}var reviewComment=function reviewComment(item){_classCallCheck(this,reviewComment);var oldTime=new Date(item.created_at).getTime();this.time=(0,_moment2.default)(oldTime).format('YYYY-MM-DD HH:mm');this.id=item.id;this.avatarUrl=item.avatar_url;this.comment=item.comment;this.name=item.user_name;this.userEmail=item.user_email;this.resolved=item.resolved;if(item.detail){var detail=JSON.parse(item.detail);this.newIndex=detail.newIndex;this.oldIndex=detail.oldIndex;this.quote=detail.quote;}};exports.default=reviewComment;\n\n/***/ }),\n\n/***/ 1314:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 1315:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);var _propTypes=__webpack_require__(1);var _propTypes2=_interopRequireDefault(_propTypes);var _reactstrap=__webpack_require__(5);var _seafileApi=__webpack_require__(3);var _constants=__webpack_require__(2);var _seafileMarkdown2html=__webpack_require__(646);__webpack_require__(1316);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var commentDialogPropTypes={onCommentAdded:_propTypes2.default.func.isRequired,toggleCommentDialog:_propTypes2.default.func.isRequired,quote:_propTypes2.default.string,newIndex:_propTypes2.default.number,oldIndex:_propTypes2.default.number,draftID:_propTypes2.default.string};var ReviewCommentDialog=function(_React$Component){_inherits(ReviewCommentDialog,_React$Component);function ReviewCommentDialog(props){_classCallCheck(this,ReviewCommentDialog);var _this=_possibleConstructorReturn(this,(ReviewCommentDialog.__proto__||Object.getPrototypeOf(ReviewCommentDialog)).call(this,props));_this.handleCommentChange=function(event){var comment=event.target.value;_this.setState({comment:comment});};_this.submitComment=function(){var comment=_this.state.comment.trim();if(comment.length>0){if(_this.props.quote.length>0){var detail={quote:_this.props.quote,newIndex:_this.props.newIndex,oldIndex:_this.props.oldIndex};var detailJSON=JSON.stringify(detail);_seafileApi.seafileAPI.postComment(_constants.draftRepoID,_constants.draftFilePath,comment,detailJSON).then(function(response){_this.props.onCommentAdded();});}else{_seafileApi.seafileAPI.postComment(_constants.draftRepoID,_constants.draftFilePath,comment).then(function(response){_this.props.onCommentAdded();});}_this.setState({comment:''});}};_this.setQuoteText=function(mdQuote){_seafileMarkdown2html.processor.process(mdQuote).then(function(result){var quote=String(result);_this.setState({quote:quote});});};_this.state={comment:'',quote:''};return _this;}_createClass(ReviewCommentDialog,[{key:'componentDidMount',value:function componentDidMount(){this.setQuoteText(this.props.quote);}},{key:'componentWillReceiveProps',value:function componentWillReceiveProps(nextProps){if(this.props.quote!==nextProps.quote){this.setQuoteText(nextProps.quote);}}},{key:'render',value:function render(){return _react2.default.createElement('div',{className:'review-comment-dialog'},_react2.default.createElement('div',null,_constants.name),_react2.default.createElement('blockquote',{className:'review-comment-dialog-quote'},_react2.default.createElement('div',{dangerouslySetInnerHTML:{__html:this.state.quote}})),_react2.default.createElement('textarea',{value:this.state.comment,onChange:this.handleCommentChange}),_react2.default.createElement('div',{className:'button-group'},_react2.default.createElement(_reactstrap.Button,{size:'sm',color:'primary',onClick:this.submitComment},(0,_constants.gettext)('Submit')),_react2.default.createElement(_reactstrap.Button,{size:'sm',color:'secondary',onClick:this.props.toggleCommentDialog},(0,_constants.gettext)('Cancel'))),_react2.default.createElement('span',{className:'review-comment-dialog-triangle'}));}}]);return ReviewCommentDialog;}(_react2.default.Component);ReviewCommentDialog.propTypes=commentDialogPropTypes;exports.default=ReviewCommentDialog;\n\n/***/ }),\n\n/***/ 1316:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 1317:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);var _propTypes=__webpack_require__(1);var _propTypes2=_interopRequireDefault(_propTypes);var _constants=__webpack_require__(2);var _reactstrap=__webpack_require__(5);var _seafileApi=__webpack_require__(3);var _userSelect=__webpack_require__(27);var _userSelect2=_interopRequireDefault(_userSelect);__webpack_require__(1318);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var propTypes={showReviewerDialog:_propTypes2.default.bool.isRequired,draftID:_propTypes2.default.string.isRequired,toggleAddReviewerDialog:_propTypes2.default.func.isRequired,reviewers:_propTypes2.default.array.isRequired};var AddReviewerDialog=function(_React$Component){_inherits(AddReviewerDialog,_React$Component);function AddReviewerDialog(props){_classCallCheck(this,AddReviewerDialog);var _this=_possibleConstructorReturn(this,(AddReviewerDialog.__proto__||Object.getPrototypeOf(AddReviewerDialog)).call(this,props));_this.listReviewers=function(){_seafileApi.seafileAPI.listDraftReviewers(_this.props.draftID).then(function(res){_this.setState({reviewers:res.data.reviewers});});};_this.handleSelectChange=function(option){_this.setState({selectedOption:option});_this.Options=[];};_this.addReviewers=function(){if(_this.state.selectedOption.length>0){_this.refs.reviewSelect.clearSelect();var reviewers=[];for(var i=0;i<_this.state.selectedOption.length;i++){reviewers[i]=_this.state.selectedOption[i].email;}_this.setState({loading:true,errorMsg:[]});_seafileApi.seafileAPI.addDraftReviewers(_this.props.draftID,reviewers).then(function(res){if(res.data.failed.length>0){var errorMsg=[];for(var _i=0;_i<res.data.failed.length;_i++){errorMsg[_i]=res.data.failed[_i];}_this.setState({errorMsg:errorMsg});}_this.setState({selectedOption:null,loading:false});if(res.data.success.length>0){_this.listReviewers();}});}};_this.deleteReviewer=function(event){var reviewer=event.target.getAttribute('name');_seafileApi.seafileAPI.deleteDraftReviewer(_this.props.draftID,reviewer).then(function(res){if(res.data===200){var newReviewers=[];for(var i=0;i<_this.state.reviewers.length;i++){if(_this.state.reviewers[i].user_email!==reviewer){newReviewers.push(_this.state.reviewers[i]);}}_this.setState({reviewers:newReviewers});}});};_this.state={reviewers:_this.props.reviewers,selectedOption:null,errorMsg:[],loading:false};_this.Options=[];return _this;}_createClass(AddReviewerDialog,[{key:'render',value:function render(){var _this2=this;return _react2.default.createElement(_reactstrap.Modal,{isOpen:true,toggle:this.props.toggleAddReviewerDialog},_react2.default.createElement(_reactstrap.ModalHeader,null,(0,_constants.gettext)('Request a review')),_react2.default.createElement(_reactstrap.ModalBody,null,_react2.default.createElement('p',null,(0,_constants.gettext)('Add new reviewer')),_react2.default.createElement('div',{className:'add-reviewer'},_react2.default.createElement(_userSelect2.default,{placeholder:(0,_constants.gettext)('Select users...'),onSelectChange:this.handleSelectChange,ref:'reviewSelect',isMulti:true,className:'reviewer-select'}),this.state.selectedOption&&!this.state.loading?_react2.default.createElement(_reactstrap.Button,{color:'secondary',onClick:this.addReviewers},(0,_constants.gettext)('Submit')):_react2.default.createElement(_reactstrap.Button,{color:'secondary',disabled:true},(0,_constants.gettext)('Submit'))),this.state.errorMsg.length>0&&this.state.errorMsg.map(function(item){var index=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var arr=arguments[2];return _react2.default.createElement('p',{className:'reviewer-select-error error',key:index},_this2.state.errorMsg[index].email,': ',_this2.state.errorMsg[index].error_msg);}),this.state.reviewers.length>0&&this.state.reviewers.map(function(item){var index=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var arr=arguments[2];return _react2.default.createElement('div',{className:'reviewer-select-info',key:index},_react2.default.createElement('div',null,_react2.default.createElement('img',{className:'avatar reviewer-select-avatar',src:item.avatar_url,alt:''}),_react2.default.createElement('span',{className:'reviewer-select-name'},item.user_name)),_react2.default.createElement('i',{className:'fa fa-times',name:item.user_email,onClick:_this2.deleteReviewer}));})),_react2.default.createElement(_reactstrap.ModalFooter,null,_react2.default.createElement(_reactstrap.Button,{color:'secondary',onClick:this.props.toggleAddReviewerDialog},(0,_constants.gettext)('Close'))));}}]);return AddReviewerDialog;}(_react2.default.Component);AddReviewerDialog.propTypes=propTypes;exports.default=AddReviewerDialog;\n\n/***/ }),\n\n/***/ 1318:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 1319:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);var _axios=__webpack_require__(258);var _axios2=_interopRequireDefault(_axios);var _loading=__webpack_require__(11);var _loading2=_interopRequireDefault(_loading);var _moment=__webpack_require__(6);var _moment2=_interopRequireDefault(_moment);var _seafileApi=__webpack_require__(3);var _constants=__webpack_require__(2);__webpack_require__(439);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}/* eslint-disable linebreak-style */_moment2.default.locale(window.app.config.lang);var HistoryList=function(_React$Component){_inherits(HistoryList,_React$Component);function HistoryList(props){_classCallCheck(this,HistoryList);var _this=_possibleConstructorReturn(this,(HistoryList.__proto__||Object.getPrototypeOf(HistoryList)).call(this,props));_this.onClick=function(event,key,preItem,currentItem){if(key===_this.state.activeItem)return false;_this.props.onHistoryItemClick(currentItem,preItem,key);};_this.onScroll=function(event){var clientHeight=event.target.clientHeight;var scrollHeight=event.target.scrollHeight;var scrollTop=event.target.scrollTop;var isBottom=clientHeight+scrollTop+1>=scrollHeight;if(isBottom){if(_this.props.totalReversionCount>_this.perPage*_this.state.currentPage){var currentPage=_this.state.currentPage+1;_this.setState({currentPage:currentPage,loading:true});_seafileApi.seafileAPI.listFileHistoryRecords(_constants.draftOriginRepoID,_constants.draftFilePath,currentPage,_this.perPage).then(function(res){var currentHistoryList=Object.assign([],_this.props.historyList);_this.props.onHistoryListChange([].concat(_toConsumableArray(currentHistoryList),_toConsumableArray(res.data.data)));_this.setState({loading:false});});}}};_this.perPage=25;_this.state={currentPage:1,loading:false};return _this;}_createClass(HistoryList,[{key:'render',value:function render(){var _this2=this;return _react2.default.createElement('div',{className:'history-body'},_react2.default.createElement('ul',{onScroll:this.onScroll,className:'history-list-container'},this.props.historyList?this.props.historyList.map(function(item){var index=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var arr=arguments[2];var preItemIndex=index+1;if(preItemIndex===arr.length){preItemIndex=index;}return _react2.default.createElement(HistoryItem,{onClick:_this2.onClick,ctime:item.ctime,className:_this2.props.activeItem===index?'item-active':'',name:item.creator_name,index:index,key:index,preItem:arr[preItemIndex],currentItem:item});}):_react2.default.createElement(_loading2.default,null),this.state.loading&&_react2.default.createElement('li',{className:'reloading-reversion'},_react2.default.createElement(_loading2.default,null))));}}]);return HistoryList;}(_react2.default.Component);var HistoryItem=function(_React$Component2){_inherits(HistoryItem,_React$Component2);function HistoryItem(){_classCallCheck(this,HistoryItem);return _possibleConstructorReturn(this,(HistoryItem.__proto__||Object.getPrototypeOf(HistoryItem)).apply(this,arguments));}_createClass(HistoryItem,[{key:'render',value:function render(){var _this4=this;var time=_moment2.default.parseZone(this.props.ctime).format('YYYY-MM-DD HH:mm');return _react2.default.createElement('li',{onClick:function onClick(event){return _this4.props.onClick(event,_this4.props.index,_this4.props.preItem,_this4.props.currentItem);},className:'history-list-item '+this.props.className},_react2.default.createElement('div',{className:'history-info'},_react2.default.createElement('div',{className:'time'},time),_react2.default.createElement('div',{className:'owner'},_react2.default.createElement('i',{className:'squire-icon'}),_react2.default.createElement('span',null,this.props.name))));}}]);return HistoryItem;}(_react2.default.Component);exports.default=HistoryList;\n\n/***/ }),\n\n/***/ 1320:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 2:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});var dirPath=exports.dirPath='/';var gettext=exports.gettext=window.gettext;var siteRoot=exports.siteRoot=window.app.config.siteRoot;var loginUrl=exports.loginUrl=window.app.config.loginUrl;var avatarInfo=exports.avatarInfo=window.app.config.avatarInfo;var logoPath=exports.logoPath=window.app.config.logoPath;var mediaUrl=exports.mediaUrl=window.app.config.mediaUrl;var siteTitle=exports.siteTitle=window.app.config.siteTitle;var siteName=exports.siteName=window.app.config.siteName;var logoWidth=exports.logoWidth=window.app.config.logoWidth;var logoHeight=exports.logoHeight=window.app.config.logoHeight;var isPro=exports.isPro=window.app.config.isPro==='True';var isDocs=exports.isDocs=window.app.config.isDocs==='True';var lang=exports.lang=window.app.config.lang;var fileServerRoot=exports.fileServerRoot=window.app.config.fileServerRoot;var seafileVersion=exports.seafileVersion=window.app.config.seafileVersion;var serviceURL=exports.serviceURL=window.app.config.serviceURL;//pageOptions\nvar seafileCollabServer=exports.seafileCollabServer=window.app.pageOptions.seafileCollabServer;var name=exports.name=window.app.pageOptions.name;var contactEmail=exports.contactEmail=window.app.pageOptions.contactEmail;var username=exports.username=window.app.pageOptions.username;var canAddRepo=exports.canAddRepo=window.app.pageOptions.canAddRepo;var canGenerateShareLink=exports.canGenerateShareLink=window.app.pageOptions.canGenerateShareLink;var canGenerateUploadLink=exports.canGenerateUploadLink=window.app.pageOptions.canGenerateUploadLink?true:false;var canViewOrg=exports.canViewOrg=window.app.pageOptions.canViewOrg==='True';var fileAuditEnabled=exports.fileAuditEnabled=window.app.pageOptions.fileAuditEnabled?true:false;var enableFileComment=exports.enableFileComment=window.app.pageOptions.enableFileComment?true:false;var folderPermEnabled=exports.folderPermEnabled=window.app.pageOptions.folderPermEnabled==='True';var enableResetEncryptedRepoPassword=exports.enableResetEncryptedRepoPassword=window.app.pageOptions.enableResetEncryptedRepoPassword==='True';var isEmailConfigured=exports.isEmailConfigured=window.app.pageOptions.isEmailConfigured==='True';var enableUploadFolder=exports.enableUploadFolder=window.app.pageOptions.enableUploadFolder==='True';var enableResumableFileUpload=exports.enableResumableFileUpload=window.app.pageOptions.enableResumableFileUpload==='True';var storages=exports.storages=window.app.pageOptions.storages;// storage backends\nvar enableRepoSnapshotLabel=exports.enableRepoSnapshotLabel=window.app.pageOptions.enableRepoSnapshotLabel;var shareLinkExpireDaysMin=exports.shareLinkExpireDaysMin=window.app.pageOptions.shareLinkExpireDaysMin;var shareLinkExpireDaysMax=exports.shareLinkExpireDaysMax=window.app.pageOptions.shareLinkExpireDaysMax;var maxFileName=exports.maxFileName=window.app.pageOptions.maxFileName;var enableWiki=exports.enableWiki=window.app.pageOptions.enableWiki;var enableEncryptedLibrary=exports.enableEncryptedLibrary=window.app.pageOptions.enableEncryptedLibrary;var enableRepoHistorySetting=exports.enableRepoHistorySetting=window.app.pageOptions.enableRepoHistorySetting;var isSystemStaff=exports.isSystemStaff=window.app.pageOptions.isSystemStaff;var thumbnailSizeForOriginal=exports.thumbnailSizeForOriginal=window.app.pageOptions.thumbnailSizeForOriginal;var repoPasswordMinLength=exports.repoPasswordMinLength=window.app.pageOptions.repoPasswordMinLength;var curNoteMsg=exports.curNoteMsg=window.app.pageOptions.curNoteMsg;var curNoteID=exports.curNoteID=window.app.pageOptions.curNoteID;// wiki\nvar slug=exports.slug=window.wiki?window.wiki.config.slug:'';var repoID=exports.repoID=window.wiki?window.wiki.config.repoId:'';var initialPath=exports.initialPath=window.wiki?window.wiki.config.initial_path:'';var permission=exports.permission=window.wiki?window.wiki.config.permission==='True':'';var isDir=exports.isDir=window.wiki?window.wiki.config.isDir:'';var serviceUrl=exports.serviceUrl=window.wiki?window.wiki.config.serviceUrl:'';var isPublicWiki=exports.isPublicWiki=window.wiki?window.wiki.config.isPublicWiki==='True':'';// file history\nvar PER_PAGE=exports.PER_PAGE=25;var historyRepoID=exports.historyRepoID=window.fileHistory?window.fileHistory.pageOptions.repoID:'';var repoName=exports.repoName=window.fileHistory?window.fileHistory.pageOptions.repoName:'';var filePath=exports.filePath=window.fileHistory?window.fileHistory.pageOptions.filePath:'';var fileName=exports.fileName=window.fileHistory?window.fileHistory.pageOptions.fileName:'';// Draft review\nvar draftFilePath=exports.draftFilePath=window.draft?window.draft.config.draftFilePath:'';var draftOriginFilePath=exports.draftOriginFilePath=window.draft?window.draft.config.draftOriginFilePath:'';var draftFileName=exports.draftFileName=window.draft?window.draft.config.draftFileName:'';var draftID=exports.draftID=window.draft?window.draft.config.draftID:'';var draftRepoID=exports.draftRepoID=window.draft?window.draft.config.draftRepoID:'';var author=exports.author=window.draft?window.draft.config.author:'';var authorAvatar=exports.authorAvatar=window.draft?window.draft.config.authorAvatar:'';var originFileExists=exports.originFileExists=window.draft?window.draft.config.originFileExists:'';var draftFileExists=exports.draftFileExists=window.draft?window.draft.config.draftFileExists:'';var draftStatus=exports.draftStatus=window.draft?window.draft.config.draftStatus:'';var draftPublishVersion=exports.draftPublishVersion=window.draft?window.draft.config.draftPublishVersion:'';var originFileVersion=exports.originFileVersion=window.draft?window.draft.config.originFileVersion:'';// org admin\nvar orgID=exports.orgID=window.org?window.org.pageOptions.orgID:'';var invitationLink=exports.invitationLink=window.org?window.org.pageOptions.invitationLink:'';var orgMemberQuotaEnabled=exports.orgMemberQuotaEnabled=window.org?window.org.pageOptions.orgMemberQuotaEnabled:'';// sys admin\nvar constanceEnabled=exports.constanceEnabled=window.sysadmin?window.sysadmin.pageOptions.constance_enabled:'';var multiTenancy=exports.multiTenancy=window.sysadmin?window.sysadmin.pageOptions.multi_tenancy:'';var multiInstitution=exports.multiInstitution=window.sysadmin?window.sysadmin.pageOptions.multi_institution:'';var sysadminExtraEnabled=exports.sysadminExtraEnabled=window.sysadmin?window.sysadmin.pageOptions.sysadmin_extra_enabled:'';var enableGuestInvitation=exports.enableGuestInvitation=window.sysadmin?window.sysadmin.pageOptions.enable_guest_invitation:'';var enableTermsAndConditions=exports.enableTermsAndConditions=window.sysadmin?window.sysadmin.pageOptions.enable_terms_and_conditions:'';var isDefaultAdmin=exports.isDefaultAdmin=window.sysadmin?window.sysadmin.pageOptions.is_default_admin:'';var enableFileScan=exports.enableFileScan=window.sysadmin?window.sysadmin.pageOptions.enable_file_scan:'';var canViewSystemInfo=exports.canViewSystemInfo=window.sysadmin?window.sysadmin.pageOptions.admin_permissions.can_view_system_info:'';var canViewStatistic=exports.canViewStatistic=window.sysadmin?window.sysadmin.pageOptions.admin_permissions.can_view_statistic:'';var canConfigSystem=exports.canConfigSystem=window.sysadmin?window.sysadmin.pageOptions.admin_permissions.can_config_system:'';var canManageLibrary=exports.canManageLibrary=window.sysadmin?window.sysadmin.pageOptions.admin_permissions.can_manage_library:'';var canManageUser=exports.canManageUser=window.sysadmin?window.sysadmin.pageOptions.admin_permissions.can_manage_user:'';var canManageGroup=exports.canManageGroup=window.sysadmin?window.sysadmin.pageOptions.admin_permissions.can_manage_group:'';var canViewUserLog=exports.canViewUserLog=window.sysadmin?window.sysadmin.pageOptions.admin_permissions.can_view_user_log:'';var canViewAdminLog=exports.canViewAdminLog=window.sysadmin?window.sysadmin.pageOptions.admin_permissions.can_view_admin_log:'';\n\n/***/ }),\n\n/***/ 239:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 27:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);var _propTypes=__webpack_require__(1);var _propTypes2=_interopRequireDefault(_propTypes);var _Async=__webpack_require__(84);var _Async2=_interopRequireDefault(_Async);var _seafileApi=__webpack_require__(3);var _constants=__webpack_require__(2);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var propTypes={placeholder:_propTypes2.default.string.isRequired,onSelectChange:_propTypes2.default.func.isRequired,isMulti:_propTypes2.default.bool.isRequired,className:_propTypes2.default.string};var NoOptionsMessage=function NoOptionsMessage(props){return _react2.default.createElement('div',_extends({},props.innerProps,{style:{margin:'6px 10px',textAlign:'center',color:'hsl(0,0%,50%)'}}),(0,_constants.gettext)('User not found'));};var UserSelect=function(_React$Component){_inherits(UserSelect,_React$Component);function UserSelect(props){_classCallCheck(this,UserSelect);var _this=_possibleConstructorReturn(this,(UserSelect.__proto__||Object.getPrototypeOf(UserSelect)).call(this,props));_this.handleSelectChange=function(option){_this.options=[];_this.props.onSelectChange(option);};_this.loadOptions=function(input,callback){var value=input.trim();if(value.length>0){_seafileApi.seafileAPI.searchUsers(value).then(function(res){_this.options=[];for(var i=0;i<res.data.users.length;i++){var item=res.data.users[i];var obj={};obj.value=item.name;obj.email=item.email;obj.label=_react2.default.createElement(_react2.default.Fragment,null,_react2.default.createElement('img',{src:item.avatar_url,className:'select-module select-module-icon avatar',alt:''}),_react2.default.createElement('span',{className:'select-module select-module-name'},item.name));_this.options.push(obj);}callback(_this.options);});}};_this.clearSelect=function(){_this.refs.userSelect.select.onChange([],{action:'clear'});};_this.options=[];return _this;}_createClass(UserSelect,[{key:'render',value:function render(){return _react2.default.createElement(_Async2.default,{isClearable:true,classNamePrefix:true,components:{NoOptionsMessage:NoOptionsMessage},isMulti:this.props.isMulti,loadOptions:this.loadOptions,onChange:this.handleSelectChange,placeholder:this.props.placeholder,className:'user-select '+this.props.className,ref:'userSelect'});}}]);return UserSelect;}(_react2.default.Component);UserSelect.propTypes=propTypes;exports.default=UserSelect;\n\n/***/ }),\n\n/***/ 288:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(289);\n__webpack_require__(290);\n__webpack_require__(291);\n__webpack_require__(292);\n__webpack_require__(293);\n__webpack_require__(294);\n__webpack_require__(295);\n\n__webpack_require__(239);\n__webpack_require__(296);\n__webpack_require__(297);\n__webpack_require__(298);\n__webpack_require__(299);\n__webpack_require__(300);\n\n/***/ }),\n\n/***/ 289:\n/***/ (function(module, exports) {\n\nPrism.languages.c=Prism.languages.extend(\"clike\",{keyword:/\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,operator:/-[>-]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/]/,number:/(?:\\b0x[\\da-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]*/i}),Prism.languages.insertBefore(\"c\",\"string\",{macro:{pattern:/(^\\s*)#\\s*[a-z]+(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n|[\\s\\S]))*/im,lookbehind:!0,alias:\"property\",inside:{string:{pattern:/(#\\s*include\\s*)(?:<.+?>|(\"|')(?:\\\\?.)+?\\2)/,lookbehind:!0},directive:{pattern:/(#\\s*)\\b(?:define|defined|elif|else|endif|error|ifdef|ifndef|if|import|include|line|pragma|undef|using)\\b/,lookbehind:!0,alias:\"keyword\"}}},constant:/\\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\\b/}),delete Prism.languages.c[\"class-name\"],delete Prism.languages.c[\"boolean\"];\n\n/***/ }),\n\n/***/ 290:\n/***/ (function(module, exports) {\n\nPrism.languages.cpp=Prism.languages.extend(\"c\",{keyword:/\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|class|compl|const|constexpr|const_cast|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/,\"boolean\":/\\b(?:true|false)\\b/,operator:/--?|\\+\\+?|!=?|<{1,2}=?|>{1,2}=?|->|:{1,2}|={1,2}|\\^|~|%|&{1,2}|\\|\\|?|\\?|\\*|\\/|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/}),Prism.languages.insertBefore(\"cpp\",\"keyword\",{\"class-name\":{pattern:/(class\\s+)\\w+/i,lookbehind:!0}}),Prism.languages.insertBefore(\"cpp\",\"string\",{\"raw-string\":{pattern:/R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,alias:\"string\",greedy:!0}});\n\n/***/ }),\n\n/***/ 291:\n/***/ (function(module, exports) {\n\nPrism.languages.csharp=Prism.languages.extend(\"clike\",{keyword:/\\b(?:abstract|add|alias|as|ascending|async|await|base|bool|break|byte|case|catch|char|checked|class|const|continue|decimal|default|delegate|descending|do|double|dynamic|else|enum|event|explicit|extern|false|finally|fixed|float|for|foreach|from|get|global|goto|group|if|implicit|in|int|interface|internal|into|is|join|let|lock|long|namespace|new|null|object|operator|orderby|out|override|params|partial|private|protected|public|readonly|ref|remove|return|sbyte|sealed|select|set|short|sizeof|stackalloc|static|string|struct|switch|this|throw|true|try|typeof|uint|ulong|unchecked|unsafe|ushort|using|value|var|virtual|void|volatile|where|while|yield)\\b/,string:[{pattern:/@(\"|')(?:\\1\\1|\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,greedy:!0},{pattern:/(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*?\\1/,greedy:!0}],\"class-name\":[{pattern:/\\b[A-Z]\\w*(?:\\.\\w+)*\\b(?=\\s+\\w+)/,inside:{punctuation:/\\./}},{pattern:/(\\[)[A-Z]\\w*(?:\\.\\w+)*\\b/,lookbehind:!0,inside:{punctuation:/\\./}},{pattern:/(\\b(?:class|interface)\\s+[A-Z]\\w*(?:\\.\\w+)*\\s*:\\s*)[A-Z]\\w*(?:\\.\\w+)*\\b/,lookbehind:!0,inside:{punctuation:/\\./}},{pattern:/((?:\\b(?:class|interface|new)\\s+)|(?:catch\\s+\\())[A-Z]\\w*(?:\\.\\w+)*\\b/,lookbehind:!0,inside:{punctuation:/\\./}}],number:/\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)f?/i}),Prism.languages.insertBefore(\"csharp\",\"class-name\",{\"generic-method\":{pattern:/\\w+\\s*<[^>\\r\\n]+?>\\s*(?=\\()/,inside:{\"function\":/^\\w+/,\"class-name\":{pattern:/\\b[A-Z]\\w*(?:\\.\\w+)*\\b/,inside:{punctuation:/\\./}},keyword:Prism.languages.csharp.keyword,punctuation:/[<>(),.:]/}},preprocessor:{pattern:/(^\\s*)#.*/m,lookbehind:!0,alias:\"property\",inside:{directive:{pattern:/(\\s*#)\\b(?:define|elif|else|endif|endregion|error|if|line|pragma|region|undef|warning)\\b/,lookbehind:!0,alias:\"keyword\"}}}}),Prism.languages.dotnet=Prism.languages.csharp;\n\n/***/ }),\n\n/***/ 292:\n/***/ (function(module, exports) {\n\nPrism.languages.java=Prism.languages.extend(\"clike\",{keyword:/\\b(?:abstract|continue|for|new|switch|assert|default|goto|package|synchronized|boolean|do|if|private|this|break|double|implements|protected|throw|byte|else|import|public|throws|case|enum|instanceof|return|transient|catch|extends|int|short|try|char|final|interface|static|void|class|finally|long|strictfp|volatile|const|float|native|super|while)\\b/,number:/\\b0b[01]+\\b|\\b0x[\\da-f]*\\.?[\\da-fp-]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?[df]?/i,operator:{pattern:/(^|[^.])(?:\\+[+=]?|-[-=]?|!=?|<<?=?|>>?>?=?|==?|&[&=]?|\\|[|=]?|\\*=?|\\/=?|%=?|\\^=?|[?:~])/m,lookbehind:!0}}),Prism.languages.insertBefore(\"java\",\"function\",{annotation:{alias:\"punctuation\",pattern:/(^|[^.])@\\w+/,lookbehind:!0}}),Prism.languages.insertBefore(\"java\",\"class-name\",{generics:{pattern:/<\\s*\\w+(?:\\.\\w+)?(?:\\s*,\\s*\\w+(?:\\.\\w+)?)*>/i,alias:\"function\",inside:{keyword:Prism.languages.java.keyword,punctuation:/[<>(),.:]/}}});\n\n/***/ }),\n\n/***/ 293:\n/***/ (function(module, exports) {\n\nPrism.languages.python={comment:{pattern:/(^|[^\\\\])#.*/,lookbehind:!0},\"triple-quoted-string\":{pattern:/(\"\"\"|''')[\\s\\S]+?\\1/,greedy:!0,alias:\"string\"},string:{pattern:/(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0},\"function\":{pattern:/((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,lookbehind:!0},\"class-name\":{pattern:/(\\bclass\\s+)\\w+/i,lookbehind:!0},keyword:/\\b(?:as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|pass|print|raise|return|try|while|with|yield)\\b/,builtin:/\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\"boolean\":/\\b(?:True|False|None)\\b/,number:/(?:\\b(?=\\d)|\\B(?=\\.))(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*\\.?\\d*|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,operator:/[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not)\\b/,punctuation:/[{}[\\];(),.:]/};\n\n/***/ }),\n\n/***/ 294:\n/***/ (function(module, exports) {\n\nPrism.languages.sql={comment:{pattern:/(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,lookbehind:!0},string:{pattern:/(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2/,greedy:!0,lookbehind:!0},variable:/@[\\w.$]+|@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\"function\":/\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,keyword:/\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURNS?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\"boolean\":/\\b(?:TRUE|FALSE|NULL)\\b/i,number:/\\b0x[\\da-f]+\\b|\\b\\d+\\.?\\d*|\\B\\.\\d+\\b/i,operator:/[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|IN|LIKE|NOT|OR|IS|DIV|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,punctuation:/[;[\\]()`,.]/};\n\n/***/ }),\n\n/***/ 295:\n/***/ (function(module, exports) {\n\nPrism.languages.swift=Prism.languages.extend(\"clike\",{string:{pattern:/(\"|')(\\\\(?:\\((?:[^()]|\\([^)]+\\))+\\)|\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0,inside:{interpolation:{pattern:/\\\\\\((?:[^()]|\\([^)]+\\))+\\)/,inside:{delimiter:{pattern:/^\\\\\\(|\\)$/,alias:\"variable\"}}}}},keyword:/\\b(?:as|associativity|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic(?:Type)?|else|enum|extension|fallthrough|final|for|func|get|guard|if|import|in|infix|init|inout|internal|is|lazy|left|let|mutating|new|none|nonmutating|operator|optional|override|postfix|precedence|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|Self|set|static|struct|subscript|super|switch|throws?|try|Type|typealias|unowned|unsafe|var|weak|where|while|willSet|__(?:COLUMN__|FILE__|FUNCTION__|LINE__))\\b/,number:/\\b(?:[\\d_]+(?:\\.[\\de_]+)?|0x[a-f0-9_]+(?:\\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\b/i,constant:/\\b(?:nil|[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\\b/,atrule:/@\\b(?:IB(?:Outlet|Designable|Action|Inspectable)|class_protocol|exported|noreturn|NS(?:Copying|Managed)|objc|UIApplicationMain|auto_closure)\\b/,builtin:/\\b(?:[A-Z]\\S+|abs|advance|alignof(?:Value)?|assert|contains|count(?:Elements)?|debugPrint(?:ln)?|distance|drop(?:First|Last)|dump|enumerate|equal|filter|find|first|getVaList|indices|isEmpty|join|last|lexicographicalCompare|map|max(?:Element)?|min(?:Element)?|numericCast|overlaps|partition|print(?:ln)?|reduce|reflect|reverse|sizeof(?:Value)?|sort(?:ed)?|split|startsWith|stride(?:of(?:Value)?)?|suffix|swap|toDebugString|toString|transcode|underestimateCount|unsafeBitCast|with(?:ExtendedLifetime|Unsafe(?:MutablePointers?|Pointers?)|VaList))\\b/}),Prism.languages.swift.string.inside.interpolation.inside.rest=Prism.languages.swift;\n\n/***/ }),\n\n/***/ 296:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 297:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 298:\n/***/ (function(module, exports) {\n\n!function(){if(\"undefined\"!=typeof self&&self.Prism&&self.document){var t=[],e={},n=function(){};Prism.plugins.toolbar={};var a=Prism.plugins.toolbar.registerButton=function(n,a){var o;o=\"function\"==typeof a?a:function(t){var e;return\"function\"==typeof a.onClick?(e=document.createElement(\"button\"),e.type=\"button\",e.addEventListener(\"click\",function(){a.onClick.call(this,t)})):\"string\"==typeof a.url?(e=document.createElement(\"a\"),e.href=a.url):e=document.createElement(\"span\"),e.textContent=a.text,e},t.push(e[n]=o)},o=Prism.plugins.toolbar.hook=function(a){var o=a.element.parentNode;if(o&&/pre/i.test(o.nodeName)&&!o.parentNode.classList.contains(\"code-toolbar\")){var r=document.createElement(\"div\");r.classList.add(\"code-toolbar\"),o.parentNode.insertBefore(r,o),r.appendChild(o);var i=document.createElement(\"div\");i.classList.add(\"toolbar\"),document.body.hasAttribute(\"data-toolbar-order\")&&(t=document.body.getAttribute(\"data-toolbar-order\").split(\",\").map(function(t){return e[t]||n})),t.forEach(function(t){var e=t(a);if(e){var n=document.createElement(\"div\");n.classList.add(\"toolbar-item\"),n.appendChild(e),i.appendChild(n)}}),r.appendChild(i)}};a(\"label\",function(t){var e=t.element.parentNode;if(e&&/pre/i.test(e.nodeName)&&e.hasAttribute(\"data-label\")){var n,a,o=e.getAttribute(\"data-label\");try{a=document.querySelector(\"template#\"+o)}catch(r){}return a?n=a.content:(e.hasAttribute(\"data-url\")?(n=document.createElement(\"a\"),n.href=e.getAttribute(\"data-url\")):n=document.createElement(\"span\"),n.textContent=o),n}}),Prism.hooks.add(\"complete\",o)}}();\n\n/***/ }),\n\n/***/ 299:\n/***/ (function(module, exports) {\n\n!function(){if(\"undefined\"!=typeof self&&self.Prism&&self.document){if(!Prism.plugins.toolbar)return console.warn(\"Show Languages plugin loaded before Toolbar plugin.\"),void 0;var e={html:\"HTML\",xml:\"XML\",svg:\"SVG\",mathml:\"MathML\",css:\"CSS\",clike:\"C-like\",javascript:\"JavaScript\",abap:\"ABAP\",actionscript:\"ActionScript\",apacheconf:\"Apache Configuration\",apl:\"APL\",applescript:\"AppleScript\",arff:\"ARFF\",asciidoc:\"AsciiDoc\",asm6502:\"6502 Assembly\",aspnet:\"ASP.NET (C#)\",autohotkey:\"AutoHotkey\",autoit:\"AutoIt\",basic:\"BASIC\",csharp:\"C#\",cpp:\"C++\",coffeescript:\"CoffeeScript\",csp:\"Content-Security-Policy\",\"css-extras\":\"CSS Extras\",django:\"Django/Jinja2\",erb:\"ERB\",fsharp:\"F#\",gedcom:\"GEDCOM\",glsl:\"GLSL\",graphql:\"GraphQL\",http:\"HTTP\",hpkp:\"HTTP Public-Key-Pins\",hsts:\"HTTP Strict-Transport-Security\",ichigojam:\"IchigoJam\",inform7:\"Inform 7\",json:\"JSON\",latex:\"LaTeX\",livescript:\"LiveScript\",lolcode:\"LOLCODE\",\"markup-templating\":\"Markup templating\",matlab:\"MATLAB\",mel:\"MEL\",n4js:\"N4JS\",nasm:\"NASM\",nginx:\"nginx\",nsis:\"NSIS\",objectivec:\"Objective-C\",ocaml:\"OCaml\",opencl:\"OpenCL\",parigp:\"PARI/GP\",objectpascal:\"Object Pascal\",php:\"PHP\",\"php-extras\":\"PHP Extras\",plsql:\"PL/SQL\",powershell:\"PowerShell\",properties:\".properties\",protobuf:\"Protocol Buffers\",q:\"Q (kdb+ database)\",jsx:\"React JSX\",tsx:\"React TSX\",renpy:\"Ren'py\",rest:\"reST (reStructuredText)\",sas:\"SAS\",sass:\"Sass (Sass)\",scss:\"Sass (Scss)\",sql:\"SQL\",soy:\"Soy (Closure Template)\",tap:\"TAP\",tt2:\"Template Toolkit 2\",typescript:\"TypeScript\",vbnet:\"VB.Net\",vhdl:\"VHDL\",vim:\"vim\",\"visual-basic\":\"Visual Basic\",wasm:\"WebAssembly\",wiki:\"Wiki markup\",xojo:\"Xojo (REALbasic)\",xquery:\"XQuery\",yaml:\"YAML\"};Prism.plugins.toolbar.registerButton(\"show-language\",function(a){var t=a.element.parentNode;if(t&&/pre/i.test(t.nodeName)){var s=t.getAttribute(\"data-language\")||e[a.language]||a.language&&a.language.substring(0,1).toUpperCase()+a.language.substring(1);if(s){var i=document.createElement(\"span\");return i.textContent=s,i}}})}}();\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});exports.seafileAPI=undefined;var _reactCookies=__webpack_require__(25);var _reactCookies2=_interopRequireDefault(_reactCookies);var _seafileJs=__webpack_require__(35);var _constants=__webpack_require__(2);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var seafileAPI=new _seafileJs.SeafileAPI();var xcsrfHeaders=_reactCookies2.default.load('sfcsrftoken');seafileAPI.initForSeahubUsage({siteRoot:_constants.siteRoot,xcsrfHeaders:xcsrfHeaders});exports.seafileAPI=seafileAPI;\n\n/***/ }),\n\n/***/ 300:\n/***/ (function(module, exports) {\n\n!function(){if(\"undefined\"!=typeof self&&self.Prism&&self.document){var e=\"line-numbers\",t=/\\n(?!$)/g,n=function(e){var n=r(e),s=n[\"white-space\"];if(\"pre-wrap\"===s||\"pre-line\"===s){var l=e.querySelector(\"code\"),i=e.querySelector(\".line-numbers-rows\"),a=e.querySelector(\".line-numbers-sizer\"),o=l.textContent.split(t);a||(a=document.createElement(\"span\"),a.className=\"line-numbers-sizer\",l.appendChild(a)),a.style.display=\"block\",o.forEach(function(e,t){a.textContent=e||\"\\n\";var n=a.getBoundingClientRect().height;i.children[t].style.height=n+\"px\"}),a.textContent=\"\",a.style.display=\"none\"}},r=function(e){return e?window.getComputedStyle?getComputedStyle(e):e.currentStyle||null:null};window.addEventListener(\"resize\",function(){Array.prototype.forEach.call(document.querySelectorAll(\"pre.\"+e),n)}),Prism.hooks.add(\"complete\",function(e){if(e.code){var r=e.element.parentNode,s=/\\s*\\bline-numbers\\b\\s*/;if(r&&/pre/i.test(r.nodeName)&&(s.test(r.className)||s.test(e.element.className))&&!e.element.querySelector(\".line-numbers-rows\")){s.test(e.element.className)&&(e.element.className=e.element.className.replace(s,\" \")),s.test(r.className)||(r.className+=\" line-numbers\");var l,i=e.code.match(t),a=i?i.length+1:1,o=new Array(a+1);o=o.join(\"<span></span>\"),l=document.createElement(\"span\"),l.setAttribute(\"aria-hidden\",\"true\"),l.className=\"line-numbers-rows\",l.innerHTML=o,r.hasAttribute(\"data-start\")&&(r.style.counterReset=\"linenumber \"+(parseInt(r.getAttribute(\"data-start\"),10)-1)),e.element.appendChild(l),n(r),Prism.hooks.run(\"line-numbers\",e)}}}),Prism.hooks.add(\"line-numbers\",function(e){e.plugins=e.plugins||{},e.plugins.lineNumbers=!0}),Prism.plugins.lineNumbers={getLine:function(t,n){if(\"PRE\"===t.tagName&&t.classList.contains(e)){var r=t.querySelector(\".line-numbers-rows\"),s=parseInt(t.getAttribute(\"data-start\"),10)||1,l=s+(r.children.length-1);s>n&&(n=s),n>l&&(n=l);var i=n-s;return r.children[i]}}}}}();\n\n/***/ }),\n\n/***/ 301:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_slate__ = __webpack_require__(24);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__seafile_slate_react__ = __webpack_require__(82);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utils_diff__ = __webpack_require__(302);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__utils_render_slate_js__ = __webpack_require__(158);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__css_diff_viewer_css__ = __webpack_require__(305);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__css_diff_viewer_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5__css_diff_viewer_css__);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\n\n\n\nvar DiffViewer = function (_React$PureComponent) {\n  _inherits(DiffViewer, _React$PureComponent);\n\n  function DiffViewer(props) {\n    _classCallCheck(this, DiffViewer);\n\n    var _this = _possibleConstructorReturn(this, (DiffViewer.__proto__ || Object.getPrototypeOf(DiffViewer)).call(this, props));\n\n    _initialiseProps.call(_this);\n\n    _this.value = __WEBPACK_IMPORTED_MODULE_1_slate__[\"Value\"].create();\n    _this.slateDiff = new __WEBPACK_IMPORTED_MODULE_3__utils_diff__[\"a\" /* SlateDiff */]();\n    return _this;\n  }\n\n  _createClass(DiffViewer, [{\n    key: 'render',\n    value: function render() {\n      var newMarkdownContent = this.props.newMarkdownContent;\n      var OldMarkdownContent = this.props.oldMarkdownContent;\n      var diffDocument = this.slateDiff.getDiffDocument(newMarkdownContent, OldMarkdownContent);\n      this.value = __WEBPACK_IMPORTED_MODULE_1_slate__[\"Value\"].create({ document: diffDocument });\n      return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__seafile_slate_react__[\"Editor\"], {\n        style: { width: '100%' },\n        renderNode: this.renderDiffNode,\n        renderMark: __WEBPACK_IMPORTED_MODULE_4__utils_render_slate_js__[\"a\" /* renderMark */],\n        value: this.value,\n        readOnly: true\n      });\n    }\n  }]);\n\n  return DiffViewer;\n}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.PureComponent);\n\nvar _initialiseProps = function _initialiseProps() {\n  this.renderDiffNode = function (props) {\n    var node = props.node,\n        parent = props.parent;\n\n    var diffState = node.data.get('diff_state');\n    var parentDiffState = parent.data.get('diff_state');\n    if (diffState === 'diff-added') {\n      if (parentDiffState) {\n        if (node.type === 'blockquote' || node.type === 'code_block') {\n          return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n            'div',\n            { className: 'diff-added-container' },\n            Object(__WEBPACK_IMPORTED_MODULE_4__utils_render_slate_js__[\"b\" /* renderNode */])(props)\n          );\n        }\n        return Object(__WEBPACK_IMPORTED_MODULE_4__utils_render_slate_js__[\"b\" /* renderNode */])(props);\n      } else {\n        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n          'div',\n          { className: 'diff-added' },\n          Object(__WEBPACK_IMPORTED_MODULE_4__utils_render_slate_js__[\"b\" /* renderNode */])(props)\n        );\n      }\n    } else if (diffState === 'diff-removed') {\n      if (parentDiffState) {\n        if (node.type === 'blockquote' || node.type === 'code_block') {\n          return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n            'div',\n            { className: 'diff-removed-container' },\n            Object(__WEBPACK_IMPORTED_MODULE_4__utils_render_slate_js__[\"b\" /* renderNode */])(props)\n          );\n        }\n        return Object(__WEBPACK_IMPORTED_MODULE_4__utils_render_slate_js__[\"b\" /* renderNode */])(props);\n      } else {\n        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n          'div',\n          { className: 'diff-removed' },\n          Object(__WEBPACK_IMPORTED_MODULE_4__utils_render_slate_js__[\"b\" /* renderNode */])(props)\n        );\n      }\n    } else if (diffState === 'diff-replaced') {\n      if (parentDiffState) {\n        return Object(__WEBPACK_IMPORTED_MODULE_4__utils_render_slate_js__[\"b\" /* renderNode */])(props);\n      } else {\n        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n          'div',\n          { className: 'diff-replaced' },\n          Object(__WEBPACK_IMPORTED_MODULE_4__utils_render_slate_js__[\"b\" /* renderNode */])(props)\n        );\n      }\n    } else {\n      return Object(__WEBPACK_IMPORTED_MODULE_4__utils_render_slate_js__[\"b\" /* renderNode */])(props);\n    }\n  };\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (DiffViewer);\n\n/***/ }),\n\n/***/ 302:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__diff__ = __webpack_require__(303);\n/* unused harmony reexport Diff */\n/* unused harmony reexport Diff3 */\n/* unused harmony reexport equalityFunctionForSlate */\n/* unused harmony reexport equalityFunctionForSlateChildren */\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__diff__[\"a\"]; });\n\n\n\n\n/***/ }),\n\n/***/ 303:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export Diff */\n/* unused harmony export Diff3 */\n/* unused harmony export equalityFunctionForSlate */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return SlateDiff; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash__ = __webpack_require__(111);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_lodash__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__compare_strings__ = __webpack_require__(304);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_slate__ = __webpack_require__(24);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__slate2markdown__ = __webpack_require__(137);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_immutable__ = __webpack_require__(91);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_immutable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_immutable__);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\n\n\n\n\nfunction equalityFunctionForSlate(a, b) {\n  if (a.object !== b.object) {\n    return false;\n  }\n  if (a.type !== b.type) {\n    return false;\n  }\n  if (a.isVoid !== b.isVoid) {\n    return false;\n  }\n\n  if (__WEBPACK_IMPORTED_MODULE_0_lodash___default.a.isEqual(a, b)) {\n    return true;\n  }\n\n  if (a.object === b.object && a.object === 'text') {\n\n    if (Object(__WEBPACK_IMPORTED_MODULE_1__compare_strings__[\"a\" /* compareTwoStrings */])(__WEBPACK_IMPORTED_MODULE_2_slate__[\"Text\"].create(a).text, __WEBPACK_IMPORTED_MODULE_2_slate__[\"Text\"].create(b).text) >= 0.5) {\n      return 'changed';\n    } else {\n      return false;\n    }\n  }\n\n  if (a.object === b.object && a.object === 'leaf') {\n    // when the two leaf has same marks and the similarity greater than 0.5, then the leaf are changed\n    if (Object(__WEBPACK_IMPORTED_MODULE_1__compare_strings__[\"a\" /* compareTwoStrings */])(__WEBPACK_IMPORTED_MODULE_2_slate__[\"Text\"].create(a).text, __WEBPACK_IMPORTED_MODULE_2_slate__[\"Text\"].create(b).text) >= 0.5 && __WEBPACK_IMPORTED_MODULE_0_lodash___default.a.isEqual(a.marks, b.marks)) {\n      return 'changed';\n    } else {\n      return false;\n    }\n  }\n\n  if (a.type === b.type && (a.type.includes('ordered_list') || a.type.includes('unordered_list'))) {\n    if (Object(__WEBPACK_IMPORTED_MODULE_1__compare_strings__[\"a\" /* compareTwoStrings */])(__WEBPACK_IMPORTED_MODULE_2_slate__[\"Block\"].create(a).text, __WEBPACK_IMPORTED_MODULE_2_slate__[\"Block\"].create(b).text) >= 0.5) {\n      return 'changed';\n    }\n  }\n\n  if (a.type === b.type && (a.nodes.length > 1 || b.nodes.length > 1) && a.type === 'list_item') {\n    if (Object(__WEBPACK_IMPORTED_MODULE_1__compare_strings__[\"a\" /* compareTwoStrings */])(__WEBPACK_IMPORTED_MODULE_2_slate__[\"Block\"].create(a).text, __WEBPACK_IMPORTED_MODULE_2_slate__[\"Block\"].create(b).text) >= 0.5) {\n      return 'changed';\n    }\n  }\n\n  if (a.type === b.type && a.type === 'paragraph') {\n    if (Object(__WEBPACK_IMPORTED_MODULE_1__compare_strings__[\"a\" /* compareTwoStrings */])(__WEBPACK_IMPORTED_MODULE_2_slate__[\"Block\"].create(a).text, __WEBPACK_IMPORTED_MODULE_2_slate__[\"Block\"].create(b).text) >= 0.5) {\n      return 'changed';\n    }\n  }\n\n  if (a.type === b.type && a.type === 'table') {\n    if (Object(__WEBPACK_IMPORTED_MODULE_1__compare_strings__[\"a\" /* compareTwoStrings */])(__WEBPACK_IMPORTED_MODULE_2_slate__[\"Block\"].create(a).text, __WEBPACK_IMPORTED_MODULE_2_slate__[\"Block\"].create(b).text) >= 0.5) {\n      return 'changed';\n    }\n  }\n\n  /*\n   * the table diff is not the same as list diff,\n   * in the table, if the old table_line and the new table_line or the old table_cell and new table_cell are not equal\n   * the table_line or table_cells is set as changed, then the diff is expressed in the text of table_cell\n   * */\n\n  if (a.type === b.type && a.type === 'table_row') {\n    return 'changed';\n  }\n\n  if (a.type === b.type && a.type === 'table_cell') {\n    return 'changed';\n  }\n\n  return false;\n}\n\nfunction defaultEqualityFunction(a, b) {\n  return a === b;\n}\n\nvar SlateDiff = function () {\n  function SlateDiff() {\n    var _this = this;\n\n    _classCallCheck(this, SlateDiff);\n\n    this.deepDiff = function (newNodes, oldNodes) {\n      var slateDiffNodes = [];\n      var diff = new Diff({ equalFunc: equalityFunctionForSlate });\n      diff.ArrayDiff(newNodes, oldNodes);\n      for (var i = 0; i < diff.diff.length; i++) {\n        var diffElement = diff.diff[i];\n        var changeType = diffElement.changeType;\n        if (changeType === 'common') {\n          if (diffElement.item.data) {\n            diffElement.item.data.diff_state = 'diff-common';\n            diffElement.item.data.new_index = diffElement.newIndex;\n            diffElement.item.data.old_index = -1;\n          }\n        } else if (changeType === 'added') {\n          if (diffElement.item.data) {\n            diffElement.item.data.diff_state = 'diff-added';\n            diffElement.item.data.new_index = diffElement.newIndex;\n            diffElement.item.data.old_index = -1;\n          } else {\n            // add ADD mark for added text leaves\n            diffElement.item.leaves.forEach(function (leaf) {\n              leaf.marks.push(__WEBPACK_IMPORTED_MODULE_2_slate__[\"Mark\"].create('ADD'));\n            });\n          }\n        } else if (changeType === 'removed') {\n          if (diffElement.item.data) {\n            diffElement.item.data.diff_state = 'diff-removed';\n            diffElement.item.data.new_index = -1;\n            diffElement.item.data.old_index = diffElement.oldIndex;\n          } else {\n            // add DELETE mark for deleted text leaves\n            diffElement.item.leaves.forEach(function (leaf) {\n              leaf.marks.push(__WEBPACK_IMPORTED_MODULE_2_slate__[\"Mark\"].create('DELETE'));\n            });\n          }\n        } else if (changeType === 'replaced') {\n          var diffNodes = void 0,\n              elementType = diffElement.item.type || diffElement.item.object;\n          if (elementType === 'text') {\n            // compare text diff leaves use getTextDiffLeaves function\n            diffNodes = _this.getTextDiffLeaves(diffElement.newItem.leaves, diffElement.oldItem.leaves);\n          } else if (elementType.includes('ordered_list') || elementType.includes('unordered_list') || elementType.includes('list_item')) {\n            diffNodes = _this.deepDiff(diffElement.newItem.nodes, diffElement.oldItem.nodes);\n          } else if (elementType === 'table' || elementType === 'table_row' || elementType === 'table_cell') {\n            diffNodes = _this.deepDiff(diffElement.newItem.nodes, diffElement.oldItem.nodes, equalityFunctionForSlate);\n          } else if (elementType === 'paragraph') {\n            // compare text or inline\n            diffNodes = _this.deepDiff(diffElement.newItem.nodes, diffElement.oldItem.nodes);\n          }\n          if (diffElement.item.data) {\n            diffElement.item.data.diff_state = 'diff-replaced';\n            diffElement.item.data.new_index = diffElement.newIndex;\n            diffElement.item.data.old_index = -1;\n            diffElement.item.nodes = diffNodes;\n          } else {\n            // if diffElement is a text, set the diffNodes as it's leaves\n            if (diffElement.item.object === 'text') {\n              diffElement.item.leaves = diffNodes;\n            }\n          }\n        }\n        slateDiffNodes.push(diffElement.item);\n      }\n      return slateDiffNodes;\n    };\n\n    this.getDiffDocument = function (newMarkdownContent, oldMarkdownContent) {\n      var newNodes = Object(__WEBPACK_IMPORTED_MODULE_3__slate2markdown__[\"deserialize\"])(newMarkdownContent).toJSON().document.nodes;\n      var oldNodes = Object(__WEBPACK_IMPORTED_MODULE_3__slate2markdown__[\"deserialize\"])(oldMarkdownContent).toJSON().document.nodes;\n      var topSlateDiffNodes = _this.deepDiff(newNodes, oldNodes, equalityFunctionForSlate);\n      // handle replaced paragraph\n      topSlateDiffNodes = _this.splitTopDiffNodes(topSlateDiffNodes);\n      return __WEBPACK_IMPORTED_MODULE_2_slate__[\"Document\"].fromJSON({\n        nodes: topSlateDiffNodes\n      });\n    };\n  }\n\n  _createClass(SlateDiff, [{\n    key: 'getTextDiffLeaves',\n    value: function getTextDiffLeaves(newTextLeaves, oldTextLeaves) {\n      var diff = new Diff({ equalFunc: equalityFunctionForSlate });\n      var textLeaves = [];\n      diff.ArrayDiff(newTextLeaves, oldTextLeaves);\n\n      for (var i = 0; i < diff.diff.length; i++) {\n        var diffLeaf = diff.diff[i];\n        if (diffLeaf.changeType === 'common') {\n          textLeaves.push(diffLeaf.item);\n        } else if (diffLeaf.changeType === 'added') {\n          textLeaves.push(__WEBPACK_IMPORTED_MODULE_2_slate__[\"Leaf\"].create({\n            text: diffLeaf.item.text,\n            marks: [].concat(_toConsumableArray(diffLeaf.item.marks), [__WEBPACK_IMPORTED_MODULE_2_slate__[\"Mark\"].create({\n              type: 'ADD',\n              data: {}\n            })])\n          }));\n        } else if (diffLeaf.changeType === 'removed') {\n          textLeaves.push(__WEBPACK_IMPORTED_MODULE_2_slate__[\"Leaf\"].create({\n            text: diffLeaf.item.text,\n            marks: [].concat(_toConsumableArray(diffLeaf.item.marks), [__WEBPACK_IMPORTED_MODULE_2_slate__[\"Mark\"].create({\n              type: 'DELETE',\n              data: {}\n            })])\n          }));\n        } else if (diffLeaf.changeType === 'replaced') {\n          // get text diff leaves\n          var leaves = this.textDiff(diffLeaf.newItem.text, diffLeaf.oldItem.text, diffLeaf.item.marks);\n          textLeaves = textLeaves.concat(leaves);\n        }\n      }\n      return textLeaves;\n    }\n  }, {\n    key: 'textDiff',\n    value: function textDiff(newText, oldText, marks) {\n      var textDiffleaves = [];\n      var diff = new Diff({ equalFunc: defaultEqualityFunction });\n      diff.StringDiff(newText, oldText);\n\n      var textDiffArray = diff.diff;\n      var stringFragment = '';\n      var lastDiffState = textDiffArray[0].changeType;\n      textDiffArray.forEach(function (textCharacter, index, textDiffArray) {\n        var markType = '';\n        if (lastDiffState === 'removed') {\n          markType = 'DELETE';\n        } else if (lastDiffState === 'added') {\n          markType = 'ADD';\n        }\n        if (lastDiffState === textCharacter.changeType) {\n          stringFragment += textCharacter.item;\n          if (index === textDiffArray.length - 1) {\n            textDiffleaves.push(__WEBPACK_IMPORTED_MODULE_2_slate__[\"Leaf\"].create({\n              text: stringFragment,\n              marks: [].concat(_toConsumableArray(marks), [__WEBPACK_IMPORTED_MODULE_2_slate__[\"Mark\"].create({\n                type: markType\n              })])\n            }));\n          }\n        } else if (textCharacter.changeType !== lastDiffState) {\n          textDiffleaves.push(__WEBPACK_IMPORTED_MODULE_2_slate__[\"Leaf\"].create({\n            text: stringFragment,\n            marks: [].concat(_toConsumableArray(marks), [__WEBPACK_IMPORTED_MODULE_2_slate__[\"Mark\"].create({\n              type: markType\n            })])\n          }));\n          lastDiffState = textCharacter.changeType;\n          stringFragment = textCharacter.item;\n          if (index === textDiffArray.length - 1) {\n            if (lastDiffState === 'removed') {\n              markType = 'DELETE';\n            } else if (lastDiffState === 'added') {\n              markType = 'ADD';\n            }\n            textDiffleaves.push(__WEBPACK_IMPORTED_MODULE_2_slate__[\"Leaf\"].create({\n              text: stringFragment,\n              marks: [].concat(_toConsumableArray(marks), [__WEBPACK_IMPORTED_MODULE_2_slate__[\"Mark\"].create({\n                type: markType\n              })])\n            }));\n          }\n        }\n      });\n      return textDiffleaves;\n    }\n  }, {\n    key: 'splitDiffParagraph',\n    value: function splitDiffParagraph(diffParagraph) {\n      var _this2 = this;\n\n      // clone the replace paragraph to wrap the deleted and added nodes\n      var newParagraph = __WEBPACK_IMPORTED_MODULE_0_lodash___default.a.cloneDeep(diffParagraph),\n          oldParagraph = __WEBPACK_IMPORTED_MODULE_0_lodash___default.a.cloneDeep(diffParagraph),\n\n      // wrap new paragraph nodes and old paragraph nodes\n      newParagraphNodes = [],\n          oldParagraphNodes = [],\n\n      // wrap new paragraph leaves and old leaves\n      newParagraphLeaves = [],\n          oldParagraphLeaves = [];\n      // traverse paragraph nodes\n      diffParagraph.nodes.forEach(function (node, index1, nodes) {\n        if (node.object === 'inline') {\n          // if the node is inline node, like link\n          // if the inline is added\n          if (node.data.diff_state === 'diff-added') {\n            // push the inline node to new paragraph nodes\n            newParagraphNodes.push(node);\n          } else if (node.data.diff_state === 'diff-removed') {\n            // if the inline is added push the inline node to new paragraph nodes\n            oldParagraphNodes.push(node);\n          } else {\n            // if the inline node is common new paragraph node and old paragraph all push the inline node\n            newParagraphNodes.push(node);\n            oldParagraphNodes.push(node);\n          }\n        } else {\n          // if the node is a text\n          // traverse the text leaves\n          node.leaves.forEach(function (leafNode) {\n            // get leaf mark type\n            var leafDiffMark = _this2.getLeafDiffMark(leafNode);\n            // if the leaf is ADD push it to newParagraphLeaves\n            if (leafDiffMark === 'ADD') {\n              newParagraphLeaves.push(leafNode);\n            } else if (leafDiffMark === 'DELETE') {\n              // if the leaf is DELETE push it to oldParagraphLeaves\n              oldParagraphLeaves.push(leafNode);\n            } else {\n              // if the leaf is COMMON push it to oldParagraphLeaves\n              newParagraphLeaves.push(leafNode);\n              oldParagraphLeaves.push(leafNode);\n            }\n          });\n          newParagraphNodes.push({\n            object: 'text',\n            leaves: newParagraphLeaves\n          });\n          oldParagraphNodes.push({\n            object: 'text',\n            leaves: oldParagraphLeaves\n          });\n          oldParagraphLeaves = [];\n          newParagraphLeaves = [];\n        }\n      });\n\n      // set new paragraph and old paragraph nodes\n      newParagraph.nodes = newParagraphNodes;\n      oldParagraph.data.paragraph_state = 'old-paragraph';\n      newParagraph.data.paragraph_state = 'new-paragraph';\n      oldParagraph.nodes = oldParagraphNodes;\n      return [oldParagraph, newParagraph];\n    }\n  }, {\n    key: 'splitTopDiffNodes',\n    value: function splitTopDiffNodes(slateDiffNodes) {\n      var _this3 = this;\n\n      // newSlateDiffNodes used to wrap the new slate nodes\n      var newSlateDiffNodes = [];\n      // traverse slate top Nodes and find the paragraph handle it\n      slateDiffNodes.forEach(function (node) {\n        if (node.data.diff_state === 'diff-replaced' && node.type === 'paragraph') {\n          var splicedParagraph = _this3.splitDiffParagraph(node);\n          // push the old and new paragraph node to newSlateDiffNodes\n          newSlateDiffNodes.push(splicedParagraph[0], splicedParagraph[1]);\n        } else if (node.data.diff_state === 'diff-replaced' && node.type === 'table') {\n          _this3.splitTableDiffParagraph(node);\n          newSlateDiffNodes.push(node);\n        } else {\n          newSlateDiffNodes.push(node);\n        }\n      });\n      return newSlateDiffNodes;\n    }\n  }, {\n    key: 'splitTableDiffParagraph',\n    value: function splitTableDiffParagraph(node) {\n      var _this4 = this;\n\n      node.nodes.forEach(function (tableRow, rowIndex, tablerows) {\n        if (tableRow.data.diff_state === 'diff-replaced') {\n          tableRow.nodes.forEach(function (tableCell) {\n            if (tableCell.data.diff_state === 'diff-replaced') {\n              if (tableCell.nodes[0].data.diff_state === 'diff-replaced') {\n                var splicedParagraphNodes = _this4.splitDiffParagraph(tableCell.nodes[0]);\n                tableCell.nodes = splicedParagraphNodes;\n              }\n            }\n          });\n        }\n      });\n      return node;\n    }\n\n    // get leaf diff state\n\n  }, {\n    key: 'getLeafDiffMark',\n    value: function getLeafDiffMark(leafNode) {\n      var marks = Object(__WEBPACK_IMPORTED_MODULE_4_immutable__[\"Set\"])(leafNode.marks);\n      var leafDiffMark = void 0;\n      if (marks.has(__WEBPACK_IMPORTED_MODULE_2_slate__[\"Mark\"].create({ type: 'ADD' }))) {\n        leafDiffMark = 'ADD';\n      } else if (marks.has(__WEBPACK_IMPORTED_MODULE_2_slate__[\"Mark\"].create({ type: 'DELETE' }))) {\n        leafDiffMark = 'DELETE';\n      } else {\n        leafDiffMark = 'COMMON';\n      }\n      return leafDiffMark;\n    }\n  }]);\n\n  return SlateDiff;\n}();\n\nvar ArrayDiffElement = function () {\n  function ArrayDiffElement(item, newIndex, oldIndex) {\n    _classCallCheck(this, ArrayDiffElement);\n\n    this.item = item;\n    this.newIndex = newIndex;\n    this.oldIndex = oldIndex;\n  }\n\n  _createClass(ArrayDiffElement, [{\n    key: 'added',\n    value: function added() {\n      return this.oldIndex === undefined;\n    }\n  }, {\n    key: 'removed',\n    value: function removed() {\n      return this.newIndex === undefined;\n    }\n  }, {\n    key: 'common',\n    value: function common() {\n      return this.oldIndex !== undefined && this.newIndex !== undefined;\n    }\n  }]);\n\n  return ArrayDiffElement;\n}();\n\nvar Diff = function () {\n  function Diff(opts) {\n    _classCallCheck(this, Diff);\n\n    this.equalFunc = opts.equalFunc ? opts.equalFunc : defaultEqualityFunction;\n    if (opts.shouldDetectChange != undefined) this.shouldDetectChange = opts.shouldDetectChange;else this.shouldDetectChange = false;\n    this.similarityFunc = opts.similarityFunc;\n  }\n\n  /**\n   Appends an array item to the subsequence of items that were added in the new array.\n   @method  added\n   @param   item   The array item that was added.\n   **/\n\n\n  _createClass(Diff, [{\n    key: 'addAdded',\n    value: function addAdded(item, newIndex) {\n      var element = new ArrayDiffElement(item, newIndex, undefined);\n      element.changeType = 'added';\n      this.added.push(element);\n      this.diff.push(element);\n    }\n\n    /**\n     Appends an array item to the subsequence of items that were removed from the old array.\n     @method  removed\n     @param   item     The array item that was added.\n     **/\n\n  }, {\n    key: 'addRemoved',\n    value: function addRemoved(item, oldIndex) {\n      var element = new ArrayDiffElement(item, undefined, oldIndex);\n      this.removed.push(element);\n      element.changeType = 'removed';\n      this.diff.push(element);\n    }\n  }, {\n    key: 'addReplaced',\n    value: function addReplaced(oldItem, newItem, oldIndex, newIndex) {\n      var element = new ArrayDiffElement(oldItem, newIndex, oldIndex);\n      element.newItem = newItem;\n      element.oldItem = oldItem;\n      element.changeType = 'replaced';\n      this.replaced.push(element);\n      this.diff.push(element);\n    }\n\n    /**\n     Appends an array item to the longest common subsequence between the new and old arrays.\n     @method  common\n     @param   item    The array item that was added.\n     **/\n\n  }, {\n    key: 'addCommon',\n    value: function addCommon(oldItem, newItem, oldIndex, newIndex) {\n      var element = new ArrayDiffElement(oldItem, newIndex, oldIndex);\n      element.newItem = newItem;\n      element.changeType = 'common';\n      element.oldItem = oldItem;\n      this.common.push(element);\n      this.diff.push(element);\n    }\n  }, {\n    key: 'StringDiff',\n    value: function StringDiff(newString, oldString) {\n      var newLength = newString.length;\n      var oldLength = oldString.length;\n      var n = 0;\n      var o = 0;\n      var table = [];\n      table[newLength] = [];\n      for (o = oldLength; o >= 0; table[newLength][o--] = 0) {}\n      for (n = newLength - 1; n >= 0; n--) {\n        table[n] = [];\n        table[n][oldLength] = 0;\n        for (o = oldLength - 1; o >= 0; o--) {\n          if (this.equalFunc(newString[n], oldString[o])) {\n            table[n][o] = table[n + 1][o + 1] + 1;\n          } else {\n            table[n][o] = Math.max(table[n + 1][o], table[n][o + 1]);\n          }\n        }\n      }\n\n      // Fill in the subsequence arrays\n      this.common = [];\n      this.added = [];\n      this.removed = [];\n      this.replaced = [];\n      this.diff = [];\n\n      n = o = 0;\n      while (n < newLength && o < oldLength) {\n        var diffState = this.equalFunc(newString[n], oldString[o]);\n        if (diffState) {\n\n          var newItem = newString[n];\n          var oldItem = oldString[o];\n          this.addCommon(oldItem, newItem, o, n);\n          n++;\n          o++;\n        } else if (table[n + 1][o] >= table[n][o + 1]) {\n          this.addAdded(newString[n], n);\n          n++;\n        } else {\n          this.addRemoved(oldString[o], o);\n          o++;\n        }\n      }\n\n      for (; n < newLength; n++) {\n        this.addAdded(newString[n], n);\n      }\n\n      for (; o < oldLength; o++) {\n        this.addRemoved(oldString[o], o);\n      }\n    }\n  }, {\n    key: 'ArrayDiff',\n    value: function ArrayDiff(newArray, oldArray, callback) {\n      //newArray = newArray.toArray();\n      //oldArray = oldArray.toArray();\n      var newLength = newArray.length;\n      var oldLength = oldArray.length;\n      var n = 0;\n      var o = 0;\n      var table = [];\n\n      // Build out the table\n      table[newLength] = [];\n      for (o = oldLength; o >= 0; table[newLength][o--] = 0) {}\n      for (n = newLength - 1; n >= 0; n--) {\n        table[n] = [];\n        table[n][oldLength] = 0;\n        for (o = oldLength - 1; o >= 0; o--) {\n          if (this.equalFunc(newArray[n], oldArray[o])) {\n            table[n][o] = table[n + 1][o + 1] + 1;\n          } else {\n            table[n][o] = Math.max(table[n + 1][o], table[n][o + 1]);\n          }\n        }\n      }\n\n      // Fill in the subsequence arrays\n      this.common = [];\n      this.added = [];\n      this.removed = [];\n      this.replaced = [];\n      this.diff = [];\n\n      n = o = 0;\n      while (n < newLength && o < oldLength) {\n        var diffState = this.equalFunc(newArray[n], oldArray[o]);\n        if (diffState) {\n          var newItem = newArray[n];\n          var oldItem = oldArray[o];\n          if (diffState === 'changed') {\n            this.addReplaced(oldItem, newItem, o, n);\n          } else {\n            //if (newItem.isVoid) {\n            this.addCommon(oldItem, newItem, o, n);\n          }\n\n          if (callback) {\n            callback('C', o, n);\n          }\n          n++;\n          o++;\n        } else if (table[n + 1][o] >= table[n][o + 1]) {\n          this.addAdded(newArray[n], n);\n          if (callback) {\n            callback('A', 0, n);\n          }\n          n++;\n        } else {\n          this.addRemoved(oldArray[o], o);\n          if (callback) {\n            callback('D', o, 0);\n          }\n          o++;\n        }\n      }\n\n      for (; n < newLength; n++) {\n        this.addAdded(newArray[n], n);\n        if (callback) {\n          callback('A', 0, n);\n        }\n      }\n\n      for (; o < oldLength; o++) {\n        this.addRemoved(oldArray[o], o);\n        if (callback) {\n          callback('D', o, 0);\n        }\n      }\n    }\n  }]);\n\n  return Diff;\n}();\n\nfunction printChunk(oArray, aArray, bArray, chunk) {\n  /* console.log(\"chunk index \" + chunk.startO + \",\" + chunk.endO + \" \"\n    + chunk.startA + \",\" + chunk.endA + \" \"\n    + chunk.startB + \",\" + chunk.endB) */\n  var sO = oArray.slice(chunk.startO, chunk.endO + 1);\n  var sA = aArray.slice(chunk.startA, chunk.endA + 1);\n  var sB = bArray.slice(chunk.startB, chunk.endB + 1);\n  console.log('chunk stable: ' + chunk.isStable + ' ' + '[' + sO + ']' + ' ' + '[' + sA + ']' + ' ' + '[' + sB + ']');\n}\n\nvar Diff3 = function () {\n  function Diff3(opts) {\n    _classCallCheck(this, Diff3);\n\n    opts = opts || {};\n    this.equalFunc = opts.equalFunc ? opts.equalFunc : defaultEqualityFunction;\n    if (opts.shouldDetectChange != undefined) this.shouldDetectChange = opts.shouldDetectChange;else this.shouldDetectChange = false;\n    this.similarityFunc = opts.similarityFunc;\n\n    this.chunks = [];\n    this.common = [];\n    this.added = [];\n    this.removed = [];\n    this.mergedArray = [];\n  }\n\n  _createClass(Diff3, [{\n    key: 'printChunks',\n    value: function printChunks() {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.chunks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var chunk = _step.value;\n\n          printChunk(this.oArray, this.aArray, this.bArray, chunk);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }, {\n    key: 'diff3',\n    value: function diff3(oArray, aArray, bArray) {\n      this.oArray = oArray;\n      this.aArray = aArray;\n      this.bArray = bArray;\n\n      var oaDiff = new Diff({\n        equalFunc: this.equalFunc,\n        shouldDetectChange: this.shouldDetectChange,\n        similarityFunc: this.similarityFunc\n      });\n      oaDiff.ArrayDiff(aArray, oArray);\n      var obDiff = new Diff({\n        equalFunc: this.equalFunc,\n        shouldDetectChange: this.shouldDetectChange,\n        similarityFunc: this.similarityFunc\n      });\n      obDiff.ArrayDiff(bArray, oArray);\n\n      var M_oa = [];\n      for (var i = 0; i < oArray.length; i++) {\n        M_oa[i] = [];\n        for (var j = 0; j < aArray.length; j++) {\n          M_oa[i][j] = 0;\n        }\n      }\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = oaDiff.common[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var item = _step2.value;\n\n          M_oa[item.oldIndex][item.newIndex] = 1;\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      this.M_oa = M_oa;\n\n      var M_ob = [];\n      for (var _i = 0; _i < oArray.length; _i++) {\n        M_ob[_i] = [];\n        for (var _j = 0; _j < bArray.length; _j++) {\n          M_ob[_i][_j] = 0;\n        }\n      }\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = obDiff.common[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var _item = _step3.value;\n\n          M_ob[_item.oldIndex][_item.newIndex] = 1;\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      this.M_ob = M_ob;\n      /*\n      console.log(\"M_oa\");\n      console.log(M_oa);\n      console.log(\"M_ob\");\n      console.log(M_ob);\n      */\n\n      var lo = 0;\n      var la = 0;\n      var lb = 0;\n      var finalStable = undefined;\n      // while (true) {\n      //   // find i that the cursor at the three array not match\n      //   let i = 0;\n      //   var iFound = false;\n      //   while (true) {\n      //     if (M_oa[lo+i][la+i] == 0 || M_ob[lo+i][lb+i] == 0) {\n      //       iFound = true;\n      //       break;\n      //     }\n      //     i++;\n      //     if (lo+i == oArray.length || la+i == aArray.length ||\n      //       lb+i == bArray.length)\n      //       break;\n      //   }\n      //   if (iFound == false) {\n      //     // go out and output a final stable chunk\n      //     //console.log(\"iFound == false\");\n      //     finalStable = true;\n      //     break;\n      //   }\n      //\n      //   if (i > 0) {\n      //     //console.log(\"stable chunk \");\n      //     var chunk = {};\n      //     chunk.startO = lo;\n      //     chunk.startA = la;\n      //     chunk.startB = lb;\n      //     chunk.endO = lo+i-1;\n      //     chunk.endA = la+i-1;\n      //     chunk.endB = lb+i-1;\n      //     chunk.isStable = true;\n      //     this.chunks.push(chunk);\n      //     //printChunk(oArray, aArray, bArray, chunk);\n      //     lo = lo + i;\n      //     la = la + i;\n      //     lb = lb + i;\n      //     continue;\n      //   }\n      //\n      //   //console.log(\"unstable chunk \");\n      //   let o;\n      //   let a;\n      //   let b;\n      //   let found = false;\n      //   for (o = lo; o < oArray.length; o++) {\n      //     for (a = la; a < aArray.length; a++) {\n      //       if (M_oa[o][a] != true) {\n      //         continue;\n      //       }\n      //\n      //       for (b = lb; b < bArray.length; b++) {\n      //         if (M_ob[o][b] == true) {\n      //           found = true;\n      //           break;\n      //         }\n      //       }\n      //       if (found == true) {\n      //         break;\n      //       }\n      //     }\n      //     if (found == true) {\n      //       break;\n      //     }\n      //   }\n      //\n      //   if (found == true) {\n      //     let chunk = {}\n      //     chunk.startO = lo;\n      //     chunk.startA = la;\n      //     chunk.startB = lb;\n      //     chunk.endO = o-1;\n      //     chunk.endA = a-1;\n      //     chunk.endB = b-1;\n      //     chunk.isStable = false;\n      //     this.chunks.push(chunk);\n      //     //printChunk(oArray, aArray, bArray, chunk);\n      //     lo = o;\n      //     la = a;\n      //     lb = b;\n      //     continue;\n      //   } else {\n      //     // output a final unstable chunk\n      //     finalStable = false;\n      //     break;\n      //   }\n      // }\n\n      // output the final chunk\n      if (lo < oArray.length || la < aArray.length || lb < bArray.length) {\n        //console.log(\"final chunk \");\n        var chunk = {};\n        chunk.startO = lo;\n        chunk.endO = oArray.length - 1;\n        chunk.startA = la;\n        chunk.endA = aArray.length - 1;\n        chunk.startB = lb;\n        chunk.endB = bArray.length - 1;\n        chunk.isStable = finalStable;\n        this.chunks.push(chunk);\n        //printChunk(oArray, aArray, bArray, chunk);\n      }\n    }\n  }, {\n    key: 'calPatchChunk',\n    value: function calPatchChunk(chunk) {\n      for (var i = chunk.startA; i <= chunk.endA; ++i) {\n        // find if item also in O\n        var found = false;\n        for (var j = chunk.startO; j <= chunk.endO; ++j) {\n          if (this.M_oa[j][i] == 1) {\n            // The item in both A and O\n            // The item is removed by B\n            found = true;\n            break;\n          }\n        }\n        if (found == false) {\n          // the item not found in O\n          // the item is added or modifed in A\n          // keep\n          this.mergedArray.push(this.aArray[i]);\n        }\n      }\n\n      for (var _i2 = chunk.startB; _i2 <= chunk.endB; ++_i2) {\n        // find if item also in O\n        var found = false;\n        for (var _j2 = chunk.startO; _j2 <= chunk.endO; ++_j2) {\n          if (this.M_ob[_j2][_i2] == 1) {\n            // The item in both B and O\n            // the item is removed by A (or moved by A)\n            // do nothing\n            found = true;\n            break;\n          }\n        }\n        if (found) continue;\n\n        // the matched item not found in O\n        // the item is added or modifed in B\n        this.mergedArray.push(this.bArray[_i2]);\n      }\n    }\n  }, {\n    key: 'calPatch',\n    value: function calPatch() {\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = this.chunks[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var chunk = _step4.value;\n\n          if (chunk.isStable) {\n            for (var i = 0; i + chunk.startA <= chunk.endA; ++i) {\n              var c = {};\n              c.indexA = i + chunk.startA;\n              c.indexO = i + chunk.startO;\n              c.indexB = i + chunk.startB;\n              //this.common.push(c);\n              this.mergedArray.push(this.aArray[c.indexA]);\n            }\n          }\n          if (!chunk.isStable) {\n            this.calPatchChunk(chunk);\n          }\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n    }\n  }]);\n\n  return Diff3;\n}();\n\n\n\n/***/ }),\n\n/***/ 304:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return compareTwoStrings; });\nfunction compareTwoStrings(str1, str2) {\n  if (!str1.length && !str2.length) return 1; // if both are empty strings\n  if (!str1.length || !str2.length) return 0; // if only one is empty string\n  if (str1.toUpperCase() === str2.toUpperCase()) return 1; // identical\n  if (str1.length === 1 && str2.length === 1) return 0; // both are 1-letter strings\n\n  var pairs1 = wordLetterPairs(str1);\n  var pairs2 = wordLetterPairs(str2);\n  var union = pairs1.length + pairs2.length;\n  var intersection = 0;\n  pairs1.forEach(function (pair1) {\n    for (var i = 0, pair2; pair2 = pairs2[i]; i++) {\n      if (pair1 !== pair2) continue;\n      intersection++;\n      pairs2.splice(i, 1);\n      break;\n    }\n  });\n  return intersection * 2 / union;\n}\n\nfunction findBestMatch(mainString, targetStrings) {\n  if (!areArgsValid(mainString, targetStrings)) throw new Error('Bad arguments: First argument should be a string, second should be an array of strings');\n  var ratings = targetStrings.map(function (target) {\n    return { target: target, rating: compareTwoStrings(mainString, target) };\n  });\n  var bestMatch = Array.from(ratings).sort(function (a, b) {\n    return b.rating - a.rating;\n  })[0];\n  return { ratings: ratings, bestMatch: bestMatch };\n}\n\nfunction flattenDeep(arr) {\n  return Array.isArray(arr) ? arr.reduce(function (a, b) {\n    return a.concat(flattenDeep(b));\n  }, []) : [arr];\n}\n\nfunction areArgsValid(mainString, targetStrings) {\n  if (typeof mainString !== 'string') return false;\n  if (!Array.isArray(targetStrings)) return false;\n  if (!targetStrings.length) return false;\n  if (targetStrings.find(function (s) {\n    return typeof s !== 'string';\n  })) return false;\n  return true;\n}\n\nfunction letterPairs(str) {\n  var pairs = [];\n  for (var i = 0, max = str.length - 1; i < max; i++) {\n    pairs[i] = str.substring(i, i + 2);\n  }return pairs;\n}\n\nfunction wordLetterPairs(str) {\n  var pairs = str.toUpperCase().split(' ').map(letterPairs);\n  return flattenDeep(pairs);\n}\n\n\n\n/***/ }),\n\n/***/ 305:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 4:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});exports.Utils=undefined;var _constants=__webpack_require__(2);var _pinyinByUnicode=__webpack_require__(13);var Utils=exports.Utils={keyCodes:{esc:27,space:32,tab:9,up:38,down:40},bytesToSize:function bytesToSize(bytes){if(typeof bytes=='undefined')return' ';if(bytes<0)return'--';var sizes=['bytes','KB','MB','GB','TB','PB'];if(bytes===0)return bytes+' '+sizes[0];var i=parseInt(Math.floor(Math.log(bytes)/Math.log(1000)),10);if(i===0)return bytes+' '+sizes[i];return(bytes/Math.pow(1000,i)).toFixed(1)+' '+sizes[i];},isHiDPI:function isHiDPI(){var pixelRatio=window.devicePixelRatio?window.devicePixelRatio:1;if(pixelRatio>1){return true;}else{return false;}},FILEEXT_ICON_MAP:{// text file\n'md':'txt.png','txt':'txt.png',// pdf file\n'pdf':'pdf.png',// document file\n'doc':'word.png','docx':'word.png','odt':'word.png','fodt':'word.png','ppt':'ppt.png','pptx':'ppt.png','odp':'ppt.png','fodp':'ppt.png','xls':'excel.png','xlsx':'excel.png','ods':'excel.png','fods':'excel.png',// video\n'mp4':'video.png','ogv':'video.png','webm':'video.png','mov':'video.png','flv':'video.png','wmv':'video.png','rmvb':'video.png',// music file\n'mp3':'music.png','oga':'music.png','ogg':'music.png','flac':'music.png','aac':'music.png','ac3':'music.png','wma':'music.png',// image file\n'jpg':'pic.png','jpeg':'pic.png','png':'pic.png','svg':'pic.png','gif':'pic.png','bmp':'pic.png','ico':'pic.png',// default\n'default':'file.png'},// check if a file is an image\nimageCheck:function imageCheck(filename){// no file ext\nif(filename.lastIndexOf('.')==-1){return false;}var file_ext=filename.substr(filename.lastIndexOf('.')+1).toLowerCase();var image_exts=['gif','jpeg','jpg','png','ico','bmp'];if(image_exts.indexOf(file_ext)!=-1){return true;}else{return false;}},// check if a file is a video\nvideoCheck:function videoCheck(filename){// no file ext\nif(filename.lastIndexOf('.')==-1){return false;}var file_ext=filename.substr(filename.lastIndexOf('.')+1).toLowerCase();var exts=['mp4','ogv','webm','mov'];if(exts.indexOf(file_ext)!=-1){return true;}else{return false;}},encodePath:function encodePath(path){// IE8 does not support 'map()'\n/*\n       return path.split('/').map(function(e) {\n       return encodeURIComponent(e);\n       }).join('/');\n       */if(!path){return'';}var path_arr=path.split('/');var path_arr_=[];for(var i=0,len=path_arr.length;i<len;i++){path_arr_.push(encodeURIComponent(path_arr[i]));}return path_arr_.join('/');},HTMLescape:function HTMLescape(html){return document.createElement('div').appendChild(document.createTextNode(html)).parentNode.innerHTML;},generateDialogTitle:function generateDialogTitle(title,operationTarget){/*\n     * @param title: gettext('...{placeholder}...')\n     */var targetStr=this.HTMLescape(operationTarget);var str='<span class=\"op-target ellipsis ellipsis-op-target\" title='+targetStr+'>'+targetStr+'</span>';return title.replace('{placeholder}',str);},getFileName:function getFileName(filePath){var lastIndex=filePath.lastIndexOf('/');return filePath.slice(lastIndex+1);},/**\n   * input: '/abc/bc/cb'\n   * output: ['/abc', '/abc/bc', '/abc/bc/cb'];\n   */getPaths:function getPaths(path){var paths=path.split('/').slice(1);var result=[];while(paths.length){result.push('/'+paths.join('/'));paths.pop();}return result.reverse();},/**\n   * input: \n   *  eg: /\n   *      ../abc/abc/\n   *      ../abc/bc\n   * output(return):\n   *  eg: /\n   *      abc\n   *      bc\n   */getFolderName:function getFolderName(path){if(path==='/'){return path;}path=path[path.length-1]!=='/'?path:path.slice(0,path.length-2);return path.slice(path.lastIndexOf('/')+1);},/*\n    return dirname of a path.\n    if path is '/', return '/'.\n  */getDirName:function getDirName(path){var dir=path.slice(0,path.lastIndexOf('/'));if(dir===''){return'/';}else{return dir;}},isChildPath:function isChildPath(child,parent){var p=this.getDirName(child);return p===parent;},isAncestorPath:function isAncestorPath(ancestor,path){return path.indexOf(ancestor)>-1;},renameAncestorPath:function renameAncestorPath(path,ancestor,newAncestor){return path.replace(ancestor,newAncestor);},joinPath:function joinPath(pathA,pathB){if(pathA[pathA.length-1]==='/'){return pathA+pathB;}else{return pathA+'/'+pathB;}},isSupportUploadFolder:function isSupportUploadFolder(){return navigator.userAgent.indexOf('Firefox')!=-1||navigator.userAgent.indexOf('Chrome')>-1;},getDefaultLibIconUrl:function getDefaultLibIconUrl(isBig){var size=Utils.isHiDPI()?48:24;size=isBig?256:size;var icon_name='lib.png';return _constants.mediaUrl+'img/lib/'+size+'/'+icon_name;},getLibIconUrl:function getLibIconUrl(repo,isBig){var permission=repo.permission||repo.share_permission;//Compatible with regular repo and repo shared\nvar size=Utils.isHiDPI()?48:24;size=isBig?256:size;var icon_name='lib.png';if(repo.encrypted){icon_name='lib-encrypted.png';}if(permission==='r'||permission==='perview'){icon_name='lib-readonly.png';}return _constants.mediaUrl+'img/lib/'+size+'/'+icon_name;},getDirentIcon:function getDirentIcon(dirent,isBig){var size=this.isHiDPI()?48:24;size=isBig?192:size;if(dirent.isDir()){var readonly=false;if(dirent.permission&&(dirent.permission==='r'||dirent.permission==='preview')){readonly=true;}return this.getFolderIconUrl(readonly,size);}else{return this.getFileIconUrl(dirent.name,size);}},getFolderIconUrl:function getFolderIconUrl(){var readonly=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;var size=arguments[1];if(!size){size=Utils.isHiDPI()?48:24;}size=size>24?192:24;return _constants.mediaUrl+'img/folder'+(readonly?'-read-only-':'-')+size+'.png';},getFileIconUrl:function getFileIconUrl(filename,size){if(!size){size=Utils.isHiDPI()?48:24;}size=size>24?192:24;var file_ext='';if(filename.lastIndexOf('.')==-1){return _constants.mediaUrl+'img/file/'+size+'/'+this.FILEEXT_ICON_MAP['default'];}else{file_ext=filename.substr(filename.lastIndexOf('.')+1).toLowerCase();}if(this.FILEEXT_ICON_MAP[file_ext]){return _constants.mediaUrl+'img/file/'+size+'/'+this.FILEEXT_ICON_MAP[file_ext];}else{return _constants.mediaUrl+'img/file/'+size+'/'+this.FILEEXT_ICON_MAP['default'];}},getLibIconTitle:function getLibIconTitle(repo){var title;var permission=repo.permission||repo.share_permission;//Compatible with regular repo and repo shared\nif(repo.encrypted){title=(0,_constants.gettext)('Encrypted library');}else if(repo.is_admin){// shared with 'admin' permission\ntitle=(0,_constants.gettext)('Admin access');}else{switch(permission){case'rw':title=(0,_constants.gettext)('Read-Write library');break;case'r':title=(0,_constants.gettext)('Read-Only library');break;case'cloud-edit':title=(0,_constants.gettext)('Preview-Edit-on-Cloud library');break;case'preview':title=(0,_constants.gettext)('Preview-on-Cloud library');break;}}return title;},getFolderIconTitle:function getFolderIconTitle(options){var title;switch(options.permission){case'rw':title=(0,_constants.gettext)('Read-Write folder');break;case'r':title=(0,_constants.gettext)('Read-Only folder');break;case'cloud-edit':title=(0,_constants.gettext)('Preview-Edit-on-Cloud folder');break;case'preview':title=(0,_constants.gettext)('Preview-on-Cloud folder');break;}return title;},sharePerms:function sharePerms(permission){var title;switch(permission){case'rw':title=(0,_constants.gettext)('Read-Write');break;case'r':title=(0,_constants.gettext)('Read-Only');break;case'admin':title=(0,_constants.gettext)('Admin');break;case'cloud-edit':title=(0,_constants.gettext)('Preview-Edit-on-Cloud');break;case'preview':title=(0,_constants.gettext)('Preview-on-Cloud');break;}return title;},sharePermsExplanation:function sharePermsExplanation(permission){var title;switch(permission){case'rw':title=(0,_constants.gettext)('User can read, write, upload, download and sync files.');break;case'r':title=(0,_constants.gettext)('User can read, download and sync files.');break;case'admin':title=(0,_constants.gettext)('Besides Write permission, user can also share the library.');break;case'cloud-edit':title=(0,_constants.gettext)('Same as Preview on cloud. But user can also edit files online via browser.');break;case'preview':title=(0,_constants.gettext)('User can only view files online via browser. Files can\\'t be downloaded.');break;}return title;},formatSize:function formatSize(options){/*\n     * param: {bytes, precision}\n     */var bytes=options.bytes;var precision=options.precision||0;var kilobyte=1000;var megabyte=kilobyte*1000;var gigabyte=megabyte*1000;var terabyte=gigabyte*1000;if(bytes>=0&&bytes<kilobyte){return bytes+' B';}else if(bytes>=kilobyte&&bytes<megabyte){return(bytes/kilobyte).toFixed(precision)+' KB';}else if(bytes>=megabyte&&bytes<gigabyte){return(bytes/megabyte).toFixed(precision)+' MB';}else if(bytes>=gigabyte&&bytes<terabyte){return(bytes/gigabyte).toFixed(precision)+' GB';}else if(bytes>=terabyte){return(bytes/terabyte).toFixed(precision)+' TB';}else{return bytes+' B';}},formatBitRate:function formatBitRate(bits){var Bs;if(typeof bits!=='number'){return'';}Bs=bits/8;if(Bs>=1000000000){return(Bs/1000000000).toFixed(2)+' GB/s';}if(Bs>=1000000){return(Bs/1000000).toFixed(2)+' MB/s';}if(Bs>=1000){return(Bs/1000).toFixed(2)+' kB/s';}return Bs.toFixed(2)+' B/s';},isMarkdownFile:function isMarkdownFile(filePath){var index=filePath.lastIndexOf('.');if(index===-1){return false;}else{var type=filePath.substring(index).toLowerCase();if(type==='.md'||type==='.markdown'){return true;}else{return false;}}},isInternalMarkdownLink:function isInternalMarkdownLink(url,repoID){var re=new RegExp(_constants.serviceURL+'/lib/'+repoID+'.*\\.md$');return re.test(url);},isInternalDirLink:function isInternalDirLink(url,repoID){var re=new RegExp(_constants.serviceURL+'/library/'+repoID+'.*');return re.test(url);},getPathFromInternalMarkdownLink:function getPathFromInternalMarkdownLink(url,repoID){var re=new RegExp(_constants.serviceURL+'/lib/'+repoID+'/file'+'(.*\\.md)');var array=re.exec(url);var path=decodeURIComponent(array[1]);return path;},getPathFromInternalDirLink:function getPathFromInternalDirLink(url,repoID){var re=new RegExp(_constants.serviceURL+'/library/'+repoID+'(/.*)');var array=re.exec(url);var path=decodeURIComponent(array[1]);path=path.slice(1);path=path.slice(path.indexOf('/'));return path;},isWikiInternalMarkdownLink:function isWikiInternalMarkdownLink(url,slug){slug=encodeURIComponent(slug);var re=new RegExp(_constants.serviceURL+'/wikis/'+slug+'.*\\.md$');return re.test(url);},isWikiInternalDirLink:function isWikiInternalDirLink(url,slug){slug=encodeURIComponent(slug);var re=new RegExp(_constants.serviceURL+'/wikis/'+slug+'.*');return re.test(url);},getPathFromWikiInternalMarkdownLink:function getPathFromWikiInternalMarkdownLink(url,slug){slug=encodeURIComponent(slug);var re=new RegExp(_constants.serviceURL+'/wikis/'+slug+'(.*\\.md)');var array=re.exec(url);var path=array[1];try{path=decodeURIComponent(path);}catch(err){path=path.replace(/%/g,'%25');path=decodeURIComponent(path);}return path;},getPathFromWikiInternalDirLink:function getPathFromWikiInternalDirLink(url,slug){slug=encodeURIComponent(slug);var re=new RegExp(_constants.serviceURL+'/wikis/'+slug+'(/.*)');var array=re.exec(url);var path=array[1];try{path=decodeURIComponent(path);}catch(err){path=path.replace(/%/g,'%25');path=decodeURIComponent(path);}return path;},compareTwoWord:function compareTwoWord(wordA,wordB){// compare wordA and wordB at lower case\n// if wordA >= wordB, return 1\n// if wordA < wordB, return -1\nvar a_val,b_val,a_uni=wordA.charCodeAt(0),b_uni=wordB.charCodeAt(0);if(19968<a_uni&&a_uni<40869&&19968<b_uni&&b_uni<40869){// both are chinese words\na_val=_pinyinByUnicode.strChineseFirstPY.charAt(a_uni-19968).toLowerCase();b_val=_pinyinByUnicode.strChineseFirstPY.charAt(b_uni-19968).toLowerCase();}else if(19968<a_uni&&a_uni<40869&&!(19968<b_uni&&b_uni<40869)){// a is chinese and b is english\nreturn 1;}else if(!(19968<a_uni&&a_uni<40869)&&19968<b_uni&&b_uni<40869){// a is english and b is chinese\nreturn-1;}else{// both are english words\na_val=wordA.toLowerCase();b_val=wordB.toLowerCase();return this.compareStrWithNumbersIn(a_val,b_val);}return a_val>=b_val?1:-1;},// compare two strings which may have digits in them\n// and compare those digits as number instead of string\ncompareStrWithNumbersIn:function compareStrWithNumbersIn(a,b){var reParts=/\\d+|\\D+/g;var reDigit=/\\d/;var aParts=a.match(reParts);var bParts=b.match(reParts);var isDigitPart;var len=Math.min(aParts.length,bParts.length);var aPart,bPart;if(aParts&&bParts&&(isDigitPart=reDigit.test(aParts[0]))==reDigit.test(bParts[0])){// Loop through each substring part to compare the overall strings.\nfor(var i=0;i<len;i++){aPart=aParts[i];bPart=bParts[i];if(isDigitPart){aPart=parseInt(aPart,10);bPart=parseInt(bPart,10);}if(aPart!=bPart){return aPart<bPart?-1:1;}// Toggle the value of isDigitPart since the parts will alternate.\nisDigitPart=!isDigitPart;}}// Use normal comparison.\nreturn(a>=b)-(a<=b);},sortRepos:function sortRepos(repos,sortBy,sortOrder){var _this=this;var comparator=void 0;switch(sortBy+'-'+sortOrder){case'name-asc':comparator=function comparator(a,b){if(!a.repo_name){return 1;}if(!b.repo_name){return-1;}var result=_this.compareTwoWord(a.repo_name,b.repo_name);return result;};break;case'name-desc':comparator=function comparator(a,b){if(!a.repo_name){return-1;}if(!b.repo_name){return 1;}var result=_this.compareTwoWord(a.repo_name,b.repo_name);return-result;};break;case'time-asc':comparator=function comparator(a,b){return a.last_modified<b.last_modified?-1:1;};break;case'time-desc':comparator=function comparator(a,b){return a.last_modified<b.last_modified?1:-1;};break;}repos.sort(comparator);return repos;},sortDirents:function sortDirents(items,sortBy,sortOrder){var _this=this;var comparator=void 0;switch(sortBy+'-'+sortOrder){case'name-asc':comparator=function comparator(a,b){var result=_this.compareTwoWord(a.name,b.name);return result;};break;case'name-desc':comparator=function comparator(a,b){var result=_this.compareTwoWord(a.name,b.name);return-result;};break;case'time-asc':comparator=function comparator(a,b){return a.mtime<b.mtime?-1:1;};break;case'time-desc':comparator=function comparator(a,b){return a.mtime<b.mtime?1:-1;};break;}items.sort(function(a,b){if(a.type=='dir'&&b.type=='file'){return-1;}else if(a.type=='file'&&b.type=='dir'){return 1;}else{return comparator(a,b);}});return items;},changeMarkdownNodes:function changeMarkdownNodes(nodes,fn){nodes.map(function(item){fn(item);if(item.nodes&&item.nodes.length>0){Utils.changeMarkdownNodes(item.nodes,fn);}});return nodes;},chooseLanguage:function chooseLanguage(suffix){var mode=void 0;switch(suffix){case'py':mode='python';break;case'js':mode='javascript';break;case'c':mode='text/x-csrc';break;case'cpp':mode='text/x-c++src';break;case'java':mode='text/x-java';break;case'cs':mode='text/x-csharp';break;case'mdf':mode='text/x-sql';break;case'html':mode='htmlmixed';break;default:mode=suffix;}return mode;},DARK_COLOR_MAP:{// old color\n'red':'#D11507','orange':'#FF8C00','yellow':'#EDEF00','green':'#006400','cyan':'#00E0E1','blue':'#2510A3','indigo':'#350C56','purple':'#551054','pink':'#E3A5B0','azure':'#C4D0D0','lime':'#00E100','teal':'#006A6B','gray':'#545454',// new color\n'#FFA8A8':'#E49090','#FFA94D':'#E39136','#FFD43B':'#E0B815','#A0EC50':'#83CF32','#A9E34B':'#8DC72E','#63E6BE':'#43CAA4','#4FD2C9':'#2DB9B0','#72C3FC':'#57ABE3','#91A7FF':'#7A91E7','#E599F7':'#CC82DE','#B197FC':'#9B82E5','#F783AC':'#DF6D97','#CED4DA':'#A8ADB2'},getDarkColor:function getDarkColor(color){var darkColor=void 0;darkColor=this.DARK_COLOR_MAP[color];return darkColor;}};\n\n/***/ }),\n\n/***/ 439:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 646:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});var unified=__webpack_require__(1309);var markdown=__webpack_require__(370);var slug=__webpack_require__(586);var breaks=__webpack_require__(587);var remark2rehype=__webpack_require__(588);var format=__webpack_require__(595);var raw=__webpack_require__(598);var xtend=__webpack_require__(63);var toHTML=__webpack_require__(606);var sanitize=__webpack_require__(615);var gh=__webpack_require__(382);var deepmerge=__webpack_require__(616).default;function stringify(config){var settings=xtend(config,this.data('settings'));var schema=deepmerge(gh,{'attributes':{'input':['type'],'li':['className'],'code':['className']},'tagNames':['input','code']});this.Compiler=compiler;function compiler(tree){// use sanity to remove dangerous html, the default is\nvar hast=sanitize(tree,schema);return toHTML(hast,settings);}}// markdown -> mdast -> html AST -> html\nvar processor=unified().use(markdown,{commonmark:true}).use(breaks).use(slug).use(remark2rehype,{allowDangerousHTML:true}).use(raw).use(format).use(stringify);var processorGetAST=unified().use(markdown,{commonmark:true}).use(slug);exports.processor=processor;exports.processorGetAST=processorGetAST;\n\n/***/ }),\n\n/***/ 85:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ })\n\n},[1306]);\n\n\n// WEBPACK FOOTER //\n// js/draft.js","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n  children: PropTypes.object.isRequired,\n};\n\nconst modalRoot = document.getElementById('modal-wrapper');\nclass ModalPortal extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.el = document.createElement('div');\n  }\n\n  componentDidMount() {\n    modalRoot.appendChild(this.el);\n  }\n\n  componentWillUnmount() {\n    modalRoot.removeChild(this.el);\n  }\n\n  render() {\n    return ReactDOM.createPortal(\n      this.props.children,\n      this.el,\n    );\n  }\n}\n\nModalPortal.propTypes = propTypes;\n\nexport default ModalPortal;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/modal-portal.js","import React from 'react';\n\nfunction Loading() {\n  return (\n    <span className=\"loading-icon loading-tip\"></span>\n  );\n}\n\nexport default Loading;\n\n\n// WEBPACK FOOTER //\n// ./src/components/loading.js","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.11';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n\n        return result;\n      }\n\n      if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n\n        return result;\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || isFunction(objValue)) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array == null ? 0 : array.length,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Gets the value at `key`, unless `key` is \"__proto__\".\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to get.\n     * @returns {*} Returns the property value.\n     */\n    function safeGet(object, key) {\n      if (key == '__proto__') {\n        return;\n      }\n\n      return object[key];\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/lodash.js\n// module id = 111\n// module chunks = 0 10 11","'use strict';\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  require('promise/lib/rejection-tracking').enable();\n  window.Promise = require('promise/lib/es6-extensions.js');\n}\n\n// fetch() polyfill for making API calls.\nrequire('whatwg-fetch');\n\n// Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\nObject.assign = require('object-assign');\n\n// In tests, polyfill requestAnimationFrame since jsdom doesn't provide it yet.\n// We don't polyfill it in the browser--this is user's responsibility.\nif (process.env.NODE_ENV === 'test') {\n  require('raf').polyfill(global);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./config/polyfills.js\n// module id = 12\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30","export const strChineseFirstPY = \"\";\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/pinyin-by-unicode.js","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { Button } from 'reactstrap';\n/* eslint-disable */\nimport Prism from 'prismjs';\n/* eslint-enable */\nimport { siteRoot, gettext, draftOriginFilePath, draftFilePath, author, authorAvatar, originFileExists, draftFileExists, draftID, draftFileName, draftRepoID, draftStatus, draftPublishVersion, originFileVersion } from './utils/constants';\nimport { seafileAPI } from './utils/seafile-api';\nimport axios from 'axios';\nimport DiffViewer from '@seafile/seafile-editor/dist/viewer/diff-viewer';\nimport { serialize } from '@seafile/seafile-editor/dist/utils/slate2markdown/serialize';\nimport Loading from './components/loading';\nimport ReviewComments from './components/review-list-view/review-comments';\nimport ReviewCommentDialog from './components/review-list-view/review-comment-dialog.js';\nimport { Tooltip } from 'reactstrap';\nimport AddReviewerDialog from './components/dialog/add-reviewer-dialog.js';\nimport { findRange } from '@seafile/slate-react';\nimport { Nav, NavItem, NavLink, TabContent, TabPane } from 'reactstrap';\nimport classnames from 'classnames';\nimport HistoryList from './pages/review/history-list';\nimport { Value, Document, Block } from 'slate';\nimport ModalPortal from './components/modal-portal';\nimport { Utils } from './utils/utils';\n\nimport './assets/css/fa-solid.css';\nimport './assets/css/fa-regular.css';\nimport './assets/css/fontawesome.css';\nimport './css/layout.css';\nimport './css/toolbar.css';\nimport './css/dirent-detail.css';\nimport './css/draft.css';\n\nrequire('@seafile/seafile-editor/dist/editor/code-hight-package');\nconst URL = require('url-parse');\n\nclass Draft extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      draftContent: '',\n      draftOriginContent: '',\n      isLoading: true,\n      isShowDiff: true,\n      showDiffTip: false,\n      activeTab: 'reviewInfo',\n      commentsNumber: null,\n      changedNodes: [],\n      originRepoName: '',\n      isShowCommentDialog: false,\n      unresolvedComments: 0,\n      activeItem: null,\n      historyList: [],\n      showReviewerDialog: false,\n      reviewers: [],\n      inResizing: false,\n      rightPartWidth: 30,\n    };\n    this.quote = '';\n    this.newIndex = null;\n    this.oldIndex = null;\n    this.changeIndex = -1;\n    this.range = null;\n  }\n\n  initialContent = () => {\n    switch(draftStatus) {\n      case 'open':\n        if (!draftFileExists) {\n          this.setState({\n            isLoading: false,\n            isShowDiff: false\n          });\n          return;\n        }\n\n        if (!originFileExists) {\n          seafileAPI.getFileDownloadLink(draftRepoID, draftFilePath)\n            .then(res => { \n              seafileAPI.getFileContent(res.data)\n                .then(res => {\n                  this.setState({\n                    draftContent: res.data,\n                    draftOriginContent: res.data,\n                    isLoading: false,\n                    isShowDiff: false\n                  }); \n                });\n            });\n          return;\n        }\n\n        const hash = window.location.hash;\n        if (hash.indexOf('#history-') === 0) {\n          const currentCommitID = hash.slice(9, 49);\n          const preCommitID = hash.slice(50, 90);\n          let preItemFilePath, currentItemFilePath;\n          this.setState({\n            isLoading: false,\n            activeTab: 'history',\n          });\n          seafileAPI.listFileHistoryRecords(draftRepoID, draftFilePath, 1, 25).then((res) => {\n            const historyList = res.data.data;        \n            this.setState({\n              historyList: historyList,\n              totalReversionCount: res.data.total_count\n            });\n            for (let i = 0, length = historyList.length; i < length; i++) {\n              if (preCommitID === historyList[i].commit_id) {\n                this.setState({\n                  activeItem: i\n                });\n                preItemFilePath = historyList[i].path;\n              }\n              if (currentCommitID === historyList[i].commit_id) {\n                currentItemFilePath = historyList[i].path;\n              }\n              if (preItemFilePath && currentItemFilePath) break;\n            }\n            axios.all([\n              seafileAPI.getFileRevision(draftRepoID, currentCommitID, currentItemFilePath),\n              seafileAPI.getFileRevision(draftRepoID, preCommitID, preItemFilePath)\n            ]).then(axios.spread((res1, res2) => {\n              axios.all([seafileAPI.getFileContent(res1.data), seafileAPI.getFileContent(res2.data)]).then(axios.spread((content1, content2) => {\n                this.setDiffViewerContent(content2.data, content1.data);\n              }));\n            }));\n            return;\n          });\n        } else {\n          axios.all([\n            seafileAPI.getFileDownloadLink(draftRepoID, draftFilePath),\n            seafileAPI.getFileDownloadLink(draftRepoID, draftOriginFilePath)\n          ]).then(axios.spread((res1, res2) => {\n            axios.all([\n              seafileAPI.getFileContent(res1.data),\n              seafileAPI.getFileContent(res2.data)\n            ]).then(axios.spread((draftContent, draftOriginContent) => {\n              this.setState({\n                draftContent: draftContent.data,\n                draftOriginContent: draftOriginContent.data,\n                isLoading: false\n              });\n              let that = this;\n              setTimeout(() => {\n                that.getChangedNodes();\n              }, 100);\n            }));\n          }));\n        }\n        break;\n      case 'published':\n        if (!originFileExists) {\n          this.setState({\n            isLoading: false,\n            isShowDiff: false\n          });\n          return;\n        }\n\n        let dl0 = siteRoot + 'repo/' + draftRepoID + '/' + draftPublishVersion + '/download?' + 'p=' + draftOriginFilePath; \n        let dl = siteRoot + 'repo/' + draftRepoID + '/' + originFileVersion + '/download?' + 'p=' + draftOriginFilePath; \n        axios.all([\n          seafileAPI.getFileContent(dl0),\n          seafileAPI.getFileContent(dl)\n        ]).then(axios.spread((draftContent, draftOriginContent) => {\n          this.setState({\n            draftContent: draftContent.data,\n            draftOriginContent: draftOriginContent.data,\n            isLoading: false,\n          }); \n        }));\n        break;\n      } \n  }\n\n  onHistoryItemClick = (currentItem, preItem, activeItem) => {\n    const preCommitID = preItem.commit_id;\n    const currentCommitID = currentItem.commit_id;\n    const url = 'history-' + preCommitID + '-' + currentCommitID;\n    this.setURL(url);\n    this.setState({\n      activeItem: activeItem,\n      isLoading: true,\n    });\n    axios.all([\n      seafileAPI.getFileRevision(draftRepoID, currentCommitID, currentItem.path),\n      seafileAPI.getFileRevision(draftRepoID, preCommitID, preItem.path)\n    ]).then(axios.spread((res1, res2) => {\n      axios.all([seafileAPI.getFileContent(res1.data), seafileAPI.getFileContent(res2.data)]).then(axios.spread((content1,content2) => {\n        this.setDiffViewerContent(content1.data, content2.data);\n      }));\n    }));\n  }\n\n  onHistoryListChange = (historyList) => {\n    this.setState({\n      historyList: historyList\n    });\n  }\n\n  getCommentsNumber = () => {\n    seafileAPI.listComments(draftRepoID, draftFilePath).then((res) => {\n      let number = res.data.total_count;\n      let comments = res.data.comments;\n      let unresolvedComments = 0;\n      for (let i = 0; i < res.data.total_count; i++) {\n        if (comments[i].resolved === false) {\n          unresolvedComments++;\n        }\n      }\n      this.setState({\n        commentsNumber: number,\n        unresolvedComments: unresolvedComments,\n      });\n    });\n  }\n\n  addComment = (e) => {\n    e.stopPropagation();\n    this.getQuote();\n    if (!this.quote) {\n      return;\n    }\n    this.setState({\n      isShowCommentDialog: true\n    });\n  }\n\n  onCommentAdded = () => {\n    this.getCommentsNumber();\n    this.toggleCommentDialog();\n  }\n\n  toggleCommentDialog = () => {\n    this.setState({\n      isShowCommentDialog: !this.state.isShowCommentDialog\n    });\n  }\n\n  getOriginRepoInfo = () => {\n    seafileAPI.getRepoInfo(draftRepoID).then((res) => {\n      this.setState({\n        originRepoName: res.data.repo_name\n      });\n    });\n  }\n\n  getChangedNodes = () => {\n    const nodes = this.refs.diffViewer.value.document.nodes;\n    let keys = [];\n    let lastDiffState = '';\n    nodes.map((node) => {\n      if (node.data.get('diff_state') === 'diff-added' && lastDiffState !== 'diff-added') {\n        keys.push(node.key);\n      } else if (node.data.get('diff_state') === 'diff-removed' && lastDiffState !== 'diff-removed') {\n        keys.push(node.key);\n      } else if (node.data.get('diff_state') === 'diff-replaced' && lastDiffState !== 'diff-replaced') {\n        keys.push(node.key);\n      }\n      lastDiffState = node.data.get('diff_state');\n    });\n    this.setState({\n      changedNodes: keys\n    });\n  }\n\n  scrollToChangedNode = (scroll) => {\n    if (this.state.changedNodes.length == 0) return;\n    if (scroll === 'up') { this.changeIndex++; } else { this.changeIndex--; }\n    if (this.changeIndex > this.state.changedNodes.length - 1) {\n      this.changeIndex = 0;\n    }\n    if (this.changeIndex < 0) {\n      this.changeIndex = this.state.changedNodes.length - 1;\n    }\n    const win = window;\n    let key = this.state.changedNodes[this.changeIndex];\n    let element = win.document.querySelector(`[data-key=\"${key}\"]`);\n    // fix code-block or tables\n    while (element.className.indexOf('diff-') === -1 && element.tagName !== 'BODY') {\n      element = element.parentNode;\n    }\n    const scroller = this.findScrollContainer(element, win);\n    const isWindow = scroller == win.document.body || scroller == win.document.documentElement;\n    if (isWindow) {\n      win.scrollTo(0, element.offsetTop);\n    } else {\n      scroller.scrollTop = element.offsetTop;\n    }\n  }\n\n  findScrollContainer = (element, window) => {\n    let parent = element.parentNode;\n    const OVERFLOWS = ['auto', 'overlay', 'scroll'];\n    let scroller;\n    while (!scroller) {\n      if (!parent.parentNode) break;\n      const style = window.getComputedStyle(parent);\n      const { overflowY } = style;\n      if (OVERFLOWS.includes(overflowY)) {\n        scroller = parent;\n        break;\n      }\n      parent = parent.parentNode;\n    }\n    if (!scroller) {\n      return window.document.body;\n    }\n    return scroller;\n  }\n\n  scrollToQuote = (newIndex, oldIndex, quote) => {\n    const nodes = this.refs.diffViewer.value.document.nodes;\n    let key;\n    nodes.map((node) => {\n      if (node.data.get('old_index') == oldIndex && node.data.get('new_index') == newIndex) {\n        key = node.key;\n      }\n    });\n    if (typeof(key) !== 'string') {\n      nodes.map((node) => {\n        if (node.text.indexOf(quote) > 0) {\n          key = node.key;\n        }\n      });\n    }\n    if (typeof(key) === 'string') {\n      const win = window;\n      let element = win.document.querySelector(`[data-key=\"${key}\"]`);\n      while (element.tagName === 'CODE') {\n        element = element.parentNode;\n      }\n      const scroller = this.findScrollContainer(element, win);\n      const isWindow = scroller == win.document.body || scroller == win.document.documentElement;\n      if (isWindow) {\n        win.scrollTo(0, element.offsetTop);\n      } else {\n        scroller.scrollTop = element.offsetTop;\n      }\n    }\n  }\n\n  showDiffViewer = () => {\n    return (\n      <div>\n        {this.state.isShowDiff ?\n          <DiffViewer\n            newMarkdownContent={this.state.draftContent}\n            oldMarkdownContent={this.state.draftOriginContent}\n            ref=\"diffViewer\"\n          /> :\n          <DiffViewer\n            newMarkdownContent={this.state.draftContent}\n            oldMarkdownContent={this.state.draftContent}\n            ref=\"diffViewer\"\n          />\n        }\n        <i className=\"fa fa-plus-square review-comment-btn\" ref=\"commentbtn\" onMouseDown={this.addComment}></i>\n      </div>\n    );\n  }\n\n  listReviewers = () => {\n    seafileAPI.listDraftReviewers(draftID).then((res) => {\n      this.setState({\n        reviewers: res.data.reviewers\n      });\n    });\n  }\n\n  onSwitchShowDiff = () => {\n    if (!this.state.isShowDiff) {\n      let that = this;\n      setTimeout(() => {\n        that.getChangedNodes();\n      }, 100);\n    }\n    this.setState({\n      isShowDiff: !this.state.isShowDiff,\n    });\n  }\n\n  toggleDiffTip = () => {\n    this.setState({\n      showDiffTip: !this.state.showDiffTip\n    });\n  }\n\n  toggleAddReviewerDialog = () => {\n    if (this.state.showReviewerDialog) {\n      this.listReviewers();\n    }\n    this.setState({\n      showReviewerDialog: !this.state.showReviewerDialog\n    });\n  }\n\n  showDiffButton = () => {\n    return (\n      <div className={'seafile-toggle-diff'}>\n        <label className=\"custom-switch\" id=\"toggle-diff\">\n          <input type=\"checkbox\" checked={this.state.isShowDiff && 'checked'}\n            name=\"option\" className=\"custom-switch-input\"\n            onChange={this.onSwitchShowDiff}/>\n          <span className=\"custom-switch-indicator\"></span>\n        </label>\n        <Tooltip placement=\"bottom\" isOpen={this.state.showDiffTip}\n          target=\"toggle-diff\" toggle={this.toggleDiffTip}>\n          {gettext('View diff')}</Tooltip>\n      </div>\n    );\n  }\n\n  onPublishDraft = () => {\n    seafileAPI.publishDraft(draftID).then(res => {\n      const OriginFileLink = siteRoot + 'lib/' + draftRepoID + '/file' + Utils.encodePath(res.data.published_file_path);\n      window.location.href = OriginFileLink; \n    });\n  }\n\n  initialDiffViewerContent = () => {\n    seafileAPI.listFileHistoryRecords(draftRepoID, draftFilePath, 1, 25).then((res) => {\n      this.setState({\n        historyList: res.data.data,\n        totalReversionCount: res.data.total_count\n      });\n      if (res.data.data.length > 1) {\n        axios.all([\n          seafileAPI.getFileRevision(draftRepoID, res.data.data[0].commit_id, draftFilePath),\n          seafileAPI.getFileRevision(draftRepoID, res.data.data[1].commit_id, draftFilePath)\n        ]).then(axios.spread((res1, res2) => {\n          axios.all([seafileAPI.getFileContent(res1.data), seafileAPI.getFileContent(res2.data)]).then(axios.spread((content1,content2) => {\n            this.setState({\n              draftContent: content1.data,\n              draftOriginContent: content2.data\n            });\n          }));\n        }));\n      } else {\n        seafileAPI.getFileRevision(draftRepoID, res.data.data[0].commit_id, draftFilePath).then((res) => {\n          seafileAPI.getFileContent(res.data).then((content) => {\n            this.setState({\n              draftContent: content.data,\n              draftOriginContent: ''\n            });\n          });\n        });\n      }\n    });\n  }\n\n  setDiffViewerContent = (newContent, prevContent) => {\n    this.setState({\n      draftContent: newContent,\n      draftOriginContent: prevContent,\n      isLoading: false,\n    });\n  }\n\n  setURL = (newurl) => {\n    let url = new URL(window.location.href);\n    url.set('hash', newurl);\n    window.location.href = url.toString();\n  }\n\n  tabItemClick = (tab) => {\n    if (this.state.activeTab !== tab) {\n      if (tab !== 'history' && window.location.hash) {\n        this.setURL('#');\n      }\n      if (tab == 'reviewInfo') { \n        this.initialContent();\n      }\n      else if (tab == 'history') {\n        this.initialDiffViewerContent();\n      }\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n\n  showNavItem = (showTab) => {\n    switch(showTab) {\n      case 'info':\n        return (\n          <NavItem className=\"nav-item\">\n            <NavLink\n              className={classnames({ active: this.state.activeTab === 'reviewInfo' })}\n              onClick={() => { this.tabItemClick('reviewInfo');}}\n            >\n              <i className=\"fas fa-info-circle\"></i>\n            </NavLink>\n          </NavItem>\n        );\n      case 'comments':\n        return (\n          <NavItem className=\"nav-item\">\n            <NavLink\n              className={classnames({ active: this.state.activeTab === 'comments' })}\n              onClick={() => {this.tabItemClick('comments');}}\n            >\n              <i className=\"fa fa-comments\"></i>\n              {this.state.commentsNumber > 0 && <div className='comments-number'>{this.state.commentsNumber}</div>}\n            </NavLink>\n          </NavItem>\n        );\n      case 'history':\n        return (\n          <NavItem className=\"nav-item\">\n            <NavLink\n              className={classnames({ active: this.state.activeTab === 'history' })}\n              onClick={() => { this.tabItemClick('history');}}\n            >\n              <i className=\"fas fa-history\"></i>\n            </NavLink>\n          </NavItem>\n        );\n    }\n  } \n\n\n  setBtnPosition = (e) => {\n    const nativeSelection = window.getSelection();\n    if (!nativeSelection.rangeCount) {\n      this.range = null;\n      return;\n    }\n    if (nativeSelection.isCollapsed === false) {\n      const nativeRange = nativeSelection.getRangeAt(0);\n      const focusNode = nativeSelection.focusNode;\n      if ((focusNode.tagName === 'I') ||\n          (focusNode.nodeType !== 3 && focusNode.getAttribute('class') === 'language-type')) {\n        // fix select last paragraph\n        let fragment = nativeRange.cloneContents();\n        let startNode = fragment.firstChild.firstChild;\n        if (!startNode) {\n          return;\n        }\n        let newNativeRange = document.createRange();\n        newNativeRange.setStartBefore(startNode);\n        newNativeRange.setEndAfter(startNode);\n        this.range =  findRange(newNativeRange, this.refs.diffViewer);\n      }\n      else {\n        this.range = findRange(nativeRange, this.refs.diffViewer);\n      }\n      if (!this.range) {\n        return;\n      }\n      let rect = nativeRange.getBoundingClientRect();\n      // fix Safari bug\n      if (navigator.userAgent.indexOf('Chrome') < 0 && navigator.userAgent.indexOf('Safari') > 0) {\n        if (nativeRange.collapsed && rect.top == 0 && rect.height == 0) {\n          if (nativeRange.startOffset == 0) {\n            nativeRange.setEnd(nativeRange.endContainer, 1);\n          } else {\n            nativeRange.setStart(nativeRange.startContainer, nativeRange.startOffset - 1);\n          }\n          rect = nativeRange.getBoundingClientRect();\n          if (rect.top == 0 && rect.height == 0) {\n            if (nativeRange.getClientRects().length) {\n              rect = nativeRange.getClientRects()[0];\n            }\n          }\n        }\n      }\n      let style = this.refs.commentbtn.style;\n      style.top = `${rect.top - 100 + this.refs.viewContent.scrollTop}px`;\n    }\n    else {\n      let style = this.refs.commentbtn.style;\n      style.top = '-1000px';\n    }\n  }\n\n  getQuote = () => {\n    let range = this.range;\n    if (!range) {\n      return;\n    }\n    this.quote = '';\n    const { document } = this.refs.diffViewer.value;\n    let { anchor, focus } = range;\n    const anchorText = document.getNode(anchor.key);\n    const focusText = document.getNode(focus.key);\n    const anchorInline = document.getClosestInline(anchor.key);\n    const focusInline = document.getClosestInline(focus.key);\n    // COMPAT: If the selection is at the end of a non-void inline node, and\n    // there is a node after it, put it in the node after instead. This\n    // standardizes the behavior, since it's indistinguishable to the user.\n    if (anchorInline && anchor.offset == anchorText.text.length) {\n      const block = document.getClosestBlock(anchor.key);\n      const nextText = block.getNextText(anchor.key);\n      if (nextText) {\n        range = range.moveAnchorTo(nextText.key, 0);\n      }\n    }\n    if (focusInline && focus.offset == focusText.text.length) {\n      const block = document.getClosestBlock(focus.key);\n      const nextText = block.getNextText(focus.key);\n      if (nextText) {\n        range = range.moveFocusTo(nextText.key, 0); \n      }\n    }\n    let fragment = document.getFragmentAtRange(range);\n    let nodes = this.removeNullNode(fragment.nodes);\n    let newFragment = Document.create({\n      nodes: nodes\n    });\n    let newValue = Value.create({\n      document: newFragment\n    });\n    this.quote = serialize(newValue.toJSON());\n    let blockPath = document.createSelection(range).anchor.path.slice(0, 1);\n    let node = document.getNode(blockPath);\n    this.newIndex = node.data.get('new_index');\n    this.oldIndex = node.data.get('old_index');\n  }\n\n  removeNullNode = (oldNodes) => {\n    let newNodes = [];\n    oldNodes.map((node) => {\n      const text = node.text.trim();\n      const childNodes = node.nodes;\n      if (!text) {\n        return;\n      }\n      if ((childNodes && childNodes.size === 1) || (!childNodes)) {\n        newNodes.push(node);\n      }\n      else if (childNodes.size > 1) {\n        let nodes = this.removeNullNode(childNodes);\n        let newNode = Block.create({\n          nodes: nodes,\n          data: node.data,\n          key: node.key,\n          type: node.type\n        });\n        newNodes.push(newNode);\n      }\n    });\n    return newNodes;\n  }\n\n  onResizeMouseUp = () => {\n    if (this.state.inResizing) {\n      this.setState({\n        inResizing: false\n      });\n    }\n  }\n\n  onResizeMouseDown = () => {\n    this.setState({\n      inResizing: true\n    });\n  };\n\n  onResizeMouseMove = (e) => {\n    let rate = 100 - e.nativeEvent.clientX / this.refs.main.clientWidth * 100;\n    if (rate < 20 || rate > 60) {\n      this.setState({\n        inResizing: false\n      });\n      return null;\n    }\n    this.setState({\n      rightPartWidth: rate\n    });\n  };\n\n  componentWillMount() {\n    this.getCommentsNumber();\n    this.listReviewers();\n    this.getOriginRepoInfo();\n  }\n\n  componentDidMount() {\n    this.initialContent();\n    document.addEventListener('selectionchange', this.setBtnPosition);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('selectionchange', this.setBtnPosition);\n  }\n\n  renderDiffButton = () => {\n    switch(draftStatus) {\n      case 'open':\n        if (!draftFileExists) {\n          return;\n        }\n\n        if (!originFileExists) {\n          return;\n        }\n\n        return this.showDiffButton();\n      case 'published':\n        if (!originFileExists) {\n          return;\n        } \n\n        return this.showDiffButton();\n    }\n  }\n\n  renderNavItems = () => {\n    switch (draftStatus) {\n      case 'open':\n        if (!draftFileExists) {\n          return (\n            <Nav tabs className=\"review-side-panel-nav\">\n            {this.showNavItem('info')}\n            </Nav>\n          );\n        }\n\n        return (\n          <Nav tabs className=\"review-side-panel-nav\">\n            {this.showNavItem('info')}\n            {this.showNavItem('comments')}\n            {this.showNavItem('history')}\n          </Nav>\n        );\n      case 'published':\n        if (!originFileExists) {\n          return (\n            <Nav tabs className=\"review-side-panel-nav\">\n              {this.showNavItem('info')}\n            </Nav>\n          );\n        }\n        return (\n          <Nav tabs className=\"review-side-panel-nav\">\n            {this.showNavItem('info')}\n            {this.showNavItem('comments')}\n          </Nav>\n        );\n    }\n  }\n\n  renderContent = () => {\n    switch(draftStatus) {\n      case 'open':\n        if (!draftFileExists) {\n          return <p className=\"error\">{gettext('Draft has been deleted.')}</p>;\n        }\n        return this.showDiffViewer();\n      case 'published':\n        if (!originFileExists) {\n          return <p className=\"error\">{gettext('Original file has been deleted.')}</p>;\n        }\n        return this.showDiffViewer();\n    }\n  }\n\n  render() {\n    const onResizeMove = this.state.inResizing ? this.onResizeMouseMove : null;\n    const draftLink = siteRoot + 'lib/' + draftRepoID + '/file' + draftFilePath + '?mode=edit';\n    return(\n      <div className=\"wrapper\">\n        <div id=\"header\" className=\"header review\">\n          <div className=\"cur-file-info\">\n            <div className=\"info-item file-feature\">\n              <span className=\"sf2-icon-review\"></span>\n            </div>\n            <div className=\"info-item file-info\">\n                <React.Fragment>\n                  <span className=\"file-name\">{draftFileName}</span>\n                  {draftFileExists &&\n                    <a href={draftLink} className=\"draft-link\">{gettext('Edit draft')}</a>\n                  }\n                </React.Fragment>\n            </div>\n          </div>\n          <div className=\"button-group\">\n            {this.renderDiffButton()}\n            {draftFileExists &&\n              <button \n                className='btn btn-success file-operation-btn' \n                title={gettext('Publish draft')}\n                onClick={this.onPublishDraft}\n              >\n                {gettext('Publish')}\n              </button>\n            }\n            {draftStatus == 'published' &&\n              <button \n                className='btn btn-success file-operation-btn' \n                title={gettext('Published')}\n                disabled\n              >\n                {gettext('Published')}\n              </button>\n            }\n          </div>\n        </div>\n        <div id=\"main\" className=\"main\" ref=\"main\">\n          <div className=\"cur-view-container\" onMouseMove={onResizeMove} onMouseUp={this.onResizeMouseUp} >\n            <div className='cur-view-content' ref=\"viewContent\" style={{width:(100 - this.state.rightPartWidth) + '%'}}>\n              {this.state.isLoading ?\n                <div className=\"markdown-viewer-render-content article\">\n                  <Loading /> \n                </div> \n                :\n                <div className=\"markdown-viewer-render-content article\">\n                  {this.renderContent()}\n                </div>\n              }\n            </div>\n            <div className=\"cur-view-right-part\" style={{width:(this.state.rightPartWidth) + '%'}}>\n              <div className=\"seafile-comment-resize\" onMouseDown={this.onResizeMouseDown}></div>\n              <div className=\"review-side-panel\">\n                {this.renderNavItems()}\n                <TabContent activeTab={this.state.activeTab}>\n                  <TabPane tabId=\"reviewInfo\">\n                    <div className=\"review-side-panel-body\">\n                      <SidePanelReviewers\n                        reviewers={this.state.reviewers}\n                        toggleAddReviewerDialog={this.toggleAddReviewerDialog}/>\n                      <SidePanelAuthor/>\n                      {draftFileExists &&\n                        <UnresolvedComments number={this.state.unresolvedComments}/>\n                      }\n                      {(this.state.isShowDiff === true && this.state.changedNodes.length > 0) &&\n                      <SidePanelChanges\n                        changedNumber={this.state.changedNodes.length}\n                        scrollToChangedNode={this.scrollToChangedNode}/>\n                      }\n                      <SidePanelOrigin originRepoName={this.state.originRepoName}/>\n                      {draftFileExists &&\n                        <a href={draftLink}><Button color=\"secondary\">{gettext('Edit Draft')}</Button></a>\n                      }\n                    </div>\n                  </TabPane>\n                  <TabPane tabId=\"comments\" className=\"comments\">\n                    <ReviewComments\n                      scrollToQuote={this.scrollToQuote}\n                      getCommentsNumber={this.getCommentsNumber}\n                      commentsNumber={this.state.commentsNumber}\n                      inResizing={false}\n                    />\n                  </TabPane>\n                  <TabPane tabId=\"history\" className=\"history\">\n                    <HistoryList\n                      activeItem={this.state.activeItem}\n                      historyList={this.state.historyList}\n                      totalReversionCount={this.state.totalReversionCount}\n                      onHistoryItemClick={this.onHistoryItemClick}\n                      onHistoryListChange={this.onHistoryListChange}\n                    />\n                  </TabPane>\n                </TabContent>\n              </div>\n            </div>\n          </div>\n        </div>\n        { this.state.showReviewerDialog &&\n          <ModalPortal>\n            <AddReviewerDialog\n              showReviewerDialog={this.state.showReviewerDialog}\n              toggleAddReviewerDialog={this.toggleAddReviewerDialog}\n              draftID={draftID}\n              reviewers={this.state.reviewers}\n            />\n          </ModalPortal>\n        }\n        {this.state.isShowCommentDialog &&\n          <ModalPortal>\n            <ReviewCommentDialog\n              toggleCommentDialog={this.toggleCommentDialog}\n              onCommentAdded={this.onCommentAdded}\n              quote={this.quote}\n              draftID={draftID}\n              newIndex={this.newIndex}\n              oldIndex={this.oldIndex}\n            />\n          </ModalPortal>\n        }\n      </div>\n    );\n  }\n}\n\n\nclass SidePanelReviewers extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"review-side-panel-item\">\n        <div className=\"review-side-panel-header\">{gettext('Reviewers')}\n          <i className=\"fa fa-cog\" onClick={this.props.toggleAddReviewerDialog}></i>\n        </div>\n        { this.props.reviewers.length > 0 ?\n          this.props.reviewers.map((item, index = 0, arr) => {\n            return (\n              <div className=\"reviewer-info\" key={index}>\n                <img className=\"avatar review-side-panel-avatar\" src={item.avatar_url} alt=\"\"/>\n                <span className=\"reviewer-name\">{item.user_name}</span>\n              </div>\n            );\n          })\n          :\n          <span>{gettext('No reviewer yet.')}</span>\n        }\n      </div>\n    );\n  }\n}\n\nconst sidePanelReviewersPropTypes = {\n  reviewers: PropTypes.array.isRequired,\n  toggleAddReviewerDialog: PropTypes.func.isRequired\n};\n\nSidePanelReviewers.propTypes = sidePanelReviewersPropTypes;\n\nclass SidePanelAuthor extends React.Component {\n  render() {\n    return (\n      <div className=\"review-side-panel-item\">\n        <div className=\"review-side-panel-header\">{gettext('Author')}</div>\n        <div className=\"author-info\">\n          <img className=\"avatar review-side-panel-avatar\" src={authorAvatar} alt=\"\"/>\n          <span className=\"author-name\">{author}</span>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass SidePanelOrigin extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"dirent-table-container\">\n        <table className=\"table-thead-hidden\">\n          <thead>\n            <tr><th width=\"25%\"></th><th width=\"75%\"></th></tr>\n          </thead>\n          <tbody>\n            <tr><th>{gettext('Location')}</th><td>{this.props.originRepoName}{draftFilePath}</td></tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nconst SidePanelOriginPropTypes = {\n  originRepoName: PropTypes.string.isRequired\n};\n\nSidePanelOrigin.propTypes = SidePanelOriginPropTypes;\n\n\nclass UnresolvedComments extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"review-side-panel-item\">\n        <div className=\"review-side-panel-header\">{gettext('Comments')}</div>\n        <div className=\"changes-info\">\n          <span>{gettext('Unresolved comments:')}{' '}{this.props.number}</span>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst UnresolvedCommentsPropTypes = {\n  number: PropTypes.number.isRequired\n};\n\nUnresolvedComments.propTypes = UnresolvedCommentsPropTypes;\n\n\nclass SidePanelChanges extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"review-side-panel-item\">\n        <div className=\"review-side-panel-header\">{gettext('Changes')}</div>\n        <div className=\"changes-info\">\n          <span>{gettext('Number of changes:')}{' '}{this.props.changedNumber}</span>\n          { this.props.changedNumber > 0 &&\n            <div>\n              <i className=\"fa fa-arrow-circle-up\" onClick={() => { this.props.scrollToChangedNode('down');}}></i>\n              <i className=\"fa fa-arrow-circle-down\" onClick={() => { this.props.scrollToChangedNode('up');}}></i>\n            </div>\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nconst sidePanelChangesPropTypes = {\n  changedNumber: PropTypes.number.isRequired,\n  scrollToChangedNode: PropTypes.func.isRequired\n};\n\nSidePanelChanges.propTypes = sidePanelChangesPropTypes;\n\n\nReactDOM.render (\n  <Draft />,\n  document.getElementById('wrapper')\n);\n\n\n\n// WEBPACK FOOTER //\n// ./src/draft.js","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { processor } from '../../utils/seafile-markdown2html';\nimport { Button, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { gettext, draftFilePath, draftRepoID } from '../../utils/constants';\nimport Loading from '../../components/loading.js';\nimport reviewComment from '../../models/review-comment.js';\nimport { username } from '../../utils/constants.js';\n\nimport '../../css/review-comments.css';\n\nconst commentPropTypes = {\n  getCommentsNumber: PropTypes.func.isRequired,\n  inResizing: PropTypes.bool.isRequired,\n  commentsNumber: PropTypes.number,\n  scrollToQuote: PropTypes.func.isRequired\n};\n\nclass ReviewComments extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      commentsList: [],\n      inResizing: false,\n      commentFooterHeight: 25,\n      showResolvedComment: true,\n      comment: '',\n    };\n  }\n\n  listComments = (scroll) => {\n    seafileAPI.listComments(draftRepoID, draftFilePath).then((response) => {\n      let commentList = [];\n      response.data.comments.forEach(item => {\n        let commentItem = new reviewComment(item);\n        commentList.push(commentItem);\n      });\n      this.setState({\n        commentsList: commentList\n      });\n      if (scroll) {\n        let that = this;\n        setTimeout(() => {\n          that.refs.commentsList.scrollTo(0, 10000);\n        }, 100);\n      }\n    });\n  }\n\n  handleCommentChange = (event) => {\n    this.setState({\n      comment: event.target.value,\n    });\n  }\n\n  submitComment = () => {\n    let comment = this.state.comment.trim();\n    if (comment.length > 0) {\n      seafileAPI.postComment(draftRepoID, draftFilePath, comment).then((response) => {\n        this.listComments(true);\n        this.props.getCommentsNumber();\n      });\n      this.setState({\n        comment: ''\n      });\n    }\n  }\n\n  resolveComment = (event) => {\n    seafileAPI.updateComment(draftRepoID, event.target.id, 'true').then((res) => {\n      this.props.getCommentsNumber();\n      this.listComments();\n    });\n  }\n\n  editComment = (commentID, newComment) => {\n    seafileAPI.updateComment(draftRepoID, commentID, null, null, newComment).then((res) => {\n      this.props.getCommentsNumber();\n      this.listComments();\n    });\n  }\n\n  toggleResolvedComment = () => {\n    this.setState({\n      showResolvedComment: !this.state.showResolvedComment\n    });\n  }\n\n  deleteComment = (event) => {\n    seafileAPI.deleteComment(draftRepoID, event.target.id).then((res) => {\n      this.props.getCommentsNumber();\n      this.listComments();\n    });\n  }\n\n  onResizeMouseUp = () => {\n    if (this.state.inResizing) {\n      this.setState({\n        inResizing: false\n      });\n    }\n  }\n\n  onResizeMouseDown = () => {\n    this.setState({\n      inResizing: true\n    });\n  };\n\n  onResizeMouseMove = (event) => {\n    let rate = 100 - (event.nativeEvent.clientY - 120 ) / this.refs.comment.clientHeight * 100;\n    if (rate < 20 || rate > 70) {\n      if (rate < 20) {\n        this.setState({\n          commentFooterHeight: 25\n        });\n      }\n      if (rate > 70) {\n        this.setState({\n          commentFooterHeight: 65\n        });\n      }\n      this.setState({\n        inResizing: false\n      });\n      return null;\n    }\n    this.setState({\n      commentFooterHeight: rate\n    });\n  };\n  \n  scrollToQuote = (newIndex, oldIndex, quote) => {\n    this.props.scrollToQuote(newIndex, oldIndex, quote);\n    this.setState({\n      comment: ''\n    });\n  }\n\n  componentWillMount() {\n    this.listComments();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.commentsNumber !== nextProps.commentsNumber) {\n      this.listComments();\n    }\n  }\n\n  render() {\n    const onResizeMove = this.state.inResizing ? this.onResizeMouseMove : null;\n    return (\n      <div className={(this.state.inResizing || this.props.inResizing)?\n        'seafile-comment seafile-comment-resizing' : 'seafile-comment'}\n      onMouseMove={onResizeMove} onMouseUp={this.onResizeMouseUp} ref=\"comment\">\n        <div className=\"seafile-comment-title\">\n          <div className={'seafile-comment-title-text'}>{gettext('Show resolved comments')}</div>\n          <div className={'seafile-comment-title-toggle'}>\n            <label className=\"custom-switch\" id=\"toggle-resolved-comments\">\n              <input type=\"checkbox\" name=\"option\" className=\"custom-switch-input\"\n                onChange={this.toggleResolvedComment}\n                checked={this.state.showResolvedComment && 'checked'}\n              />\n              <span className=\"custom-switch-indicator\"></span>\n            </label>\n          </div>\n        </div>\n        <div style={{height:(100-this.state.commentFooterHeight)+'%'}}>\n          { this.props.commentsNumber == 0 &&\n            <div className={'seafile-comment-list'}>\n              <div className=\"comment-vacant\">{gettext('No comment yet.')}</div>\n            </div>\n          }\n          { (this.state.commentsList.length === 0 && this.props.commentsNumber > 0) &&\n            <div className={'seafile-comment-list'}><Loading/></div>\n          }\n          { this.state.commentsList.length > 0 &&\n            <ul className={'seafile-comment-list'} ref='commentsList'>\n              { (this.state.commentsList.length > 0 && this.props.commentsNumber > 0) &&\n                this.state.commentsList.map((item, index) => {\n                  return (\n                    <CommentItem item={item} showResolvedComment={this.state.showResolvedComment}\n                      resolveComment={this.resolveComment} key={index} editComment={this.editComment}\n                      scrollToQuote={this.scrollToQuote} deleteComment={this.deleteComment}/>\n                  );\n                })\n              }\n            </ul>\n          }\n        </div>\n        <div className=\"seafile-comment-footer\" style={{height:this.state.commentFooterHeight+'%'}}>\n          <div className=\"seafile-comment-row-resize\" onMouseDown={this.onResizeMouseDown}></div>\n          <div className=\"seafile-add-comment\">\n            <textarea className=\"add-comment-input\" value={this.state.comment}\n              placeholder={gettext('Add a comment.')} onChange={this.handleCommentChange}\n              clos=\"100\" rows=\"3\" warp=\"virtual\"></textarea>\n            <Button className=\"comment-btn\" color=\"success\"\n              size=\"sm\" onClick={this.submitComment}>\n              {gettext('Submit')}</Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nReviewComments.propTypes = commentPropTypes;\n\nconst commentItemPropTypes = {\n  item: PropTypes.object.isRequired,\n  deleteComment: PropTypes.func.isRequired,\n  resolveComment: PropTypes.func.isRequired,\n  editComment: PropTypes.func.isRequired,\n  showResolvedComment: PropTypes.bool.isRequired,\n  scrollToQuote: PropTypes.func.isRequired\n};\n\nclass CommentItem extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      dropdownOpen: false,\n      comment: '',\n      quote: '',\n      newComment: this.props.item.comment,\n      editable: false,\n    };\n  }\n\n  toggleDropDownMenu = () => {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen,\n    });\n  }\n\n  convertComment = (item) => {\n    processor.process(item.comment).then(\n      (result) => {\n        let comment = String(result);\n        this.setState({\n          comment: comment\n        });\n      }\n    );\n    processor.process(item.quote).then(\n      (result) => {\n        let quote = String(result);\n        this.setState({\n          quote: quote\n        });\n      }\n    );\n  }\n\n  scrollToQuote = () => {\n    const item = this.props.item;\n    this.props.scrollToQuote(item.newIndex, item.oldIndex, item.quote);\n  }\n\n  toggleEditComment = () => {\n    this.setState({\n      editable: !this.state.editable\n    });\n  }\n\n  updateComment = (event) => {\n    const newComment = this.state.newComment;\n    if (this.props.item.comment !== newComment) {\n      this.props.editComment(event.target.id, newComment);\n    }\n    this.toggleEditComment();\n  }\n\n  handleCommentChange = (event) => {\n    this.setState({\n      newComment: event.target.value,\n    });\n  }\n\n  componentWillMount() {\n    this.convertComment(this.props.item);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.convertComment(nextProps.item);\n  }\n\n  render() {\n    const item = this.props.item;\n    if (item.resolved && !this.props.showResolvedComment) {\n      return null;\n    }\n    if (this.state.editable) {\n      return(\n        <li className=\"seafile-comment-item\" id={item.id}>\n          <div className=\"seafile-comment-info\">\n            <img className=\"avatar\" src={item.avatarUrl} alt=\"\"/>\n            <div className=\"reviewer-info\">\n              <div className=\"reviewer-name\">{item.name}</div>\n              <div className=\"review-time\">{item.time}</div>\n            </div>\n          </div>\n          <div className=\"seafile-edit-comment\">\n            <textarea className=\"edit-comment-input\" value={this.state.newComment} onChange={this.handleCommentChange} clos=\"100\" rows=\"3\" warp=\"virtual\"></textarea>\n            <Button className=\"comment-btn\" color=\"success\" size=\"sm\" onClick={this.updateComment} id={item.id}>{gettext('Update')}</Button>{' '}\n            <Button className=\"comment-btn\" color=\"secondary\" size=\"sm\" onClick={this.toggleEditComment}> {gettext('Cancel')}</Button>\n          </div>\n        </li>\n      );\n    }\n    return (\n      <li className={item.resolved ? 'seafile-comment-item seafile-comment-item-resolved'\n        : 'seafile-comment-item'} id={item.id}>\n        <div className=\"seafile-comment-info\">\n          <img className=\"avatar\" src={item.avatarUrl} alt=\"\"/>\n          <div className=\"reviewer-info\">\n            <div className=\"reviewer-name\">{item.name}</div>\n            <div className=\"review-time\">{item.time}</div>\n          </div>\n          { !item.resolved &&\n            <Dropdown isOpen={this.state.dropdownOpen} size=\"sm\"\n              className=\"seafile-comment-dropdown\" toggle={this.toggleDropDownMenu}>\n              <DropdownToggle className=\"seafile-comment-dropdown-btn\">\n                <i className=\"fas fa-ellipsis-v\"></i>\n              </DropdownToggle>\n              <DropdownMenu>\n                { (item.userEmail === username) &&\n                  <DropdownItem onClick={this.props.deleteComment}\n                    className=\"delete-comment\" id={item.id}>{gettext('Delete')}</DropdownItem>}\n                { (item.userEmail === username) &&\n                  <DropdownItem onClick={this.toggleEditComment}\n                    className=\"edit-comment\" id={item.id}>{gettext('Edit')}</DropdownItem>}\n                <DropdownItem onClick={this.props.resolveComment}\n                  className=\"seafile-comment-resolved\" id={item.id}>{gettext('Mark as resolved')}</DropdownItem>\n              </DropdownMenu>\n            </Dropdown>\n          }\n        </div>\n        { (item.newIndex >= -1 && item.oldIndex >= -1) &&\n          <blockquote className=\"seafile-comment-content\">\n            <div onClick={this.scrollToQuote} dangerouslySetInnerHTML={{ __html: this.state.quote }}></div>\n          </blockquote>\n        }\n        <div className=\"seafile-comment-content\" dangerouslySetInnerHTML={{ __html: this.state.comment }}></div>\n      </li>\n    );\n  }\n}\n\nCommentItem.propTypes = commentItemPropTypes;\n\nexport default ReviewComments;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/review-list-view/review-comments.js","'use strict'\n\n/* Dependencies. */\nvar extend = require('extend')\nvar bail = require('bail')\nvar vfile = require('vfile')\nvar trough = require('trough')\nvar string = require('x-is-string')\nvar plain = require('is-plain-obj')\n\n/* Expose a frozen processor. */\nmodule.exports = unified().freeze()\n\nvar slice = [].slice\nvar own = {}.hasOwnProperty\n\n/* Process pipeline. */\nvar pipeline = trough()\n  .use(pipelineParse)\n  .use(pipelineRun)\n  .use(pipelineStringify)\n\nfunction pipelineParse(p, ctx) {\n  ctx.tree = p.parse(ctx.file)\n}\n\nfunction pipelineRun(p, ctx, next) {\n  p.run(ctx.tree, ctx.file, done)\n\n  function done(err, tree, file) {\n    if (err) {\n      next(err)\n    } else {\n      ctx.tree = tree\n      ctx.file = file\n      next()\n    }\n  }\n}\n\nfunction pipelineStringify(p, ctx) {\n  ctx.file.contents = p.stringify(ctx.tree, ctx.file)\n}\n\n/* Function to create the first processor. */\nfunction unified() {\n  var attachers = []\n  var transformers = trough()\n  var namespace = {}\n  var frozen = false\n  var freezeIndex = -1\n\n  /* Data management. */\n  processor.data = data\n\n  /* Lock. */\n  processor.freeze = freeze\n\n  /* Plug-ins. */\n  processor.attachers = attachers\n  processor.use = use\n\n  /* API. */\n  processor.parse = parse\n  processor.stringify = stringify\n  processor.run = run\n  processor.runSync = runSync\n  processor.process = process\n  processor.processSync = processSync\n\n  /* Expose. */\n  return processor\n\n  /* Create a new processor based on the processor\n   * in the current scope. */\n  function processor() {\n    var destination = unified()\n    var length = attachers.length\n    var index = -1\n\n    while (++index < length) {\n      destination.use.apply(null, attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /* Freeze: used to signal a processor that has finished\n   * configuration.\n   *\n   * For example, take unified itself.  It’s frozen.\n   * Plug-ins should not be added to it.  Rather, it should\n   * be extended, by invoking it, before modifying it.\n   *\n   * In essence, always invoke this when exporting a\n   * processor. */\n  function freeze() {\n    var values\n    var plugin\n    var options\n    var transformer\n\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      values = attachers[freezeIndex]\n      plugin = values[0]\n      options = values[1]\n      transformer = null\n\n      if (options === false) {\n        continue\n      }\n\n      if (options === true) {\n        values[1] = undefined\n      }\n\n      transformer = plugin.apply(processor, values.slice(1))\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Infinity\n\n    return processor\n  }\n\n  /* Data management.\n   * Getter / setter for processor-specific informtion. */\n  function data(key, value) {\n    if (string(key)) {\n      /* Set `key`. */\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n\n        namespace[key] = value\n\n        return processor\n      }\n\n      /* Get `key`. */\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    /* Set space. */\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    /* Get space. */\n    return namespace\n  }\n\n  /* Plug-in management.\n   *\n   * Pass it:\n   * *   an attacher and options,\n   * *   a preset,\n   * *   a list of presets, attachers, and arguments (list\n   *     of attachers and options). */\n  function use(value) {\n    var settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      /* Empty */\n    } else if (typeof value === 'function') {\n      addPlugin.apply(null, arguments)\n    } else if (typeof value === 'object') {\n      if ('length' in value) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new Error('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = extend(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = extend(settings || {}, result.settings)\n      }\n    }\n\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if ('length' in value) {\n          addPlugin.apply(null, value)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new Error('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    function addList(plugins) {\n      var length\n      var index\n\n      if (plugins === null || plugins === undefined) {\n        /* Empty */\n      } else if (typeof plugins === 'object' && 'length' in plugins) {\n        length = plugins.length\n        index = -1\n\n        while (++index < length) {\n          add(plugins[index])\n        }\n      } else {\n        throw new Error('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    function addPlugin(plugin, value) {\n      var entry = find(plugin)\n\n      if (entry) {\n        if (plain(entry[1]) && plain(value)) {\n          value = extend(entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        attachers.push(slice.call(arguments))\n      }\n    }\n  }\n\n  function find(plugin) {\n    var length = attachers.length\n    var index = -1\n    var entry\n\n    while (++index < length) {\n      entry = attachers[index]\n\n      if (entry[0] === plugin) {\n        return entry\n      }\n    }\n  }\n\n  /* Parse a file (in string or VFile representation)\n   * into a Unist node using the `Parser` on the\n   * processor. */\n  function parse(doc) {\n    var file = vfile(doc)\n    var Parser\n\n    freeze()\n    Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser)) {\n      return new Parser(String(file), file).parse()\n    }\n\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /* Run transforms on a Unist node representation of a file\n   * (in string or VFile representation), async. */\n  function run(node, file, cb) {\n    assertNode(node)\n    freeze()\n\n    if (!cb && typeof file === 'function') {\n      cb = file\n      file = null\n    }\n\n    if (!cb) {\n      return new Promise(executor)\n    }\n\n    executor(null, cb)\n\n    function executor(resolve, reject) {\n      transformers.run(node, vfile(file), done)\n\n      function done(err, tree, file) {\n        tree = tree || node\n        if (err) {\n          reject(err)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          cb(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /* Run transforms on a Unist node representation of a file\n   * (in string or VFile representation), sync. */\n  function runSync(node, file) {\n    var complete = false\n    var result\n\n    run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    return result\n\n    function done(err, tree) {\n      complete = true\n      bail(err)\n      result = tree\n    }\n  }\n\n  /* Stringify a Unist node representation of a file\n   * (in string or VFile representation) into a string\n   * using the `Compiler` on the processor. */\n  function stringify(node, doc) {\n    var file = vfile(doc)\n    var Compiler\n\n    freeze()\n    Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler)) {\n      return new Compiler(node, file).compile()\n    }\n\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /* Parse a file (in string or VFile representation)\n   * into a Unist node using the `Parser` on the processor,\n   * then run transforms on that node, and compile the\n   * resulting node using the `Compiler` on the processor,\n   * and store that result on the VFile. */\n  function process(doc, cb) {\n    freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!cb) {\n      return new Promise(executor)\n    }\n\n    executor(null, cb)\n\n    function executor(resolve, reject) {\n      var file = vfile(doc)\n\n      pipeline.run(processor, {file: file}, done)\n\n      function done(err) {\n        if (err) {\n          reject(err)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          cb(null, file)\n        }\n      }\n    }\n  }\n\n  /* Process the given document (in string or VFile\n   * representation), sync. */\n  function processSync(doc) {\n    var complete = false\n    var file\n\n    freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n    file = vfile(doc)\n\n    process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    function done(err) {\n      complete = true\n      bail(err)\n    }\n  }\n}\n\n/* Check if `func` is a constructor. */\nfunction newable(value) {\n  return typeof value === 'function' && keys(value.prototype)\n}\n\n/* Check if `value` is an object with keys. */\nfunction keys(value) {\n  var key\n  for (key in value) {\n    return true\n  }\n  return false\n}\n\n/* Assert a parser is available. */\nfunction assertParser(name, Parser) {\n  if (typeof Parser !== 'function') {\n    throw new Error('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/* Assert a compiler is available. */\nfunction assertCompiler(name, Compiler) {\n  if (typeof Compiler !== 'function') {\n    throw new Error('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/* Assert the processor is not frozen. */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      [\n        'Cannot invoke `' + name + '` on a frozen processor.\\nCreate a new ',\n        'processor first, by invoking it: use `processor()` instead of ',\n        '`processor`.'\n      ].join('')\n    )\n  }\n}\n\n/* Assert `node` is a Unist node. */\nfunction assertNode(node) {\n  if (!node || !string(node.type)) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n}\n\n/* Assert that `complete` is `true`. */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/unified/index.js\n// module id = 1309\n// module chunks = 10","'use strict'\n\nvar VMessage = require('vfile-message')\nvar VFile = require('./core.js')\n\nmodule.exports = VFile\n\nvar proto = VFile.prototype\n\nproto.message = message\nproto.info = info\nproto.fail = fail\n\n/* Slight backwards compatibility.  Remove in the future. */\nproto.warn = message\n\n/* Create a message with `reason` at `position`.\n * When an error is passed in as `reason`, copies the stack. */\nfunction message(reason, position, origin) {\n  var filePath = this.path\n  var message = new VMessage(reason, position, origin)\n\n  if (filePath) {\n    message.name = filePath + ':' + message.name\n    message.file = filePath\n  }\n\n  message.fatal = false\n\n  this.messages.push(message)\n\n  return message\n}\n\n/* Fail. Creates a vmessage, associates it with the file,\n * and throws it. */\nfunction fail() {\n  var message = this.message.apply(this, arguments)\n\n  message.fatal = true\n\n  throw message\n}\n\n/* Info. Creates a vmessage, associates it with the file,\n * and marks the fatality as null. */\nfunction info() {\n  var message = this.message.apply(this, arguments)\n\n  message.fatal = null\n\n  return message\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vfile/index.js\n// module id = 1310\n// module chunks = 10","'use strict'\n\nvar path = require('path')\nvar replace = require('replace-ext')\nvar buffer = require('is-buffer')\n\nmodule.exports = VFile\n\nvar own = {}.hasOwnProperty\nvar proto = VFile.prototype\n\nproto.toString = toString\n\n/* Order of setting (least specific to most), we need this because\n * otherwise `{stem: 'a', path: '~/b.js'}` would throw, as a path\n * is needed before a stem can be set. */\nvar order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\n/* Construct a new file. */\nfunction VFile(options) {\n  var prop\n  var index\n  var length\n\n  if (!options) {\n    options = {}\n  } else if (typeof options === 'string' || buffer(options)) {\n    options = {contents: options}\n  } else if ('message' in options && 'messages' in options) {\n    return options\n  }\n\n  if (!(this instanceof VFile)) {\n    return new VFile(options)\n  }\n\n  this.data = {}\n  this.messages = []\n  this.history = []\n  this.cwd = process.cwd()\n\n  /* Set path related properties in the correct order. */\n  index = -1\n  length = order.length\n\n  while (++index < length) {\n    prop = order[index]\n\n    if (own.call(options, prop)) {\n      this[prop] = options[prop]\n    }\n  }\n\n  /* Set non-path related properties. */\n  for (prop in options) {\n    if (order.indexOf(prop) === -1) {\n      this[prop] = options[prop]\n    }\n  }\n}\n\n/* Access full path (`~/index.min.js`). */\nObject.defineProperty(proto, 'path', {\n  get: function() {\n    return this.history[this.history.length - 1]\n  },\n  set: function(path) {\n    assertNonEmpty(path, 'path')\n\n    if (path !== this.path) {\n      this.history.push(path)\n    }\n  }\n})\n\n/* Access parent path (`~`). */\nObject.defineProperty(proto, 'dirname', {\n  get: function() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  },\n  set: function(dirname) {\n    assertPath(this.path, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n})\n\n/* Access basename (`index.min.js`). */\nObject.defineProperty(proto, 'basename', {\n  get: function() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  },\n  set: function(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n})\n\n/* Access extname (`.js`). */\nObject.defineProperty(proto, 'extname', {\n  get: function() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  },\n  set: function(extname) {\n    var ext = extname || ''\n\n    assertPart(ext, 'extname')\n    assertPath(this.path, 'extname')\n\n    if (ext) {\n      if (ext.charAt(0) !== '.') {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (ext.indexOf('.', 1) !== -1) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = replace(this.path, ext)\n  }\n})\n\n/* Access stem (`index.min`). */\nObject.defineProperty(proto, 'stem', {\n  get: function() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  },\n  set: function(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n})\n\n/* Get the value of the file. */\nfunction toString(encoding) {\n  var value = this.contents || ''\n  return buffer(value) ? value.toString(encoding) : String(value)\n}\n\n/* Assert that `part` is not a path (i.e., does\n * not contain `path.sep`). */\nfunction assertPart(part, name) {\n  if (part.indexOf(path.sep) !== -1) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/* Assert that `part` is not empty. */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/* Assert `path` exists. */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vfile/core.js\n// module id = 1311\n// module chunks = 10","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vfile/node_modules/is-buffer/index.js\n// module id = 1312\n// module chunks = 10","import moment from 'moment';\n\nclass reviewComment {\n\n  constructor(item) {\n    let oldTime = (new Date(item.created_at)).getTime();\n    this.time = moment(oldTime).format('YYYY-MM-DD HH:mm');\n    this.id = item.id;\n    this.avatarUrl = item.avatar_url;\n    this.comment = item.comment;\n    this.name = item.user_name;\n    this.userEmail = item.user_email;\n    this.resolved = item.resolved;\n    if (item.detail) {\n      let detail = JSON.parse(item.detail);\n      this.newIndex = detail.newIndex;\n      this.oldIndex = detail.oldIndex;\n      this.quote = detail.quote;\n    }\n  }\n\n}\n\nexport default reviewComment;\n\n\n// WEBPACK FOOTER //\n// ./src/models/review-comment.js","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'reactstrap';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { gettext, name, draftRepoID, draftFilePath } from '../../utils/constants';\nimport { processor } from '../../utils/seafile-markdown2html';\n\nimport '../../css/review-comment-dialog.css';\n\nconst commentDialogPropTypes = {\n  onCommentAdded: PropTypes.func.isRequired,\n  toggleCommentDialog: PropTypes.func.isRequired,\n  quote: PropTypes.string,\n  newIndex: PropTypes.number,\n  oldIndex: PropTypes.number,\n  draftID: PropTypes.string,\n};\n\nclass ReviewCommentDialog extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      comment: '',\n      quote: '',\n    };\n  }\n\n  handleCommentChange = (event) => {\n    let comment = event.target.value;\n    this.setState({\n      comment: comment\n    });\n  }\n\n  submitComment = () => {\n    let comment = this.state.comment.trim();\n    if (comment.length > 0) {\n      if (this.props.quote.length > 0) {\n        let detail = {\n          quote: this.props.quote,\n          newIndex: this.props.newIndex,\n          oldIndex: this.props.oldIndex\n        };\n        let detailJSON = JSON.stringify(detail);\n        seafileAPI.postComment(draftRepoID, draftFilePath, comment, detailJSON).then((response) => {\n          this.props.onCommentAdded();\n        });\n      }\n      else {\n        seafileAPI.postComment(draftRepoID, draftFilePath, comment).then((response) => {\n          this.props.onCommentAdded();\n        });\n      }\n      this.setState({\n        comment: ''\n      });\n    }\n  }\n\n  setQuoteText = (mdQuote) => {\n    processor.process(mdQuote).then(\n      (result) => {\n        let quote = String(result);\n        this.setState({\n          quote: quote\n        });\n      }\n    );\n  }\n\n  componentDidMount() {\n    this.setQuoteText(this.props.quote);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.quote !== nextProps.quote) {\n      this.setQuoteText(nextProps.quote);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"review-comment-dialog\">\n        <div>{name}</div>\n        <blockquote className=\"review-comment-dialog-quote\">\n          <div dangerouslySetInnerHTML={{ __html: this.state.quote}}></div>\n        </blockquote>\n        <textarea value={this.state.comment} onChange={this.handleCommentChange}></textarea>\n        <div className=\"button-group\">\n          <Button size=\"sm\" color=\"primary\" onClick={this.submitComment}>{gettext('Submit')}</Button>\n          <Button size=\"sm\" color=\"secondary\" onClick={this.props.toggleCommentDialog}>{gettext('Cancel')}</Button>\n        </div>\n        <span className=\"review-comment-dialog-triangle\"></span>\n      </div>\n    );\n  }\n}\n\nReviewCommentDialog.propTypes = commentDialogPropTypes;\n\nexport default ReviewCommentDialog;\n\n\n// WEBPACK FOOTER //\n// ./src/components/review-list-view/review-comment-dialog.js","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gettext } from '../../utils/constants';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { seafileAPI } from '../../utils/seafile-api.js';\nimport UserSelect from '../user-select.js';\nimport '../../css/add-reviewer-dialog.css';\n\nconst propTypes = {\n  showReviewerDialog: PropTypes.bool.isRequired,\n  draftID: PropTypes.string.isRequired,\n  toggleAddReviewerDialog: PropTypes.func.isRequired,\n  reviewers: PropTypes.array.isRequired\n};\n\nclass AddReviewerDialog extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      reviewers: this.props.reviewers,\n      selectedOption: null,\n      errorMsg: [],\n      loading: false,\n    };\n    this.Options = [];\n  }\n\n  listReviewers = () => {\n    seafileAPI.listDraftReviewers(this.props.draftID).then((res) => {\n      this.setState({\n        reviewers: res.data.reviewers\n      });\n    });\n  }\n\n  handleSelectChange = (option) => {\n    this.setState({\n      selectedOption: option,\n    });\n    this.Options = [];\n  }\n\n  addReviewers = () => {\n    if (this.state.selectedOption.length > 0 ) {\n      this.refs.reviewSelect.clearSelect();\n      let reviewers = [];\n      for (let i = 0; i < this.state.selectedOption.length; i ++) {\n        reviewers[i] = this.state.selectedOption[i].email;\n      }\n      this.setState({\n        loading: true,\n        errorMsg: [],\n      });\n      seafileAPI.addDraftReviewers(this.props.draftID, reviewers).then((res) => {\n        if (res.data.failed.length > 0) {\n          let errorMsg = [];\n          for (let i = 0 ; i < res.data.failed.length ; i++) {\n            errorMsg[i] = res.data.failed[i];\n          }\n          this.setState({\n            errorMsg: errorMsg\n          });\n        }\n        this.setState({\n          selectedOption: null,\n          loading: false\n        });\n        if (res.data.success.length > 0) {\n          this.listReviewers();\n        }\n      });\n    }\n  }\n\n  deleteReviewer = (event) => {\n    let reviewer = event.target.getAttribute('name');\n    seafileAPI.deleteDraftReviewer(this.props.draftID, reviewer).then((res) => {\n      if (res.data === 200) {\n        let newReviewers = [];\n        for (let i = 0; i < this.state.reviewers.length; i ++) {\n          if (this.state.reviewers[i].user_email !== reviewer) {\n            newReviewers.push(this.state.reviewers[i]);\n          }\n        }\n        this.setState({\n          reviewers: newReviewers\n        });\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Modal isOpen={true} toggle={this.props.toggleAddReviewerDialog}>\n        <ModalHeader>{gettext('Request a review')}</ModalHeader>\n        <ModalBody >\n          <p>{gettext('Add new reviewer')}</p>\n          <div className='add-reviewer'>\n            <UserSelect\n              placeholder={gettext('Select users...')}\n              onSelectChange={this.handleSelectChange}\n              ref=\"reviewSelect\"\n              isMulti={true}\n              className='reviewer-select'\n            />\n            {(this.state.selectedOption && !this.state.loading)?\n              <Button color=\"secondary\" onClick={this.addReviewers}>{gettext('Submit')}</Button> :\n              <Button color=\"secondary\" disabled>{gettext('Submit')}</Button>\n            }\n          </div>\n          {this.state.errorMsg.length > 0 &&\n            this.state.errorMsg.map((item, index = 0, arr) => {\n              return (\n                <p className=\"reviewer-select-error error\" key={index}>{this.state.errorMsg[index].email}\n                  {': '}{this.state.errorMsg[index].error_msg}</p>\n              );\n            })\n          }\n          { this.state.reviewers.length > 0 &&\n            this.state.reviewers.map((item, index = 0, arr) => {\n              return (\n                <div className=\"reviewer-select-info\" key={index}>\n                  <div>\n                    <img className=\"avatar reviewer-select-avatar\" src={item.avatar_url} alt=\"\"/>\n                    <span className=\"reviewer-select-name\">{item.user_name}</span>\n                  </div>\n                  <i className=\"fa fa-times\" name={item.user_email} onClick={this.deleteReviewer}></i>\n                </div>\n              );\n            })\n          }\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={this.props.toggleAddReviewerDialog}>\n            {gettext('Close')}</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nAddReviewerDialog.propTypes = propTypes;\n\nexport default AddReviewerDialog;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/dialog/add-reviewer-dialog.js","/* eslint-disable linebreak-style */\nimport React from 'react';\nimport axios from 'axios';\nimport Loading from '../../components/loading';\nimport moment from 'moment';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { draftOriginRepoID, draftFilePath, draftOriginFilePath } from '../../utils/constants';\n\nimport '../../css/file-history.css';\n\nmoment.locale(window.app.config.lang);\n\nclass HistoryList extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.perPage = 25;\n    this.state = {\n      currentPage: 1,\n      loading: false\n    };\n  }\n\n  onClick = (event, key, preItem, currentItem)=> {\n    if (key === this.state.activeItem) return false;\n    this.props.onHistoryItemClick(currentItem, preItem, key);\n  }\n\n  onScroll = (event) => {\n    const clientHeight = event.target.clientHeight;\n    const scrollHeight = event.target.scrollHeight;\n    const scrollTop    = event.target.scrollTop;\n    const isBottom = (clientHeight + scrollTop + 1 >= scrollHeight);\n    if (isBottom) {\n      if (this.props.totalReversionCount > this.perPage * this.state.currentPage) {\n        let currentPage = this.state.currentPage + 1;\n        this.setState({\n          currentPage: currentPage,\n          loading : true\n        });\n        seafileAPI.listFileHistoryRecords(draftOriginRepoID, draftFilePath, currentPage, this.perPage).then((res) => {\n          let currentHistoryList = Object.assign([], this.props.historyList);\n          this.props.onHistoryListChange([...currentHistoryList, ...res.data.data]);\n          this.setState({\n            loading : false\n          });\n        });\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"history-body\">\n        <ul onScroll={this.onScroll} className={'history-list-container'}>\n          {\n            this.props.historyList ?\n              this.props.historyList.map((item, index = 0, arr) => {\n                let preItemIndex = index + 1;\n                if (preItemIndex === arr.length) {\n                  preItemIndex = index;\n                }\n                return (\n                  <HistoryItem\n                    onClick={this.onClick}\n                    ctime={item.ctime}\n                    className={this.props.activeItem === index ? 'item-active': ''}\n                    name={item.creator_name}\n                    index={index}\n                    key={index}\n                    preItem={arr[preItemIndex]}\n                    currentItem={item}\n                  />\n                );\n              }) : <Loading/>\n          }\n          {\n            this.state.loading &&\n            <li className={'reloading-reversion'}><Loading /></li>\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n\nclass HistoryItem extends React.Component {\n  render() {\n    let time = moment.parseZone(this.props.ctime).format('YYYY-MM-DD HH:mm');\n    return (\n      <li onClick={(event) => this.props.onClick(event, this.props.index, this.props.preItem, this.props.currentItem)} className={'history-list-item ' + this.props.className}>\n        <div className=\"history-info\">\n          <div className=\"time\">{time}</div>\n          <div className=\"owner\"><i className=\"squire-icon\"/><span>{this.props.name}</span></div>\n        </div>\n      </li>\n    );\n  }\n}\n\n\nexport default HistoryList;\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/review/history-list.js","export const dirPath = '/';\nexport const gettext = window.gettext;\n\nexport const siteRoot = window.app.config.siteRoot;\nexport const loginUrl = window.app.config.loginUrl;\nexport const avatarInfo = window.app.config.avatarInfo;\nexport const logoPath =  window.app.config.logoPath;\nexport const mediaUrl = window.app.config.mediaUrl;\nexport const siteTitle = window.app.config.siteTitle;\nexport const siteName = window.app.config.siteName;\nexport const logoWidth = window.app.config.logoWidth;\nexport const logoHeight = window.app.config.logoHeight;\nexport const isPro = window.app.config.isPro === 'True';\nexport const isDocs = window.app.config.isDocs === 'True';\nexport const lang = window.app.config.lang;\nexport const fileServerRoot = window.app.config.fileServerRoot;\nexport const seafileVersion = window.app.config.seafileVersion;\nexport const serviceURL = window.app.config.serviceURL;\n\n//pageOptions\nexport const seafileCollabServer = window.app.pageOptions.seafileCollabServer;\nexport const name = window.app.pageOptions.name;\nexport const contactEmail = window.app.pageOptions.contactEmail;\nexport const username = window.app.pageOptions.username;\nexport const canAddRepo = window.app.pageOptions.canAddRepo;\nexport const canGenerateShareLink = window.app.pageOptions.canGenerateShareLink;\nexport const canGenerateUploadLink = window.app.pageOptions.canGenerateUploadLink ? true : false;\nexport const canViewOrg = window.app.pageOptions.canViewOrg === 'True';\nexport const fileAuditEnabled = window.app.pageOptions.fileAuditEnabled ? true : false;\nexport const enableFileComment = window.app.pageOptions.enableFileComment ? true : false;\nexport const folderPermEnabled = window.app.pageOptions.folderPermEnabled === 'True';\nexport const enableResetEncryptedRepoPassword = window.app.pageOptions.enableResetEncryptedRepoPassword === 'True';\nexport const isEmailConfigured = window.app.pageOptions.isEmailConfigured === 'True';\nexport const enableUploadFolder = window.app.pageOptions.enableUploadFolder === 'True';\nexport const enableResumableFileUpload = window.app.pageOptions.enableResumableFileUpload === 'True';\nexport const storages = window.app.pageOptions.storages; // storage backends\nexport const enableRepoSnapshotLabel = window.app.pageOptions.enableRepoSnapshotLabel;\nexport const shareLinkExpireDaysMin = window.app.pageOptions.shareLinkExpireDaysMin;\nexport const shareLinkExpireDaysMax = window.app.pageOptions.shareLinkExpireDaysMax;\nexport const maxFileName = window.app.pageOptions.maxFileName;\nexport const enableWiki = window.app.pageOptions.enableWiki;\nexport const enableEncryptedLibrary = window.app.pageOptions.enableEncryptedLibrary;\nexport const enableRepoHistorySetting = window.app.pageOptions.enableRepoHistorySetting;\nexport const isSystemStaff = window.app.pageOptions.isSystemStaff;\nexport const thumbnailSizeForOriginal = window.app.pageOptions.thumbnailSizeForOriginal;\nexport const repoPasswordMinLength = window.app.pageOptions.repoPasswordMinLength;\n\nexport const curNoteMsg = window.app.pageOptions.curNoteMsg;\nexport const curNoteID = window.app.pageOptions.curNoteID;\n\n// wiki\nexport const slug = window.wiki ? window.wiki.config.slug : '';\nexport const repoID = window.wiki ? window.wiki.config.repoId : '';\nexport const initialPath = window.wiki ? window.wiki.config.initial_path : '';\nexport const permission = window.wiki ? window.wiki.config.permission === 'True' : '';\nexport const isDir = window.wiki ? window.wiki.config.isDir : '';\nexport const serviceUrl = window.wiki ? window.wiki.config.serviceUrl : '';\nexport const isPublicWiki = window.wiki ? window.wiki.config.isPublicWiki === 'True': '';\n\n// file history\nexport const PER_PAGE = 25;\nexport const historyRepoID = window.fileHistory ? window.fileHistory.pageOptions.repoID : '';\nexport const repoName = window.fileHistory ? window.fileHistory.pageOptions.repoName : '';\nexport const filePath = window.fileHistory ? window.fileHistory.pageOptions.filePath : '';\nexport const fileName = window.fileHistory ? window.fileHistory.pageOptions.fileName : '';\n\n// Draft review\nexport const draftFilePath = window.draft ? window.draft.config.draftFilePath: '';\nexport const draftOriginFilePath = window.draft ? window.draft.config.draftOriginFilePath: '';\nexport const draftFileName = window.draft ? window.draft.config.draftFileName: '';\nexport const draftID = window.draft ? window.draft.config.draftID : '';\nexport const draftRepoID = window.draft ? window.draft.config.draftRepoID : '';\nexport const author = window.draft ? window.draft.config.author : '';\nexport const authorAvatar = window.draft ? window.draft.config.authorAvatar : '';\nexport const originFileExists = window.draft ? window.draft.config.originFileExists : '';\nexport const draftFileExists = window.draft ? window.draft.config.draftFileExists : '';\nexport const draftStatus = window.draft ? window.draft.config.draftStatus : '';\nexport const draftPublishVersion = window.draft ? window.draft.config.draftPublishVersion : '';\nexport const originFileVersion = window.draft ? window.draft.config.originFileVersion : '';\n\n// org admin\nexport const orgID = window.org ? window.org.pageOptions.orgID : '';\nexport const invitationLink = window.org ? window.org.pageOptions.invitationLink : '';\nexport const orgMemberQuotaEnabled = window.org ? window.org.pageOptions.orgMemberQuotaEnabled : '';\n\n// sys admin\nexport const constanceEnabled = window.sysadmin ? window.sysadmin.pageOptions.constance_enabled : '';\nexport const multiTenancy = window.sysadmin ? window.sysadmin.pageOptions.multi_tenancy : '';\nexport const multiInstitution = window.sysadmin ? window.sysadmin.pageOptions.multi_institution : '';\nexport const sysadminExtraEnabled = window.sysadmin ? window.sysadmin.pageOptions.sysadmin_extra_enabled : '';\nexport const enableGuestInvitation = window.sysadmin ? window.sysadmin.pageOptions.enable_guest_invitation : '';\nexport const enableTermsAndConditions = window.sysadmin ? window.sysadmin.pageOptions.enable_terms_and_conditions : '';\nexport const isDefaultAdmin = window.sysadmin ? window.sysadmin.pageOptions.is_default_admin : '';\nexport const enableFileScan = window.sysadmin ? window.sysadmin.pageOptions.enable_file_scan : '';\nexport const canViewSystemInfo = window.sysadmin ? window.sysadmin.pageOptions.admin_permissions.can_view_system_info : '';\nexport const canViewStatistic = window.sysadmin ? window.sysadmin.pageOptions.admin_permissions.can_view_statistic : '';\nexport const canConfigSystem = window.sysadmin ? window.sysadmin.pageOptions.admin_permissions.can_config_system : '';\nexport const canManageLibrary = window.sysadmin ? window.sysadmin.pageOptions.admin_permissions.can_manage_library : '';\nexport const canManageUser = window.sysadmin ? window.sysadmin.pageOptions.admin_permissions.can_manage_user : '';\nexport const canManageGroup = window.sysadmin ? window.sysadmin.pageOptions.admin_permissions.can_manage_group : '';\nexport const canViewUserLog = window.sysadmin ? window.sysadmin.pageOptions.admin_permissions.can_view_user_log : '';\nexport const canViewAdminLog = window.sysadmin ? window.sysadmin.pageOptions.admin_permissions.can_view_admin_log : '';\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/constants.js","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AsyncSelect from 'react-select/lib/Async';\nimport { seafileAPI } from '../utils/seafile-api.js';\nimport { gettext } from '../utils/constants';\n\nconst propTypes = {\n  placeholder: PropTypes.string.isRequired,\n  onSelectChange: PropTypes.func.isRequired,\n  isMulti: PropTypes.bool.isRequired,\n  className: PropTypes.string,\n};\n\nconst NoOptionsMessage = (props) => {\n  return (\n    <div {...props.innerProps} style={{margin: '6px 10px', textAlign: 'center', color: 'hsl(0,0%,50%)'}}>{gettext('User not found')}</div>\n  );\n};\n\nclass UserSelect extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.options = [];\n  }\n\n  handleSelectChange = (option) => {\n    this.options = [];\n    this.props.onSelectChange(option);\n  }\n\n  loadOptions = (input, callback) => {\n    const value = input.trim();\n    if (value.length > 0) {\n      seafileAPI.searchUsers(value).then((res) => {\n        this.options = [];\n        for (let i = 0 ; i < res.data.users.length; i++) {\n          const item = res.data.users[i];\n          let obj = {};\n          obj.value = item.name;\n          obj.email = item.email;\n          obj.label =\n            <React.Fragment>\n              <img src={item.avatar_url} className=\"select-module select-module-icon avatar\" alt=\"\"/>\n              <span className='select-module select-module-name'>{item.name}</span>\n            </React.Fragment>;\n          this.options.push(obj);\n        }\n        callback(this.options);\n      });\n    }\n  }\n\n  clearSelect = () => {\n    this.refs.userSelect.select.onChange([], { action: 'clear' });\n  }\n\n  render() {\n    return (\n      <AsyncSelect\n        isClearable\n        classNamePrefix\n        components={{ NoOptionsMessage }}\n        isMulti={this.props.isMulti}\n        loadOptions={this.loadOptions}\n        onChange={this.handleSelectChange}\n        placeholder={this.props.placeholder}\n        className={`user-select ${this.props.className}`}\n        ref=\"userSelect\"\n      />\n    );\n  }\n}\n\nUserSelect.propTypes = propTypes;\n\nexport default UserSelect;\n\n\n// WEBPACK FOOTER //\n// ./src/components/user-select.js","require('prismjs/components/prism-c.min');\nrequire('prismjs/components/prism-cpp.min');\nrequire('prismjs/components/prism-csharp.min');\nrequire('prismjs/components/prism-java.min');\nrequire('prismjs/components/prism-python.min');\nrequire('prismjs/components/prism-sql.min');\nrequire('prismjs/components/prism-swift.min');\n\nrequire('prismjs/themes/prism.css');\nrequire('prismjs/plugins/toolbar/prism-toolbar.css');\nrequire('prismjs/plugins/line-numbers/prism-line-numbers.css');\nrequire('prismjs/plugins/toolbar/prism-toolbar.min');\nrequire('prismjs/plugins/show-language/prism-show-language.min');\nrequire('prismjs/plugins/line-numbers/prism-line-numbers.min');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@seafile/seafile-editor/dist/editor/code-hight-package.js\n// module id = 288\n// module chunks = 0 10 11","Prism.languages.c=Prism.languages.extend(\"clike\",{keyword:/\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,operator:/-[>-]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/]/,number:/(?:\\b0x[\\da-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]*/i}),Prism.languages.insertBefore(\"c\",\"string\",{macro:{pattern:/(^\\s*)#\\s*[a-z]+(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n|[\\s\\S]))*/im,lookbehind:!0,alias:\"property\",inside:{string:{pattern:/(#\\s*include\\s*)(?:<.+?>|(\"|')(?:\\\\?.)+?\\2)/,lookbehind:!0},directive:{pattern:/(#\\s*)\\b(?:define|defined|elif|else|endif|error|ifdef|ifndef|if|import|include|line|pragma|undef|using)\\b/,lookbehind:!0,alias:\"keyword\"}}},constant:/\\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\\b/}),delete Prism.languages.c[\"class-name\"],delete Prism.languages.c[\"boolean\"];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prismjs/components/prism-c.min.js\n// module id = 289\n// module chunks = 0 10 11","Prism.languages.cpp=Prism.languages.extend(\"c\",{keyword:/\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|class|compl|const|constexpr|const_cast|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/,\"boolean\":/\\b(?:true|false)\\b/,operator:/--?|\\+\\+?|!=?|<{1,2}=?|>{1,2}=?|->|:{1,2}|={1,2}|\\^|~|%|&{1,2}|\\|\\|?|\\?|\\*|\\/|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/}),Prism.languages.insertBefore(\"cpp\",\"keyword\",{\"class-name\":{pattern:/(class\\s+)\\w+/i,lookbehind:!0}}),Prism.languages.insertBefore(\"cpp\",\"string\",{\"raw-string\":{pattern:/R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,alias:\"string\",greedy:!0}});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prismjs/components/prism-cpp.min.js\n// module id = 290\n// module chunks = 0 10 11","Prism.languages.csharp=Prism.languages.extend(\"clike\",{keyword:/\\b(?:abstract|add|alias|as|ascending|async|await|base|bool|break|byte|case|catch|char|checked|class|const|continue|decimal|default|delegate|descending|do|double|dynamic|else|enum|event|explicit|extern|false|finally|fixed|float|for|foreach|from|get|global|goto|group|if|implicit|in|int|interface|internal|into|is|join|let|lock|long|namespace|new|null|object|operator|orderby|out|override|params|partial|private|protected|public|readonly|ref|remove|return|sbyte|sealed|select|set|short|sizeof|stackalloc|static|string|struct|switch|this|throw|true|try|typeof|uint|ulong|unchecked|unsafe|ushort|using|value|var|virtual|void|volatile|where|while|yield)\\b/,string:[{pattern:/@(\"|')(?:\\1\\1|\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,greedy:!0},{pattern:/(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*?\\1/,greedy:!0}],\"class-name\":[{pattern:/\\b[A-Z]\\w*(?:\\.\\w+)*\\b(?=\\s+\\w+)/,inside:{punctuation:/\\./}},{pattern:/(\\[)[A-Z]\\w*(?:\\.\\w+)*\\b/,lookbehind:!0,inside:{punctuation:/\\./}},{pattern:/(\\b(?:class|interface)\\s+[A-Z]\\w*(?:\\.\\w+)*\\s*:\\s*)[A-Z]\\w*(?:\\.\\w+)*\\b/,lookbehind:!0,inside:{punctuation:/\\./}},{pattern:/((?:\\b(?:class|interface|new)\\s+)|(?:catch\\s+\\())[A-Z]\\w*(?:\\.\\w+)*\\b/,lookbehind:!0,inside:{punctuation:/\\./}}],number:/\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)f?/i}),Prism.languages.insertBefore(\"csharp\",\"class-name\",{\"generic-method\":{pattern:/\\w+\\s*<[^>\\r\\n]+?>\\s*(?=\\()/,inside:{\"function\":/^\\w+/,\"class-name\":{pattern:/\\b[A-Z]\\w*(?:\\.\\w+)*\\b/,inside:{punctuation:/\\./}},keyword:Prism.languages.csharp.keyword,punctuation:/[<>(),.:]/}},preprocessor:{pattern:/(^\\s*)#.*/m,lookbehind:!0,alias:\"property\",inside:{directive:{pattern:/(\\s*#)\\b(?:define|elif|else|endif|endregion|error|if|line|pragma|region|undef|warning)\\b/,lookbehind:!0,alias:\"keyword\"}}}}),Prism.languages.dotnet=Prism.languages.csharp;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prismjs/components/prism-csharp.min.js\n// module id = 291\n// module chunks = 0 10 11","Prism.languages.java=Prism.languages.extend(\"clike\",{keyword:/\\b(?:abstract|continue|for|new|switch|assert|default|goto|package|synchronized|boolean|do|if|private|this|break|double|implements|protected|throw|byte|else|import|public|throws|case|enum|instanceof|return|transient|catch|extends|int|short|try|char|final|interface|static|void|class|finally|long|strictfp|volatile|const|float|native|super|while)\\b/,number:/\\b0b[01]+\\b|\\b0x[\\da-f]*\\.?[\\da-fp-]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?[df]?/i,operator:{pattern:/(^|[^.])(?:\\+[+=]?|-[-=]?|!=?|<<?=?|>>?>?=?|==?|&[&=]?|\\|[|=]?|\\*=?|\\/=?|%=?|\\^=?|[?:~])/m,lookbehind:!0}}),Prism.languages.insertBefore(\"java\",\"function\",{annotation:{alias:\"punctuation\",pattern:/(^|[^.])@\\w+/,lookbehind:!0}}),Prism.languages.insertBefore(\"java\",\"class-name\",{generics:{pattern:/<\\s*\\w+(?:\\.\\w+)?(?:\\s*,\\s*\\w+(?:\\.\\w+)?)*>/i,alias:\"function\",inside:{keyword:Prism.languages.java.keyword,punctuation:/[<>(),.:]/}}});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prismjs/components/prism-java.min.js\n// module id = 292\n// module chunks = 0 10 11","Prism.languages.python={comment:{pattern:/(^|[^\\\\])#.*/,lookbehind:!0},\"triple-quoted-string\":{pattern:/(\"\"\"|''')[\\s\\S]+?\\1/,greedy:!0,alias:\"string\"},string:{pattern:/(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0},\"function\":{pattern:/((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,lookbehind:!0},\"class-name\":{pattern:/(\\bclass\\s+)\\w+/i,lookbehind:!0},keyword:/\\b(?:as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|pass|print|raise|return|try|while|with|yield)\\b/,builtin:/\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\"boolean\":/\\b(?:True|False|None)\\b/,number:/(?:\\b(?=\\d)|\\B(?=\\.))(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*\\.?\\d*|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,operator:/[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not)\\b/,punctuation:/[{}[\\];(),.:]/};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prismjs/components/prism-python.min.js\n// module id = 293\n// module chunks = 0 10 11","Prism.languages.sql={comment:{pattern:/(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,lookbehind:!0},string:{pattern:/(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2/,greedy:!0,lookbehind:!0},variable:/@[\\w.$]+|@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\"function\":/\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,keyword:/\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURNS?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\"boolean\":/\\b(?:TRUE|FALSE|NULL)\\b/i,number:/\\b0x[\\da-f]+\\b|\\b\\d+\\.?\\d*|\\B\\.\\d+\\b/i,operator:/[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|IN|LIKE|NOT|OR|IS|DIV|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,punctuation:/[;[\\]()`,.]/};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prismjs/components/prism-sql.min.js\n// module id = 294\n// module chunks = 0 10 11","Prism.languages.swift=Prism.languages.extend(\"clike\",{string:{pattern:/(\"|')(\\\\(?:\\((?:[^()]|\\([^)]+\\))+\\)|\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0,inside:{interpolation:{pattern:/\\\\\\((?:[^()]|\\([^)]+\\))+\\)/,inside:{delimiter:{pattern:/^\\\\\\(|\\)$/,alias:\"variable\"}}}}},keyword:/\\b(?:as|associativity|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic(?:Type)?|else|enum|extension|fallthrough|final|for|func|get|guard|if|import|in|infix|init|inout|internal|is|lazy|left|let|mutating|new|none|nonmutating|operator|optional|override|postfix|precedence|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|Self|set|static|struct|subscript|super|switch|throws?|try|Type|typealias|unowned|unsafe|var|weak|where|while|willSet|__(?:COLUMN__|FILE__|FUNCTION__|LINE__))\\b/,number:/\\b(?:[\\d_]+(?:\\.[\\de_]+)?|0x[a-f0-9_]+(?:\\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\b/i,constant:/\\b(?:nil|[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\\b/,atrule:/@\\b(?:IB(?:Outlet|Designable|Action|Inspectable)|class_protocol|exported|noreturn|NS(?:Copying|Managed)|objc|UIApplicationMain|auto_closure)\\b/,builtin:/\\b(?:[A-Z]\\S+|abs|advance|alignof(?:Value)?|assert|contains|count(?:Elements)?|debugPrint(?:ln)?|distance|drop(?:First|Last)|dump|enumerate|equal|filter|find|first|getVaList|indices|isEmpty|join|last|lexicographicalCompare|map|max(?:Element)?|min(?:Element)?|numericCast|overlaps|partition|print(?:ln)?|reduce|reflect|reverse|sizeof(?:Value)?|sort(?:ed)?|split|startsWith|stride(?:of(?:Value)?)?|suffix|swap|toDebugString|toString|transcode|underestimateCount|unsafeBitCast|with(?:ExtendedLifetime|Unsafe(?:MutablePointers?|Pointers?)|VaList))\\b/}),Prism.languages.swift.string.inside.interpolation.inside.rest=Prism.languages.swift;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prismjs/components/prism-swift.min.js\n// module id = 295\n// module chunks = 0 10 11","!function(){if(\"undefined\"!=typeof self&&self.Prism&&self.document){var t=[],e={},n=function(){};Prism.plugins.toolbar={};var a=Prism.plugins.toolbar.registerButton=function(n,a){var o;o=\"function\"==typeof a?a:function(t){var e;return\"function\"==typeof a.onClick?(e=document.createElement(\"button\"),e.type=\"button\",e.addEventListener(\"click\",function(){a.onClick.call(this,t)})):\"string\"==typeof a.url?(e=document.createElement(\"a\"),e.href=a.url):e=document.createElement(\"span\"),e.textContent=a.text,e},t.push(e[n]=o)},o=Prism.plugins.toolbar.hook=function(a){var o=a.element.parentNode;if(o&&/pre/i.test(o.nodeName)&&!o.parentNode.classList.contains(\"code-toolbar\")){var r=document.createElement(\"div\");r.classList.add(\"code-toolbar\"),o.parentNode.insertBefore(r,o),r.appendChild(o);var i=document.createElement(\"div\");i.classList.add(\"toolbar\"),document.body.hasAttribute(\"data-toolbar-order\")&&(t=document.body.getAttribute(\"data-toolbar-order\").split(\",\").map(function(t){return e[t]||n})),t.forEach(function(t){var e=t(a);if(e){var n=document.createElement(\"div\");n.classList.add(\"toolbar-item\"),n.appendChild(e),i.appendChild(n)}}),r.appendChild(i)}};a(\"label\",function(t){var e=t.element.parentNode;if(e&&/pre/i.test(e.nodeName)&&e.hasAttribute(\"data-label\")){var n,a,o=e.getAttribute(\"data-label\");try{a=document.querySelector(\"template#\"+o)}catch(r){}return a?n=a.content:(e.hasAttribute(\"data-url\")?(n=document.createElement(\"a\"),n.href=e.getAttribute(\"data-url\")):n=document.createElement(\"span\"),n.textContent=o),n}}),Prism.hooks.add(\"complete\",o)}}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prismjs/plugins/toolbar/prism-toolbar.min.js\n// module id = 298\n// module chunks = 0 10 11","!function(){if(\"undefined\"!=typeof self&&self.Prism&&self.document){if(!Prism.plugins.toolbar)return console.warn(\"Show Languages plugin loaded before Toolbar plugin.\"),void 0;var e={html:\"HTML\",xml:\"XML\",svg:\"SVG\",mathml:\"MathML\",css:\"CSS\",clike:\"C-like\",javascript:\"JavaScript\",abap:\"ABAP\",actionscript:\"ActionScript\",apacheconf:\"Apache Configuration\",apl:\"APL\",applescript:\"AppleScript\",arff:\"ARFF\",asciidoc:\"AsciiDoc\",asm6502:\"6502 Assembly\",aspnet:\"ASP.NET (C#)\",autohotkey:\"AutoHotkey\",autoit:\"AutoIt\",basic:\"BASIC\",csharp:\"C#\",cpp:\"C++\",coffeescript:\"CoffeeScript\",csp:\"Content-Security-Policy\",\"css-extras\":\"CSS Extras\",django:\"Django/Jinja2\",erb:\"ERB\",fsharp:\"F#\",gedcom:\"GEDCOM\",glsl:\"GLSL\",graphql:\"GraphQL\",http:\"HTTP\",hpkp:\"HTTP Public-Key-Pins\",hsts:\"HTTP Strict-Transport-Security\",ichigojam:\"IchigoJam\",inform7:\"Inform 7\",json:\"JSON\",latex:\"LaTeX\",livescript:\"LiveScript\",lolcode:\"LOLCODE\",\"markup-templating\":\"Markup templating\",matlab:\"MATLAB\",mel:\"MEL\",n4js:\"N4JS\",nasm:\"NASM\",nginx:\"nginx\",nsis:\"NSIS\",objectivec:\"Objective-C\",ocaml:\"OCaml\",opencl:\"OpenCL\",parigp:\"PARI/GP\",objectpascal:\"Object Pascal\",php:\"PHP\",\"php-extras\":\"PHP Extras\",plsql:\"PL/SQL\",powershell:\"PowerShell\",properties:\".properties\",protobuf:\"Protocol Buffers\",q:\"Q (kdb+ database)\",jsx:\"React JSX\",tsx:\"React TSX\",renpy:\"Ren'py\",rest:\"reST (reStructuredText)\",sas:\"SAS\",sass:\"Sass (Sass)\",scss:\"Sass (Scss)\",sql:\"SQL\",soy:\"Soy (Closure Template)\",tap:\"TAP\",tt2:\"Template Toolkit 2\",typescript:\"TypeScript\",vbnet:\"VB.Net\",vhdl:\"VHDL\",vim:\"vim\",\"visual-basic\":\"Visual Basic\",wasm:\"WebAssembly\",wiki:\"Wiki markup\",xojo:\"Xojo (REALbasic)\",xquery:\"XQuery\",yaml:\"YAML\"};Prism.plugins.toolbar.registerButton(\"show-language\",function(a){var t=a.element.parentNode;if(t&&/pre/i.test(t.nodeName)){var s=t.getAttribute(\"data-language\")||e[a.language]||a.language&&a.language.substring(0,1).toUpperCase()+a.language.substring(1);if(s){var i=document.createElement(\"span\");return i.textContent=s,i}}})}}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prismjs/plugins/show-language/prism-show-language.min.js\n// module id = 299\n// module chunks = 0 10 11","import cookie from 'react-cookies';\nimport { SeafileAPI } from 'seafile-js';\nimport { siteRoot } from './constants';\n\nlet seafileAPI = new SeafileAPI();\nlet xcsrfHeaders = cookie.load('sfcsrftoken');\nseafileAPI.initForSeahubUsage({ siteRoot, xcsrfHeaders });\n\nexport { seafileAPI };\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/seafile-api.js","!function(){if(\"undefined\"!=typeof self&&self.Prism&&self.document){var e=\"line-numbers\",t=/\\n(?!$)/g,n=function(e){var n=r(e),s=n[\"white-space\"];if(\"pre-wrap\"===s||\"pre-line\"===s){var l=e.querySelector(\"code\"),i=e.querySelector(\".line-numbers-rows\"),a=e.querySelector(\".line-numbers-sizer\"),o=l.textContent.split(t);a||(a=document.createElement(\"span\"),a.className=\"line-numbers-sizer\",l.appendChild(a)),a.style.display=\"block\",o.forEach(function(e,t){a.textContent=e||\"\\n\";var n=a.getBoundingClientRect().height;i.children[t].style.height=n+\"px\"}),a.textContent=\"\",a.style.display=\"none\"}},r=function(e){return e?window.getComputedStyle?getComputedStyle(e):e.currentStyle||null:null};window.addEventListener(\"resize\",function(){Array.prototype.forEach.call(document.querySelectorAll(\"pre.\"+e),n)}),Prism.hooks.add(\"complete\",function(e){if(e.code){var r=e.element.parentNode,s=/\\s*\\bline-numbers\\b\\s*/;if(r&&/pre/i.test(r.nodeName)&&(s.test(r.className)||s.test(e.element.className))&&!e.element.querySelector(\".line-numbers-rows\")){s.test(e.element.className)&&(e.element.className=e.element.className.replace(s,\" \")),s.test(r.className)||(r.className+=\" line-numbers\");var l,i=e.code.match(t),a=i?i.length+1:1,o=new Array(a+1);o=o.join(\"<span></span>\"),l=document.createElement(\"span\"),l.setAttribute(\"aria-hidden\",\"true\"),l.className=\"line-numbers-rows\",l.innerHTML=o,r.hasAttribute(\"data-start\")&&(r.style.counterReset=\"linenumber \"+(parseInt(r.getAttribute(\"data-start\"),10)-1)),e.element.appendChild(l),n(r),Prism.hooks.run(\"line-numbers\",e)}}}),Prism.hooks.add(\"line-numbers\",function(e){e.plugins=e.plugins||{},e.plugins.lineNumbers=!0}),Prism.plugins.lineNumbers={getLine:function(t,n){if(\"PRE\"===t.tagName&&t.classList.contains(e)){var r=t.querySelector(\".line-numbers-rows\"),s=parseInt(t.getAttribute(\"data-start\"),10)||1,l=s+(r.children.length-1);s>n&&(n=s),n>l&&(n=l);var i=n-s;return r.children[i]}}}}}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prismjs/plugins/line-numbers/prism-line-numbers.min.js\n// module id = 300\n// module chunks = 0 10 11","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React from 'react';\nimport { Value } from 'slate';\nimport { Editor } from '@seafile/slate-react';\nimport { SlateDiff } from '../utils/diff';\nimport { renderNode, renderMark } from '../utils/render-slate.js';\nimport '../css/diff-viewer.css';\n\nvar DiffViewer = function (_React$PureComponent) {\n  _inherits(DiffViewer, _React$PureComponent);\n\n  function DiffViewer(props) {\n    _classCallCheck(this, DiffViewer);\n\n    var _this = _possibleConstructorReturn(this, (DiffViewer.__proto__ || Object.getPrototypeOf(DiffViewer)).call(this, props));\n\n    _initialiseProps.call(_this);\n\n    _this.value = Value.create();\n    _this.slateDiff = new SlateDiff();\n    return _this;\n  }\n\n  _createClass(DiffViewer, [{\n    key: 'render',\n    value: function render() {\n      var newMarkdownContent = this.props.newMarkdownContent;\n      var OldMarkdownContent = this.props.oldMarkdownContent;\n      var diffDocument = this.slateDiff.getDiffDocument(newMarkdownContent, OldMarkdownContent);\n      this.value = Value.create({ document: diffDocument });\n      return React.createElement(Editor, {\n        style: { width: '100%' },\n        renderNode: this.renderDiffNode,\n        renderMark: renderMark,\n        value: this.value,\n        readOnly: true\n      });\n    }\n  }]);\n\n  return DiffViewer;\n}(React.PureComponent);\n\nvar _initialiseProps = function _initialiseProps() {\n  this.renderDiffNode = function (props) {\n    var node = props.node,\n        parent = props.parent;\n\n    var diffState = node.data.get('diff_state');\n    var parentDiffState = parent.data.get('diff_state');\n    if (diffState === 'diff-added') {\n      if (parentDiffState) {\n        if (node.type === 'blockquote' || node.type === 'code_block') {\n          return React.createElement(\n            'div',\n            { className: 'diff-added-container' },\n            renderNode(props)\n          );\n        }\n        return renderNode(props);\n      } else {\n        return React.createElement(\n          'div',\n          { className: 'diff-added' },\n          renderNode(props)\n        );\n      }\n    } else if (diffState === 'diff-removed') {\n      if (parentDiffState) {\n        if (node.type === 'blockquote' || node.type === 'code_block') {\n          return React.createElement(\n            'div',\n            { className: 'diff-removed-container' },\n            renderNode(props)\n          );\n        }\n        return renderNode(props);\n      } else {\n        return React.createElement(\n          'div',\n          { className: 'diff-removed' },\n          renderNode(props)\n        );\n      }\n    } else if (diffState === 'diff-replaced') {\n      if (parentDiffState) {\n        return renderNode(props);\n      } else {\n        return React.createElement(\n          'div',\n          { className: 'diff-replaced' },\n          renderNode(props)\n        );\n      }\n    } else {\n      return renderNode(props);\n    }\n  };\n};\n\nexport default DiffViewer;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@seafile/seafile-editor/dist/viewer/diff-viewer.js\n// module id = 301\n// module chunks = 0 10 11","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport lodash from 'lodash';\nimport { compareTwoStrings } from './compare-strings';\nimport { Block, Document, Text, Leaf, Mark } from 'slate';\nimport { deserialize } from '../slate2markdown';\nimport { Set } from 'immutable';\n\nfunction equalityFunctionForSlate(a, b) {\n  if (a.object !== b.object) {\n    return false;\n  }\n  if (a.type !== b.type) {\n    return false;\n  }\n  if (a.isVoid !== b.isVoid) {\n    return false;\n  }\n\n  if (lodash.isEqual(a, b)) {\n    return true;\n  }\n\n  if (a.object === b.object && a.object === 'text') {\n\n    if (compareTwoStrings(Text.create(a).text, Text.create(b).text) >= 0.5) {\n      return 'changed';\n    } else {\n      return false;\n    }\n  }\n\n  if (a.object === b.object && a.object === 'leaf') {\n    // when the two leaf has same marks and the similarity greater than 0.5, then the leaf are changed\n    if (compareTwoStrings(Text.create(a).text, Text.create(b).text) >= 0.5 && lodash.isEqual(a.marks, b.marks)) {\n      return 'changed';\n    } else {\n      return false;\n    }\n  }\n\n  if (a.type === b.type && (a.type.includes('ordered_list') || a.type.includes('unordered_list'))) {\n    if (compareTwoStrings(Block.create(a).text, Block.create(b).text) >= 0.5) {\n      return 'changed';\n    }\n  }\n\n  if (a.type === b.type && (a.nodes.length > 1 || b.nodes.length > 1) && a.type === 'list_item') {\n    if (compareTwoStrings(Block.create(a).text, Block.create(b).text) >= 0.5) {\n      return 'changed';\n    }\n  }\n\n  if (a.type === b.type && a.type === 'paragraph') {\n    if (compareTwoStrings(Block.create(a).text, Block.create(b).text) >= 0.5) {\n      return 'changed';\n    }\n  }\n\n  if (a.type === b.type && a.type === 'table') {\n    if (compareTwoStrings(Block.create(a).text, Block.create(b).text) >= 0.5) {\n      return 'changed';\n    }\n  }\n\n  /*\n   * the table diff is not the same as list diff,\n   * in the table, if the old table_line and the new table_line or the old table_cell and new table_cell are not equal\n   * the table_line or table_cells is set as changed, then the diff is expressed in the text of table_cell\n   * */\n\n  if (a.type === b.type && a.type === 'table_row') {\n    return 'changed';\n  }\n\n  if (a.type === b.type && a.type === 'table_cell') {\n    return 'changed';\n  }\n\n  return false;\n}\n\nfunction defaultEqualityFunction(a, b) {\n  return a === b;\n}\n\nvar SlateDiff = function () {\n  function SlateDiff() {\n    var _this = this;\n\n    _classCallCheck(this, SlateDiff);\n\n    this.deepDiff = function (newNodes, oldNodes) {\n      var slateDiffNodes = [];\n      var diff = new Diff({ equalFunc: equalityFunctionForSlate });\n      diff.ArrayDiff(newNodes, oldNodes);\n      for (var i = 0; i < diff.diff.length; i++) {\n        var diffElement = diff.diff[i];\n        var changeType = diffElement.changeType;\n        if (changeType === 'common') {\n          if (diffElement.item.data) {\n            diffElement.item.data.diff_state = 'diff-common';\n            diffElement.item.data.new_index = diffElement.newIndex;\n            diffElement.item.data.old_index = -1;\n          }\n        } else if (changeType === 'added') {\n          if (diffElement.item.data) {\n            diffElement.item.data.diff_state = 'diff-added';\n            diffElement.item.data.new_index = diffElement.newIndex;\n            diffElement.item.data.old_index = -1;\n          } else {\n            // add ADD mark for added text leaves\n            diffElement.item.leaves.forEach(function (leaf) {\n              leaf.marks.push(Mark.create('ADD'));\n            });\n          }\n        } else if (changeType === 'removed') {\n          if (diffElement.item.data) {\n            diffElement.item.data.diff_state = 'diff-removed';\n            diffElement.item.data.new_index = -1;\n            diffElement.item.data.old_index = diffElement.oldIndex;\n          } else {\n            // add DELETE mark for deleted text leaves\n            diffElement.item.leaves.forEach(function (leaf) {\n              leaf.marks.push(Mark.create('DELETE'));\n            });\n          }\n        } else if (changeType === 'replaced') {\n          var diffNodes = void 0,\n              elementType = diffElement.item.type || diffElement.item.object;\n          if (elementType === 'text') {\n            // compare text diff leaves use getTextDiffLeaves function\n            diffNodes = _this.getTextDiffLeaves(diffElement.newItem.leaves, diffElement.oldItem.leaves);\n          } else if (elementType.includes('ordered_list') || elementType.includes('unordered_list') || elementType.includes('list_item')) {\n            diffNodes = _this.deepDiff(diffElement.newItem.nodes, diffElement.oldItem.nodes);\n          } else if (elementType === 'table' || elementType === 'table_row' || elementType === 'table_cell') {\n            diffNodes = _this.deepDiff(diffElement.newItem.nodes, diffElement.oldItem.nodes, equalityFunctionForSlate);\n          } else if (elementType === 'paragraph') {\n            // compare text or inline\n            diffNodes = _this.deepDiff(diffElement.newItem.nodes, diffElement.oldItem.nodes);\n          }\n          if (diffElement.item.data) {\n            diffElement.item.data.diff_state = 'diff-replaced';\n            diffElement.item.data.new_index = diffElement.newIndex;\n            diffElement.item.data.old_index = -1;\n            diffElement.item.nodes = diffNodes;\n          } else {\n            // if diffElement is a text, set the diffNodes as it's leaves\n            if (diffElement.item.object === 'text') {\n              diffElement.item.leaves = diffNodes;\n            }\n          }\n        }\n        slateDiffNodes.push(diffElement.item);\n      }\n      return slateDiffNodes;\n    };\n\n    this.getDiffDocument = function (newMarkdownContent, oldMarkdownContent) {\n      var newNodes = deserialize(newMarkdownContent).toJSON().document.nodes;\n      var oldNodes = deserialize(oldMarkdownContent).toJSON().document.nodes;\n      var topSlateDiffNodes = _this.deepDiff(newNodes, oldNodes, equalityFunctionForSlate);\n      // handle replaced paragraph\n      topSlateDiffNodes = _this.splitTopDiffNodes(topSlateDiffNodes);\n      return Document.fromJSON({\n        nodes: topSlateDiffNodes\n      });\n    };\n  }\n\n  _createClass(SlateDiff, [{\n    key: 'getTextDiffLeaves',\n    value: function getTextDiffLeaves(newTextLeaves, oldTextLeaves) {\n      var diff = new Diff({ equalFunc: equalityFunctionForSlate });\n      var textLeaves = [];\n      diff.ArrayDiff(newTextLeaves, oldTextLeaves);\n\n      for (var i = 0; i < diff.diff.length; i++) {\n        var diffLeaf = diff.diff[i];\n        if (diffLeaf.changeType === 'common') {\n          textLeaves.push(diffLeaf.item);\n        } else if (diffLeaf.changeType === 'added') {\n          textLeaves.push(Leaf.create({\n            text: diffLeaf.item.text,\n            marks: [].concat(_toConsumableArray(diffLeaf.item.marks), [Mark.create({\n              type: 'ADD',\n              data: {}\n            })])\n          }));\n        } else if (diffLeaf.changeType === 'removed') {\n          textLeaves.push(Leaf.create({\n            text: diffLeaf.item.text,\n            marks: [].concat(_toConsumableArray(diffLeaf.item.marks), [Mark.create({\n              type: 'DELETE',\n              data: {}\n            })])\n          }));\n        } else if (diffLeaf.changeType === 'replaced') {\n          // get text diff leaves\n          var leaves = this.textDiff(diffLeaf.newItem.text, diffLeaf.oldItem.text, diffLeaf.item.marks);\n          textLeaves = textLeaves.concat(leaves);\n        }\n      }\n      return textLeaves;\n    }\n  }, {\n    key: 'textDiff',\n    value: function textDiff(newText, oldText, marks) {\n      var textDiffleaves = [];\n      var diff = new Diff({ equalFunc: defaultEqualityFunction });\n      diff.StringDiff(newText, oldText);\n\n      var textDiffArray = diff.diff;\n      var stringFragment = '';\n      var lastDiffState = textDiffArray[0].changeType;\n      textDiffArray.forEach(function (textCharacter, index, textDiffArray) {\n        var markType = '';\n        if (lastDiffState === 'removed') {\n          markType = 'DELETE';\n        } else if (lastDiffState === 'added') {\n          markType = 'ADD';\n        }\n        if (lastDiffState === textCharacter.changeType) {\n          stringFragment += textCharacter.item;\n          if (index === textDiffArray.length - 1) {\n            textDiffleaves.push(Leaf.create({\n              text: stringFragment,\n              marks: [].concat(_toConsumableArray(marks), [Mark.create({\n                type: markType\n              })])\n            }));\n          }\n        } else if (textCharacter.changeType !== lastDiffState) {\n          textDiffleaves.push(Leaf.create({\n            text: stringFragment,\n            marks: [].concat(_toConsumableArray(marks), [Mark.create({\n              type: markType\n            })])\n          }));\n          lastDiffState = textCharacter.changeType;\n          stringFragment = textCharacter.item;\n          if (index === textDiffArray.length - 1) {\n            if (lastDiffState === 'removed') {\n              markType = 'DELETE';\n            } else if (lastDiffState === 'added') {\n              markType = 'ADD';\n            }\n            textDiffleaves.push(Leaf.create({\n              text: stringFragment,\n              marks: [].concat(_toConsumableArray(marks), [Mark.create({\n                type: markType\n              })])\n            }));\n          }\n        }\n      });\n      return textDiffleaves;\n    }\n  }, {\n    key: 'splitDiffParagraph',\n    value: function splitDiffParagraph(diffParagraph) {\n      var _this2 = this;\n\n      // clone the replace paragraph to wrap the deleted and added nodes\n      var newParagraph = lodash.cloneDeep(diffParagraph),\n          oldParagraph = lodash.cloneDeep(diffParagraph),\n\n      // wrap new paragraph nodes and old paragraph nodes\n      newParagraphNodes = [],\n          oldParagraphNodes = [],\n\n      // wrap new paragraph leaves and old leaves\n      newParagraphLeaves = [],\n          oldParagraphLeaves = [];\n      // traverse paragraph nodes\n      diffParagraph.nodes.forEach(function (node, index1, nodes) {\n        if (node.object === 'inline') {\n          // if the node is inline node, like link\n          // if the inline is added\n          if (node.data.diff_state === 'diff-added') {\n            // push the inline node to new paragraph nodes\n            newParagraphNodes.push(node);\n          } else if (node.data.diff_state === 'diff-removed') {\n            // if the inline is added push the inline node to new paragraph nodes\n            oldParagraphNodes.push(node);\n          } else {\n            // if the inline node is common new paragraph node and old paragraph all push the inline node\n            newParagraphNodes.push(node);\n            oldParagraphNodes.push(node);\n          }\n        } else {\n          // if the node is a text\n          // traverse the text leaves\n          node.leaves.forEach(function (leafNode) {\n            // get leaf mark type\n            var leafDiffMark = _this2.getLeafDiffMark(leafNode);\n            // if the leaf is ADD push it to newParagraphLeaves\n            if (leafDiffMark === 'ADD') {\n              newParagraphLeaves.push(leafNode);\n            } else if (leafDiffMark === 'DELETE') {\n              // if the leaf is DELETE push it to oldParagraphLeaves\n              oldParagraphLeaves.push(leafNode);\n            } else {\n              // if the leaf is COMMON push it to oldParagraphLeaves\n              newParagraphLeaves.push(leafNode);\n              oldParagraphLeaves.push(leafNode);\n            }\n          });\n          newParagraphNodes.push({\n            object: 'text',\n            leaves: newParagraphLeaves\n          });\n          oldParagraphNodes.push({\n            object: 'text',\n            leaves: oldParagraphLeaves\n          });\n          oldParagraphLeaves = [];\n          newParagraphLeaves = [];\n        }\n      });\n\n      // set new paragraph and old paragraph nodes\n      newParagraph.nodes = newParagraphNodes;\n      oldParagraph.data.paragraph_state = 'old-paragraph';\n      newParagraph.data.paragraph_state = 'new-paragraph';\n      oldParagraph.nodes = oldParagraphNodes;\n      return [oldParagraph, newParagraph];\n    }\n  }, {\n    key: 'splitTopDiffNodes',\n    value: function splitTopDiffNodes(slateDiffNodes) {\n      var _this3 = this;\n\n      // newSlateDiffNodes used to wrap the new slate nodes\n      var newSlateDiffNodes = [];\n      // traverse slate top Nodes and find the paragraph handle it\n      slateDiffNodes.forEach(function (node) {\n        if (node.data.diff_state === 'diff-replaced' && node.type === 'paragraph') {\n          var splicedParagraph = _this3.splitDiffParagraph(node);\n          // push the old and new paragraph node to newSlateDiffNodes\n          newSlateDiffNodes.push(splicedParagraph[0], splicedParagraph[1]);\n        } else if (node.data.diff_state === 'diff-replaced' && node.type === 'table') {\n          _this3.splitTableDiffParagraph(node);\n          newSlateDiffNodes.push(node);\n        } else {\n          newSlateDiffNodes.push(node);\n        }\n      });\n      return newSlateDiffNodes;\n    }\n  }, {\n    key: 'splitTableDiffParagraph',\n    value: function splitTableDiffParagraph(node) {\n      var _this4 = this;\n\n      node.nodes.forEach(function (tableRow, rowIndex, tablerows) {\n        if (tableRow.data.diff_state === 'diff-replaced') {\n          tableRow.nodes.forEach(function (tableCell) {\n            if (tableCell.data.diff_state === 'diff-replaced') {\n              if (tableCell.nodes[0].data.diff_state === 'diff-replaced') {\n                var splicedParagraphNodes = _this4.splitDiffParagraph(tableCell.nodes[0]);\n                tableCell.nodes = splicedParagraphNodes;\n              }\n            }\n          });\n        }\n      });\n      return node;\n    }\n\n    // get leaf diff state\n\n  }, {\n    key: 'getLeafDiffMark',\n    value: function getLeafDiffMark(leafNode) {\n      var marks = Set(leafNode.marks);\n      var leafDiffMark = void 0;\n      if (marks.has(Mark.create({ type: 'ADD' }))) {\n        leafDiffMark = 'ADD';\n      } else if (marks.has(Mark.create({ type: 'DELETE' }))) {\n        leafDiffMark = 'DELETE';\n      } else {\n        leafDiffMark = 'COMMON';\n      }\n      return leafDiffMark;\n    }\n  }]);\n\n  return SlateDiff;\n}();\n\nvar ArrayDiffElement = function () {\n  function ArrayDiffElement(item, newIndex, oldIndex) {\n    _classCallCheck(this, ArrayDiffElement);\n\n    this.item = item;\n    this.newIndex = newIndex;\n    this.oldIndex = oldIndex;\n  }\n\n  _createClass(ArrayDiffElement, [{\n    key: 'added',\n    value: function added() {\n      return this.oldIndex === undefined;\n    }\n  }, {\n    key: 'removed',\n    value: function removed() {\n      return this.newIndex === undefined;\n    }\n  }, {\n    key: 'common',\n    value: function common() {\n      return this.oldIndex !== undefined && this.newIndex !== undefined;\n    }\n  }]);\n\n  return ArrayDiffElement;\n}();\n\nvar Diff = function () {\n  function Diff(opts) {\n    _classCallCheck(this, Diff);\n\n    this.equalFunc = opts.equalFunc ? opts.equalFunc : defaultEqualityFunction;\n    if (opts.shouldDetectChange != undefined) this.shouldDetectChange = opts.shouldDetectChange;else this.shouldDetectChange = false;\n    this.similarityFunc = opts.similarityFunc;\n  }\n\n  /**\n   Appends an array item to the subsequence of items that were added in the new array.\n   @method  added\n   @param   item   The array item that was added.\n   **/\n\n\n  _createClass(Diff, [{\n    key: 'addAdded',\n    value: function addAdded(item, newIndex) {\n      var element = new ArrayDiffElement(item, newIndex, undefined);\n      element.changeType = 'added';\n      this.added.push(element);\n      this.diff.push(element);\n    }\n\n    /**\n     Appends an array item to the subsequence of items that were removed from the old array.\n     @method  removed\n     @param   item     The array item that was added.\n     **/\n\n  }, {\n    key: 'addRemoved',\n    value: function addRemoved(item, oldIndex) {\n      var element = new ArrayDiffElement(item, undefined, oldIndex);\n      this.removed.push(element);\n      element.changeType = 'removed';\n      this.diff.push(element);\n    }\n  }, {\n    key: 'addReplaced',\n    value: function addReplaced(oldItem, newItem, oldIndex, newIndex) {\n      var element = new ArrayDiffElement(oldItem, newIndex, oldIndex);\n      element.newItem = newItem;\n      element.oldItem = oldItem;\n      element.changeType = 'replaced';\n      this.replaced.push(element);\n      this.diff.push(element);\n    }\n\n    /**\n     Appends an array item to the longest common subsequence between the new and old arrays.\n     @method  common\n     @param   item    The array item that was added.\n     **/\n\n  }, {\n    key: 'addCommon',\n    value: function addCommon(oldItem, newItem, oldIndex, newIndex) {\n      var element = new ArrayDiffElement(oldItem, newIndex, oldIndex);\n      element.newItem = newItem;\n      element.changeType = 'common';\n      element.oldItem = oldItem;\n      this.common.push(element);\n      this.diff.push(element);\n    }\n  }, {\n    key: 'StringDiff',\n    value: function StringDiff(newString, oldString) {\n      var newLength = newString.length;\n      var oldLength = oldString.length;\n      var n = 0;\n      var o = 0;\n      var table = [];\n      table[newLength] = [];\n      for (o = oldLength; o >= 0; table[newLength][o--] = 0) {}\n      for (n = newLength - 1; n >= 0; n--) {\n        table[n] = [];\n        table[n][oldLength] = 0;\n        for (o = oldLength - 1; o >= 0; o--) {\n          if (this.equalFunc(newString[n], oldString[o])) {\n            table[n][o] = table[n + 1][o + 1] + 1;\n          } else {\n            table[n][o] = Math.max(table[n + 1][o], table[n][o + 1]);\n          }\n        }\n      }\n\n      // Fill in the subsequence arrays\n      this.common = [];\n      this.added = [];\n      this.removed = [];\n      this.replaced = [];\n      this.diff = [];\n\n      n = o = 0;\n      while (n < newLength && o < oldLength) {\n        var diffState = this.equalFunc(newString[n], oldString[o]);\n        if (diffState) {\n\n          var newItem = newString[n];\n          var oldItem = oldString[o];\n          this.addCommon(oldItem, newItem, o, n);\n          n++;\n          o++;\n        } else if (table[n + 1][o] >= table[n][o + 1]) {\n          this.addAdded(newString[n], n);\n          n++;\n        } else {\n          this.addRemoved(oldString[o], o);\n          o++;\n        }\n      }\n\n      for (; n < newLength; n++) {\n        this.addAdded(newString[n], n);\n      }\n\n      for (; o < oldLength; o++) {\n        this.addRemoved(oldString[o], o);\n      }\n    }\n  }, {\n    key: 'ArrayDiff',\n    value: function ArrayDiff(newArray, oldArray, callback) {\n      //newArray = newArray.toArray();\n      //oldArray = oldArray.toArray();\n      var newLength = newArray.length;\n      var oldLength = oldArray.length;\n      var n = 0;\n      var o = 0;\n      var table = [];\n\n      // Build out the table\n      table[newLength] = [];\n      for (o = oldLength; o >= 0; table[newLength][o--] = 0) {}\n      for (n = newLength - 1; n >= 0; n--) {\n        table[n] = [];\n        table[n][oldLength] = 0;\n        for (o = oldLength - 1; o >= 0; o--) {\n          if (this.equalFunc(newArray[n], oldArray[o])) {\n            table[n][o] = table[n + 1][o + 1] + 1;\n          } else {\n            table[n][o] = Math.max(table[n + 1][o], table[n][o + 1]);\n          }\n        }\n      }\n\n      // Fill in the subsequence arrays\n      this.common = [];\n      this.added = [];\n      this.removed = [];\n      this.replaced = [];\n      this.diff = [];\n\n      n = o = 0;\n      while (n < newLength && o < oldLength) {\n        var diffState = this.equalFunc(newArray[n], oldArray[o]);\n        if (diffState) {\n          var newItem = newArray[n];\n          var oldItem = oldArray[o];\n          if (diffState === 'changed') {\n            this.addReplaced(oldItem, newItem, o, n);\n          } else {\n            //if (newItem.isVoid) {\n            this.addCommon(oldItem, newItem, o, n);\n          }\n\n          if (callback) {\n            callback('C', o, n);\n          }\n          n++;\n          o++;\n        } else if (table[n + 1][o] >= table[n][o + 1]) {\n          this.addAdded(newArray[n], n);\n          if (callback) {\n            callback('A', 0, n);\n          }\n          n++;\n        } else {\n          this.addRemoved(oldArray[o], o);\n          if (callback) {\n            callback('D', o, 0);\n          }\n          o++;\n        }\n      }\n\n      for (; n < newLength; n++) {\n        this.addAdded(newArray[n], n);\n        if (callback) {\n          callback('A', 0, n);\n        }\n      }\n\n      for (; o < oldLength; o++) {\n        this.addRemoved(oldArray[o], o);\n        if (callback) {\n          callback('D', o, 0);\n        }\n      }\n    }\n  }]);\n\n  return Diff;\n}();\n\nfunction printChunk(oArray, aArray, bArray, chunk) {\n  /* console.log(\"chunk index \" + chunk.startO + \",\" + chunk.endO + \" \"\n    + chunk.startA + \",\" + chunk.endA + \" \"\n    + chunk.startB + \",\" + chunk.endB) */\n  var sO = oArray.slice(chunk.startO, chunk.endO + 1);\n  var sA = aArray.slice(chunk.startA, chunk.endA + 1);\n  var sB = bArray.slice(chunk.startB, chunk.endB + 1);\n  console.log('chunk stable: ' + chunk.isStable + ' ' + '[' + sO + ']' + ' ' + '[' + sA + ']' + ' ' + '[' + sB + ']');\n}\n\nvar Diff3 = function () {\n  function Diff3(opts) {\n    _classCallCheck(this, Diff3);\n\n    opts = opts || {};\n    this.equalFunc = opts.equalFunc ? opts.equalFunc : defaultEqualityFunction;\n    if (opts.shouldDetectChange != undefined) this.shouldDetectChange = opts.shouldDetectChange;else this.shouldDetectChange = false;\n    this.similarityFunc = opts.similarityFunc;\n\n    this.chunks = [];\n    this.common = [];\n    this.added = [];\n    this.removed = [];\n    this.mergedArray = [];\n  }\n\n  _createClass(Diff3, [{\n    key: 'printChunks',\n    value: function printChunks() {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.chunks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var chunk = _step.value;\n\n          printChunk(this.oArray, this.aArray, this.bArray, chunk);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }, {\n    key: 'diff3',\n    value: function diff3(oArray, aArray, bArray) {\n      this.oArray = oArray;\n      this.aArray = aArray;\n      this.bArray = bArray;\n\n      var oaDiff = new Diff({\n        equalFunc: this.equalFunc,\n        shouldDetectChange: this.shouldDetectChange,\n        similarityFunc: this.similarityFunc\n      });\n      oaDiff.ArrayDiff(aArray, oArray);\n      var obDiff = new Diff({\n        equalFunc: this.equalFunc,\n        shouldDetectChange: this.shouldDetectChange,\n        similarityFunc: this.similarityFunc\n      });\n      obDiff.ArrayDiff(bArray, oArray);\n\n      var M_oa = [];\n      for (var i = 0; i < oArray.length; i++) {\n        M_oa[i] = [];\n        for (var j = 0; j < aArray.length; j++) {\n          M_oa[i][j] = 0;\n        }\n      }\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = oaDiff.common[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var item = _step2.value;\n\n          M_oa[item.oldIndex][item.newIndex] = 1;\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      this.M_oa = M_oa;\n\n      var M_ob = [];\n      for (var _i = 0; _i < oArray.length; _i++) {\n        M_ob[_i] = [];\n        for (var _j = 0; _j < bArray.length; _j++) {\n          M_ob[_i][_j] = 0;\n        }\n      }\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = obDiff.common[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var _item = _step3.value;\n\n          M_ob[_item.oldIndex][_item.newIndex] = 1;\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      this.M_ob = M_ob;\n      /*\n      console.log(\"M_oa\");\n      console.log(M_oa);\n      console.log(\"M_ob\");\n      console.log(M_ob);\n      */\n\n      var lo = 0;\n      var la = 0;\n      var lb = 0;\n      var finalStable = undefined;\n      // while (true) {\n      //   // find i that the cursor at the three array not match\n      //   let i = 0;\n      //   var iFound = false;\n      //   while (true) {\n      //     if (M_oa[lo+i][la+i] == 0 || M_ob[lo+i][lb+i] == 0) {\n      //       iFound = true;\n      //       break;\n      //     }\n      //     i++;\n      //     if (lo+i == oArray.length || la+i == aArray.length ||\n      //       lb+i == bArray.length)\n      //       break;\n      //   }\n      //   if (iFound == false) {\n      //     // go out and output a final stable chunk\n      //     //console.log(\"iFound == false\");\n      //     finalStable = true;\n      //     break;\n      //   }\n      //\n      //   if (i > 0) {\n      //     //console.log(\"stable chunk \");\n      //     var chunk = {};\n      //     chunk.startO = lo;\n      //     chunk.startA = la;\n      //     chunk.startB = lb;\n      //     chunk.endO = lo+i-1;\n      //     chunk.endA = la+i-1;\n      //     chunk.endB = lb+i-1;\n      //     chunk.isStable = true;\n      //     this.chunks.push(chunk);\n      //     //printChunk(oArray, aArray, bArray, chunk);\n      //     lo = lo + i;\n      //     la = la + i;\n      //     lb = lb + i;\n      //     continue;\n      //   }\n      //\n      //   //console.log(\"unstable chunk \");\n      //   let o;\n      //   let a;\n      //   let b;\n      //   let found = false;\n      //   for (o = lo; o < oArray.length; o++) {\n      //     for (a = la; a < aArray.length; a++) {\n      //       if (M_oa[o][a] != true) {\n      //         continue;\n      //       }\n      //\n      //       for (b = lb; b < bArray.length; b++) {\n      //         if (M_ob[o][b] == true) {\n      //           found = true;\n      //           break;\n      //         }\n      //       }\n      //       if (found == true) {\n      //         break;\n      //       }\n      //     }\n      //     if (found == true) {\n      //       break;\n      //     }\n      //   }\n      //\n      //   if (found == true) {\n      //     let chunk = {}\n      //     chunk.startO = lo;\n      //     chunk.startA = la;\n      //     chunk.startB = lb;\n      //     chunk.endO = o-1;\n      //     chunk.endA = a-1;\n      //     chunk.endB = b-1;\n      //     chunk.isStable = false;\n      //     this.chunks.push(chunk);\n      //     //printChunk(oArray, aArray, bArray, chunk);\n      //     lo = o;\n      //     la = a;\n      //     lb = b;\n      //     continue;\n      //   } else {\n      //     // output a final unstable chunk\n      //     finalStable = false;\n      //     break;\n      //   }\n      // }\n\n      // output the final chunk\n      if (lo < oArray.length || la < aArray.length || lb < bArray.length) {\n        //console.log(\"final chunk \");\n        var chunk = {};\n        chunk.startO = lo;\n        chunk.endO = oArray.length - 1;\n        chunk.startA = la;\n        chunk.endA = aArray.length - 1;\n        chunk.startB = lb;\n        chunk.endB = bArray.length - 1;\n        chunk.isStable = finalStable;\n        this.chunks.push(chunk);\n        //printChunk(oArray, aArray, bArray, chunk);\n      }\n    }\n  }, {\n    key: 'calPatchChunk',\n    value: function calPatchChunk(chunk) {\n      for (var i = chunk.startA; i <= chunk.endA; ++i) {\n        // find if item also in O\n        var found = false;\n        for (var j = chunk.startO; j <= chunk.endO; ++j) {\n          if (this.M_oa[j][i] == 1) {\n            // The item in both A and O\n            // The item is removed by B\n            found = true;\n            break;\n          }\n        }\n        if (found == false) {\n          // the item not found in O\n          // the item is added or modifed in A\n          // keep\n          this.mergedArray.push(this.aArray[i]);\n        }\n      }\n\n      for (var _i2 = chunk.startB; _i2 <= chunk.endB; ++_i2) {\n        // find if item also in O\n        var found = false;\n        for (var _j2 = chunk.startO; _j2 <= chunk.endO; ++_j2) {\n          if (this.M_ob[_j2][_i2] == 1) {\n            // The item in both B and O\n            // the item is removed by A (or moved by A)\n            // do nothing\n            found = true;\n            break;\n          }\n        }\n        if (found) continue;\n\n        // the matched item not found in O\n        // the item is added or modifed in B\n        this.mergedArray.push(this.bArray[_i2]);\n      }\n    }\n  }, {\n    key: 'calPatch',\n    value: function calPatch() {\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = this.chunks[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var chunk = _step4.value;\n\n          if (chunk.isStable) {\n            for (var i = 0; i + chunk.startA <= chunk.endA; ++i) {\n              var c = {};\n              c.indexA = i + chunk.startA;\n              c.indexO = i + chunk.startO;\n              c.indexB = i + chunk.startB;\n              //this.common.push(c);\n              this.mergedArray.push(this.aArray[c.indexA]);\n            }\n          }\n          if (!chunk.isStable) {\n            this.calPatchChunk(chunk);\n          }\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n    }\n  }]);\n\n  return Diff3;\n}();\n\nexport { Diff, Diff3, equalityFunctionForSlate, SlateDiff };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@seafile/seafile-editor/dist/utils/diff/diff.js\n// module id = 303\n// module chunks = 0 10 11","function compareTwoStrings(str1, str2) {\n  if (!str1.length && !str2.length) return 1; // if both are empty strings\n  if (!str1.length || !str2.length) return 0; // if only one is empty string\n  if (str1.toUpperCase() === str2.toUpperCase()) return 1; // identical\n  if (str1.length === 1 && str2.length === 1) return 0; // both are 1-letter strings\n\n  var pairs1 = wordLetterPairs(str1);\n  var pairs2 = wordLetterPairs(str2);\n  var union = pairs1.length + pairs2.length;\n  var intersection = 0;\n  pairs1.forEach(function (pair1) {\n    for (var i = 0, pair2; pair2 = pairs2[i]; i++) {\n      if (pair1 !== pair2) continue;\n      intersection++;\n      pairs2.splice(i, 1);\n      break;\n    }\n  });\n  return intersection * 2 / union;\n}\n\nfunction findBestMatch(mainString, targetStrings) {\n  if (!areArgsValid(mainString, targetStrings)) throw new Error('Bad arguments: First argument should be a string, second should be an array of strings');\n  var ratings = targetStrings.map(function (target) {\n    return { target: target, rating: compareTwoStrings(mainString, target) };\n  });\n  var bestMatch = Array.from(ratings).sort(function (a, b) {\n    return b.rating - a.rating;\n  })[0];\n  return { ratings: ratings, bestMatch: bestMatch };\n}\n\nfunction flattenDeep(arr) {\n  return Array.isArray(arr) ? arr.reduce(function (a, b) {\n    return a.concat(flattenDeep(b));\n  }, []) : [arr];\n}\n\nfunction areArgsValid(mainString, targetStrings) {\n  if (typeof mainString !== 'string') return false;\n  if (!Array.isArray(targetStrings)) return false;\n  if (!targetStrings.length) return false;\n  if (targetStrings.find(function (s) {\n    return typeof s !== 'string';\n  })) return false;\n  return true;\n}\n\nfunction letterPairs(str) {\n  var pairs = [];\n  for (var i = 0, max = str.length - 1; i < max; i++) {\n    pairs[i] = str.substring(i, i + 2);\n  }return pairs;\n}\n\nfunction wordLetterPairs(str) {\n  var pairs = str.toUpperCase().split(' ').map(letterPairs);\n  return flattenDeep(pairs);\n}\n\nexport { compareTwoStrings };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@seafile/seafile-editor/dist/utils/diff/compare-strings.js\n// module id = 304\n// module chunks = 0 10 11","import { mediaUrl, gettext, serviceURL } from './constants';\nimport { strChineseFirstPY } from './pinyin-by-unicode';\n\nexport const Utils = {\n\n  keyCodes:  {\n    esc:   27,\n    space: 32,\n    tab:   9,\n    up:    38,\n    down:  40\n  },\n\n  bytesToSize: function(bytes) {\n    if (typeof(bytes) == 'undefined') return ' ';\n\n    if(bytes < 0) return '--';\n    const sizes = ['bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n\n    if (bytes === 0) return bytes + ' ' + sizes[0];\n\n    const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1000)), 10);\n    if (i === 0) return bytes + ' ' + sizes[i];\n    return (bytes / (1000 ** i)).toFixed(1) + ' ' + sizes[i];\n  },\n\n  isHiDPI: function() {\n    var pixelRatio = window.devicePixelRatio ? window.devicePixelRatio : 1;\n    if (pixelRatio > 1) {\n      return true;\n    } else {\n      return false;\n    }\n  },\n\n  FILEEXT_ICON_MAP: {\n\n    // text file\n    'md': 'txt.png',\n    'txt': 'txt.png',\n\n    // pdf file\n    'pdf' : 'pdf.png',\n\n    // document file\n    'doc' : 'word.png',\n    'docx' : 'word.png',\n    'odt' : 'word.png',\n    'fodt' : 'word.png',\n\n    'ppt' : 'ppt.png',\n    'pptx' : 'ppt.png',\n    'odp' : 'ppt.png',\n    'fodp' : 'ppt.png',\n\n    'xls' : 'excel.png',\n    'xlsx' : 'excel.png',\n    'ods' : 'excel.png',\n    'fods' : 'excel.png',\n\n    // video\n    'mp4': 'video.png',\n    'ogv': 'video.png',\n    'webm': 'video.png',\n    'mov': 'video.png',\n    'flv': 'video.png',\n    'wmv': 'video.png',\n    'rmvb': 'video.png',\n\n    // music file\n    'mp3' : 'music.png',\n    'oga' : 'music.png',\n    'ogg' : 'music.png',\n    'flac' : 'music.png',\n    'aac' : 'music.png',\n    'ac3' : 'music.png',\n    'wma' : 'music.png',\n\n    // image file\n    'jpg' : 'pic.png',\n    'jpeg' : 'pic.png',\n    'png' : 'pic.png',\n    'svg' : 'pic.png',\n    'gif' : 'pic.png',\n    'bmp' : 'pic.png',\n    'ico' : 'pic.png',\n\n    // default\n    'default' : 'file.png'\n  },\n\n  // check if a file is an image\n  imageCheck: function (filename) {\n    // no file ext\n    if (filename.lastIndexOf('.') == -1) {\n      return false;\n    }\n    var file_ext = filename.substr(filename.lastIndexOf('.') + 1).toLowerCase();\n    var image_exts = ['gif', 'jpeg', 'jpg', 'png', 'ico', 'bmp'];\n    if (image_exts.indexOf(file_ext) != -1) {\n      return true;\n    } else {\n      return false;\n    }\n  },\n\n  // check if a file is a video\n  videoCheck: function (filename) {\n    // no file ext\n    if (filename.lastIndexOf('.') == -1) {\n      return false;\n    }\n    var file_ext = filename.substr(filename.lastIndexOf('.') + 1).toLowerCase();\n    var exts = ['mp4', 'ogv', 'webm', 'mov'];\n    if (exts.indexOf(file_ext) != -1) {\n      return true;\n    } else {\n      return false;\n    }\n  },\n\n  encodePath: function(path) {\n    // IE8 does not support 'map()'\n    /*\n       return path.split('/').map(function(e) {\n       return encodeURIComponent(e);\n       }).join('/');\n       */\n    if (!path) {\n      return '';\n    }\n    var path_arr = path.split('/');\n    var path_arr_ = [];\n    for (var i = 0, len = path_arr.length; i < len; i++) {\n      path_arr_.push(encodeURIComponent(path_arr[i]));\n    }\n    return path_arr_.join('/');\n  },\n\n  HTMLescape: function(html) {\n    return document.createElement('div')\n      .appendChild(document.createTextNode(html))\n      .parentNode\n      .innerHTML;\n  },\n\n  generateDialogTitle: function(title, operationTarget) {\n    /*\n     * @param title: gettext('...{placeholder}...')\n     */\n    const targetStr = this.HTMLescape(operationTarget);\n    const str = `<span class=\"op-target ellipsis ellipsis-op-target\" title=${targetStr}>${targetStr}</span>`;\n    return title.replace('{placeholder}', str);\n  },\n\n  getFileName: function(filePath) {\n    let lastIndex = filePath.lastIndexOf('/');\n    return filePath.slice(lastIndex+1);\n  },\n\n  /**\n   * input: '/abc/bc/cb'\n   * output: ['/abc', '/abc/bc', '/abc/bc/cb'];\n   */\n  getPaths: function(path) {\n    let paths = path.split('/').slice(1);\n    let result = [];\n    while(paths.length) {\n      result.push('/' + paths.join('/'));\n      paths.pop();\n    }\n    return result.reverse();\n  },\n\n  /**\n   * input: \n   *  eg: /\n   *      ../abc/abc/\n   *      ../abc/bc\n   * output(return):\n   *  eg: /\n   *      abc\n   *      bc\n   */\n  getFolderName: function(path) {\n    if (path === '/') {\n      return path;\n    }\n    path = path[path.length - 1] !== '/' ? path : path.slice(0, path.length -2);\n    return path.slice(path.lastIndexOf('/') + 1);\n  },\n\n  /*\n    return dirname of a path.\n    if path is '/', return '/'.\n  */\n  getDirName: function(path) {\n    let dir = path.slice(0, path.lastIndexOf('/'));\n    if (dir === '') {\n      return '/';\n    } else {\n      return dir;\n    }\n  },\n\n  isChildPath: function(child, parent) {\n    let p = this.getDirName(child);\n    return p === parent;\n  },\n\n  isAncestorPath: function(ancestor, path) {\n    return path.indexOf(ancestor) > -1;\n  },\n\n  renameAncestorPath: function(path, ancestor, newAncestor) {\n    return path.replace(ancestor, newAncestor);\n  },\n\n  joinPath: function(pathA, pathB) {\n    if (pathA[pathA.length-1] === '/') {\n      return pathA + pathB;\n    } else {\n      return pathA + '/' + pathB;\n    }\n  },\n\n  isSupportUploadFolder: function() {\n    return navigator.userAgent.indexOf('Firefox')!=-1 ||\n      navigator.userAgent.indexOf('Chrome') > -1;\n  },\n\n  getDefaultLibIconUrl: function(isBig) {\n    let size = Utils.isHiDPI() ? 48 : 24;\n    size = isBig ? 256 : size;\n    let icon_name = 'lib.png';\n    return mediaUrl + 'img/lib/' + size + '/' + icon_name;\n  },\n\n  getLibIconUrl: function(repo, isBig) {\n    let permission = repo.permission || repo.share_permission; //Compatible with regular repo and repo shared\n    let size = Utils.isHiDPI() ? 48 : 24;\n    size = isBig ? 256 : size;\n    let icon_name = 'lib.png';\n    if (repo.encrypted) {\n      icon_name = 'lib-encrypted.png';\n    }\n    if (permission === 'r' || permission === 'perview') {\n      icon_name = 'lib-readonly.png';\n    }\n\n    return mediaUrl + 'img/lib/' + size + '/' + icon_name;\n  },\n\n  getDirentIcon: function (dirent, isBig) {\n    let size = this.isHiDPI() ? 48 : 24;\n    size = isBig ? 192 : size;\n    if (dirent.isDir()) {\n      let readonly = false;\n      if (dirent.permission && (dirent.permission === 'r' || dirent.permission === 'preview')) {\n        readonly = true;\n      }\n      return this.getFolderIconUrl(readonly, size);\n    } else {\n      return this.getFileIconUrl(dirent.name, size);\n    }\n  },\n\n  getFolderIconUrl: function(readonly = false, size) {\n    if (!size) {\n      size = Utils.isHiDPI() ? 48 : 24;\n    }\n    size = size > 24 ? 192 : 24;\n    return `${mediaUrl}img/folder${readonly ? '-read-only-' : '-'}${size}.png`;\n  },\n\n  getFileIconUrl: function(filename, size) {\n    if (!size) {\n      size = Utils.isHiDPI() ? 48 : 24;\n    }\n    size = size > 24 ? 192 : 24;\n    let file_ext = '';\n    if (filename.lastIndexOf('.') == -1) {\n      return mediaUrl + 'img/file/' + size + '/' + this.FILEEXT_ICON_MAP['default'];\n    } else {\n      file_ext = filename.substr(filename.lastIndexOf('.') + 1).toLowerCase();\n    }\n\n    if (this.FILEEXT_ICON_MAP[file_ext]) {\n      return mediaUrl + 'img/file/' + size + '/' + this.FILEEXT_ICON_MAP[file_ext];\n    } else {\n      return mediaUrl + 'img/file/' + size + '/' + this.FILEEXT_ICON_MAP['default'];\n    }\n  },\n\n  getLibIconTitle: function(repo) {\n    var title;\n    let permission = repo.permission || repo.share_permission; //Compatible with regular repo and repo shared\n    if (repo.encrypted) {\n      title = gettext('Encrypted library');\n    } else if (repo.is_admin) { // shared with 'admin' permission\n      title = gettext('Admin access');\n    } else {\n      switch(permission) {\n        case 'rw':\n          title = gettext('Read-Write library');\n          break;\n        case 'r':\n          title = gettext('Read-Only library');\n          break;\n        case 'cloud-edit':\n          title = gettext('Preview-Edit-on-Cloud library');\n          break;\n        case 'preview':\n          title = gettext('Preview-on-Cloud library');\n          break;\n      }\n    }\n    return title;\n  },\n\n  getFolderIconTitle: function(options) {\n    var title;\n    switch(options.permission) {\n      case 'rw':\n        title = gettext('Read-Write folder');\n        break;\n      case 'r':\n        title = gettext('Read-Only folder');\n        break;\n      case 'cloud-edit':\n        title = gettext('Preview-Edit-on-Cloud folder');\n        break;\n      case 'preview':\n        title = gettext('Preview-on-Cloud folder');\n        break;\n    }\n    return title;\n  },\n\n  sharePerms: function(permission) {\n    var title;\n    switch(permission) {\n      case 'rw':\n        title = gettext('Read-Write');\n        break;\n      case 'r':\n        title = gettext('Read-Only');\n        break;\n      case 'admin':\n        title = gettext('Admin');\n        break;\n      case 'cloud-edit':\n        title = gettext('Preview-Edit-on-Cloud');\n        break;\n      case 'preview':\n        title = gettext('Preview-on-Cloud');\n        break;\n    }\n    return title;\n  },\n\n  sharePermsExplanation: function(permission) {\n    var title;\n    switch(permission) {\n      case 'rw':\n        title = gettext('User can read, write, upload, download and sync files.');\n        break;\n      case 'r':\n        title = gettext('User can read, download and sync files.');\n        break;\n      case 'admin':\n        title = gettext('Besides Write permission, user can also share the library.');\n        break;\n      case 'cloud-edit':\n        title = gettext('Same as Preview on cloud. But user can also edit files online via browser.');\n        break;\n      case 'preview':\n        title = gettext('User can only view files online via browser. Files can\\'t be downloaded.');\n        break;\n    }\n    return title;\n  },\n\n  formatSize: function(options) {\n    /*\n     * param: {bytes, precision}\n     */\n    var bytes = options.bytes;\n    var precision = options.precision || 0;\n\n    var kilobyte = 1000;\n    var megabyte = kilobyte * 1000;\n    var gigabyte = megabyte * 1000;\n    var terabyte = gigabyte * 1000;\n\n    if ((bytes >= 0) && (bytes < kilobyte)) {\n      return bytes + ' B';\n\n    } else if ((bytes >= kilobyte) && (bytes < megabyte)) {\n      return (bytes / kilobyte).toFixed(precision) + ' KB';\n\n    } else if ((bytes >= megabyte) && (bytes < gigabyte)) {\n      return (bytes / megabyte).toFixed(precision) + ' MB';\n\n    } else if ((bytes >= gigabyte) && (bytes < terabyte)) {\n      return (bytes / gigabyte).toFixed(precision) + ' GB';\n\n    } else if (bytes >= terabyte) {\n      return (bytes / terabyte).toFixed(precision) + ' TB';\n\n    } else {\n      return bytes + ' B';\n    }\n  },\n\n  formatBitRate: function(bits) {\n    var Bs;\n    if (typeof bits !== 'number') {\n      return '';\n    }\n    Bs = bits / 8;\n    if (Bs >= 1000000000) {\n      return (Bs / 1000000000).toFixed(2) + ' GB/s';\n    }\n    if (Bs >= 1000000) {\n      return (Bs / 1000000).toFixed(2) + ' MB/s';\n    }\n    if (Bs >= 1000) {\n      return (Bs / 1000).toFixed(2) + ' kB/s';\n    }\n    return Bs.toFixed(2) + ' B/s';\n  },\n\n  isMarkdownFile: function(filePath) {\n    let index = filePath.lastIndexOf('.');\n    if (index === -1) {\n      return false;\n    } else {\n      let type = filePath.substring(index).toLowerCase();\n      if (type === '.md' || type === '.markdown') {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  },\n\n  isInternalMarkdownLink: function(url, repoID) {\n    var re = new RegExp(serviceURL + '/lib/' + repoID + '.*\\.md$');\n    return re.test(url);\n  },\n\n  isInternalDirLink: function(url, repoID) {\n    var re = new RegExp(serviceURL + '/library/' + repoID + '.*');\n    return re.test(url);\n  },\n\n  getPathFromInternalMarkdownLink: function(url, repoID) {\n    var re = new RegExp(serviceURL + '/lib/' + repoID + '/file' + '(.*\\.md)');\n    var array = re.exec(url);\n    var path = decodeURIComponent(array[1]);\n    return path;\n  },\n  \n  getPathFromInternalDirLink: function(url, repoID) {\n    var re = new RegExp(serviceURL + '/library/' + repoID + '(/.*)');\n    var array = re.exec(url);\n    var path = decodeURIComponent(array[1]);\n    path = path.slice(1);\n    path = path.slice(path.indexOf('/'));\n    return path;\n  },\n\n  isWikiInternalMarkdownLink: function(url, slug) {\n    slug = encodeURIComponent(slug);\n    var re = new RegExp(serviceURL + '/wikis/' + slug + '.*\\.md$');\n    return re.test(url);\n  },\n\n  isWikiInternalDirLink: function(url, slug) {\n    slug = encodeURIComponent(slug);\n    var re = new RegExp(serviceURL + '/wikis/' + slug + '.*');\n    return re.test(url);\n  },\n\n  getPathFromWikiInternalMarkdownLink: function(url, slug) {\n    slug = encodeURIComponent(slug);\n    var re = new RegExp(serviceURL + '/wikis/' + slug + '(.*\\.md)');\n    var array = re.exec(url);\n    var path = array[1];\n    try {\n      path = decodeURIComponent(path);\n    } catch(err) {\n      path = path.replace(/%/g, '%25');\n      path = decodeURIComponent(path);\n    }\n    return path;\n  },\n  \n  getPathFromWikiInternalDirLink: function(url, slug) {\n    slug = encodeURIComponent(slug);\n    var re = new RegExp(serviceURL + '/wikis/' + slug + '(/.*)');\n    var array = re.exec(url);\n    var path = array[1];\n    try {\n      path = decodeURIComponent(path);\n    } catch(err) {\n      path = path.replace(/%/g, '%25');\n      path = decodeURIComponent(path);\n    }\n    return path;\n  },\n\n  compareTwoWord: function(wordA, wordB) {\n    // compare wordA and wordB at lower case\n    // if wordA >= wordB, return 1\n    // if wordA < wordB, return -1\n\n    var a_val, b_val,\n      a_uni = wordA.charCodeAt(0),\n      b_uni = wordB.charCodeAt(0);\n\n    if ((19968 < a_uni && a_uni < 40869) && (19968 < b_uni && b_uni < 40869)) {\n      // both are chinese words\n      a_val = strChineseFirstPY.charAt(a_uni - 19968).toLowerCase();\n      b_val = strChineseFirstPY.charAt(b_uni - 19968).toLowerCase();\n    } else if ((19968 < a_uni && a_uni < 40869) && !(19968 < b_uni && b_uni < 40869)) {\n      // a is chinese and b is english\n      return 1;\n    } else if (!(19968 < a_uni && a_uni < 40869) && (19968 < b_uni && b_uni < 40869)) {\n      // a is english and b is chinese\n      return -1;\n    } else {\n      // both are english words\n      a_val = wordA.toLowerCase();\n      b_val = wordB.toLowerCase();\n      return this.compareStrWithNumbersIn(a_val, b_val);\n    }\n\n    return a_val >= b_val ? 1 : -1;\n  },\n\n  // compare two strings which may have digits in them\n  // and compare those digits as number instead of string\n  compareStrWithNumbersIn: function(a, b) {\n    var reParts = /\\d+|\\D+/g;\n    var reDigit = /\\d/;\n    var aParts = a.match(reParts);\n    var bParts = b.match(reParts);\n    var isDigitPart;\n    var len = Math.min(aParts.length, bParts.length);\n    var aPart, bPart;\n\n    if (aParts && bParts &&\n      (isDigitPart = reDigit.test(aParts[0])) == reDigit.test(bParts[0])) {\n      // Loop through each substring part to compare the overall strings.\n      for (var i = 0; i < len; i++) {\n        aPart = aParts[i];\n        bPart = bParts[i];\n\n        if (isDigitPart) {\n          aPart = parseInt(aPart, 10);\n          bPart = parseInt(bPart, 10);\n        }\n\n        if (aPart != bPart) {\n          return aPart < bPart ? -1 : 1;\n        }\n\n        // Toggle the value of isDigitPart since the parts will alternate.\n        isDigitPart = !isDigitPart;\n      }\n    }\n\n    // Use normal comparison.\n    return (a >= b) - (a <= b);\n  },\n\n  sortRepos: function(repos, sortBy, sortOrder) {\n    const _this = this;\n    let comparator;\n\n    switch (`${sortBy}-${sortOrder}`) {\n      case 'name-asc':\n        comparator = function(a, b) {\n          if (!a.repo_name) {\n            return 1;\n          }\n          if (!b.repo_name) {\n            return -1;\n          }\n          var result = _this.compareTwoWord(a.repo_name, b.repo_name);\n          return result;\n        };\n        break;\n      case 'name-desc':\n        comparator = function(a, b) {\n          if (!a.repo_name) {\n            return -1;\n          }\n          if (!b.repo_name) {\n            return 1;\n          }\n          var result = _this.compareTwoWord(a.repo_name, b.repo_name);\n          return -result;\n        };\n        break;\n      case 'time-asc':\n        comparator = function(a, b) {\n          return a.last_modified < b.last_modified ? -1 : 1;\n        };\n        break;\n      case 'time-desc':\n        comparator = function(a, b) {\n          return a.last_modified < b.last_modified ? 1 : -1;\n        };\n        break;\n    }\n\n    repos.sort(comparator);\n    return repos;\n  },\n\n  sortDirents: function(items, sortBy, sortOrder) {\n    const _this = this;\n    let comparator;\n\n    switch (`${sortBy}-${sortOrder}`) {\n      case 'name-asc':\n        comparator = function(a, b) {\n          var result = _this.compareTwoWord(a.name, b.name);\n          return result;\n        };\n        break;\n      case 'name-desc':\n        comparator = function(a, b) {\n          var result = _this.compareTwoWord(a.name, b.name);\n          return -result;\n        };\n        break;\n      case 'time-asc':\n        comparator = function(a, b) {\n          return a.mtime < b.mtime ? -1 : 1;\n        };\n        break;\n      case 'time-desc':\n        comparator = function(a, b) {\n          return a.mtime < b.mtime ? 1 : -1;\n        };\n        break;\n    }\n\n    items.sort((a, b) => {\n      if (a.type == 'dir' && b.type == 'file') {\n        return -1;\n      } else if (a.type == 'file' && b.type == 'dir') {\n        return 1;\n      } else {\n        return comparator(a, b);\n      }\n    });\n    return items;\n  },\n\n  changeMarkdownNodes: function(nodes, fn) {\n    nodes.map((item) => {\n      fn(item); \n      if (item.nodes && item.nodes.length > 0){\n        Utils.changeMarkdownNodes(item.nodes, fn); \n      }\n    });\n\n    return nodes;\n  },\n\n  chooseLanguage: function(suffix) {\n    let mode;\n    switch(suffix) {\n      case 'py':\n        mode = 'python';\n        break;\n      case 'js':\n        mode = 'javascript';\n        break;\n      case 'c':\n        mode = 'text/x-csrc';\n        break;\n      case 'cpp':\n        mode = 'text/x-c++src';\n        break;\n      case 'java':\n        mode = 'text/x-java';\n        break;\n      case 'cs':\n        mode = 'text/x-csharp';\n        break;\n      case 'mdf':\n        mode = 'text/x-sql';\n        break;\n      case 'html':\n        mode = 'htmlmixed';\n        break;\n      default:\n        mode = suffix;\n    }\n    return mode;\n  },\n\n  DARK_COLOR_MAP: {\n    // old color\n    'red': '#D11507',\n    'orange': '#FF8C00',\n    'yellow': '#EDEF00',\n    'green': '#006400',\n    'cyan': '#00E0E1',\n    'blue': '#2510A3',\n    'indigo': '#350C56',\n    'purple': '#551054',\n    'pink': '#E3A5B0',\n    'azure': '#C4D0D0',\n    'lime': '#00E100',\n    'teal': '#006A6B',\n    'gray': '#545454',\n\n    // new color\n    '#FFA8A8': '#E49090',\n    '#FFA94D': '#E39136',\n    '#FFD43B': '#E0B815',\n    '#A0EC50': '#83CF32',\n    '#A9E34B': '#8DC72E',\n    '#63E6BE': '#43CAA4',\n    '#4FD2C9': '#2DB9B0',\n    '#72C3FC': '#57ABE3',\n    '#91A7FF': '#7A91E7',\n    '#E599F7': '#CC82DE',\n    '#B197FC': '#9B82E5',\n    '#F783AC': '#DF6D97',\n    '#CED4DA': '#A8ADB2',\n  },\n\n  getDarkColor: function(color) {\n    let darkColor;\n    darkColor = this.DARK_COLOR_MAP[color];\n    return darkColor;\n  },\n\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/utils.js","var unified = require('unified');\nvar markdown = require('remark-parse');\nvar slug = require('remark-slug');\nvar breaks = require('remark-breaks');\nvar remark2rehype = require('remark-rehype');\nvar format = require('rehype-format');\nvar raw = require('rehype-raw');\nvar xtend = require('xtend');\nvar toHTML = require('hast-util-to-html');\nvar sanitize = require('hast-util-sanitize');\nvar gh = require('hast-util-sanitize/lib/github');\nvar deepmerge = require('deepmerge').default;\n\nfunction stringify(config) {\n  var settings = xtend(config, this.data('settings'));\n  var schema = deepmerge(gh, {\n    'attributes': {\n      'input': [\n        'type',\n      ],\n      'li': [\n        'className'\n      ],\n      'code': [\n        'className',\n      ],\n    },\n    'tagNames': [\n      'input',\n      'code'\n    ]\n  });\n  this.Compiler = compiler;\n\n  function compiler(tree) {\n    // use sanity to remove dangerous html, the default is\n    var hast = sanitize(tree, schema);\n    return toHTML(hast, settings);\n  }\n}\n\n// markdown -> mdast -> html AST -> html\nvar processor = unified()\n  .use(markdown, {commonmark: true})\n  .use(breaks)\n  .use(slug)\n  .use(remark2rehype, {allowDangerousHTML: true})\n  .use(raw)\n  .use(format)\n  .use(stringify);\n\nvar processorGetAST = unified()\n  .use(markdown, {commonmark: true})\n  .use(slug);\n\nexport { processor, processorGetAST };\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/seafile-markdown2html.js"],"sourceRoot":""}